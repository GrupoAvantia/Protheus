#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\MATR978.CH"
#line 2 "d:\totvs 11\microsiga\protheus\my projects\materiais\matr978.prx"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Dialog.ch"
#line 28 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Font.ch"
#line 29 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\PTMenu.ch"
#line 31 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Print.ch"
#line 33 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Colors.ch"
#line 35 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Folder.ch"
#line 37 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\msobject.ch"
#line 38 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\VKey.ch"
#line 42 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\WinApi.ch"
#line 44 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\FWCommand.ch"
#line 47 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\FWCSS.CH"
#line 50 "PROTHEUS.CH"
#line 16 "d:\totvs 11\microsiga\protheus\my projects\materiais\matr978.prx"
Function MATR978()
Local lCPartes  := .F. 
Local aRegraCP  := {}
Local aLogsPart := {}
Local oReport



If ExistBlock("MA330CP") .And.  FindFunction("CalcEstCP")
	aRegraCP:=ExecBlock("MA330CP", .F. , .F. )
	If ValType(aRegraCP) # "A"
		aRegraCP:={}
	EndIf




	AjustaSX1()




	If Len(aRegraCP) > 0
		lCPartes:=MA330AvlCp(aRegraCP,aLogsPart)
	EndIf
	If !lCPartes
		Aviso("MTR978CP",If( cPaisLoc $ "ANG|PTG", "O custo em partes não esta configurado corretamente. favor verificar se todos os campos de custo em partes foram incluidos no dicionário de dados corretamente.", "O custo em partes não esta configurado corretamente. Favor verificar se todos os campos de custo em partes foram incluidos no dicionario de dados corretamente." ),{"Ok"})
	EndIf


	oDlg = MsDialog():New( 96, 9, 320, 530, If(cPaisLoc$"ANG|PTG","Kardex Por Custo Em Partes","Kardex por Custo em Partes"),,,.F.,,,,,,.T.,, ,.F. )
	 TGroup():New( 11, 6, 90, 257, "", oDlg,,,.T., )
	 TSay():New( 16, 15,{||  If(cPaisLoc$"ANG|PTG","Atenção: os valores impressos neste listagem  são baseados nos cálculos apurados através","ATENÇÃO: Os valores impressos neste relatorio são baseados nos calculos apurados atraves")},oDlg,,,.F.,.F.,.F.,.T.,,, 268, 8,.F.,.F.,.F.,.F.,.F.,.F. )
	 TSay():New( 26, 15,{||  If(cPaisLoc$"ANG|PTG","Do procedimento de recálculo do custo médio, por esse motivo e recomendado que o cliente tenha","da rotina de recalculo do custo medio, por esse motivo e recomendado que o cliente tenha")},oDlg,,,.F.,.F.,.F.,.T.,,, 268, 8,.F.,.F.,.F.,.F.,.F.,.F. )
	 TSay():New( 36, 15,{||  If(cPaisLoc$"ANG|PTG","Executado o procedimento  de recálculo  do custo médio pelo  menos uma vez para a movimentação","executado a rotina  de recalculo  do custo medio pelo  menos uma vez para a movimentação")},oDlg,,,.F.,.F.,.F.,.T.,,, 268, 8,.F.,.F.,.F.,.F.,.F.,.F. )
	 TSay():New( 46, 15,{||  If(cPaisLoc$"ANG|PTG","Que será impressa.","que sera impressa.")},oDlg,,,.F.,.F.,.F.,.T.,,, 268, 8,.F.,.F.,.F.,.F.,.F.,.F. )
	 SButton():New( 93, 230,1,{||  oDlg:End()}, oDlg,.T.,,)
	oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted,.T.,,,, oDlg:bRClicked, )

Else
	Aviso("MTR978SEM",If( cPaisLoc $ "ANG|PTG", "Não existe regra definida para utilização  do custo em partes. favor verificar se o ponto de entrada ma330cp esta compilado em seu ambiente.", "Não existe regra definida para utilização do custo em partes. Favor verificar se o ponto de entrada MA330CP esta compilado em seu ambiente." ),{"Ok"})
EndIf




If lCPartes
	oReport:= ReportDef()
	oReport:PrintDialog()
EndIf

Return






















Static Function ReportDef()

Local cPicB2Qt  := PesqPictQt("B2_QATU" ,18)
Local cTamB2Qt  := TamSX3("B2_QATU")[1]
Local cPicB2Cust:= PesqPict("SB2","B2_CM1",18)
Local cTamB2Cust:= TamSX3("B2_CM1")[1]
Local cPicD1Qt  := PesqPict("SD1","D1_QUANT" ,18)
Local cTamD1Qt  := TamSX3("D1_QUANT")[1]
Local cPicD1Cust:= PesqPict("SD1","D1_CUSTO",18)
Local cTamD1Cust:= TamSX3("D1_CUSTO")[1]
Local cPicD2Qt  := PesqPict("SD2","D2_QUANT" ,18)
Local cTamD2Qt  := TamSX3("D2_QUANT")[1]
Local cPicD2Cust:= PesqPict("SD2","D2_CUSTO1",18)
Local cTamD2Cust:= TamSX3("D2_CUSTO1")[1]
Local aOrdem    := {}
Local oSection1
Local oSection2
Local oSection3
Local oReport
Local oCell




Local lCusUnif := IIf(FindFunction("A330CusFil"),A330CusFil(),GetMV("MV_CUSFIL", .F. ))












oReport:= TReport():New("MATR978",If( cPaisLoc $ "ANG|PTG", "Kardex Por Custo Em Partes", "Kardex por Custo em Partes" ),"MTR978", {|oReport| ReportPrint(oReport)},If( cPaisLoc $ "ANG|PTG", "Este programa emitira uma relação com as movimentacoes", "Este programa emitira uma relacao com as movimentacoes" )+" "+If( cPaisLoc $ "ANG|PTG", "Dos artigos seleccionados, ordenados sequência lmente", "dos produtos selecionados, ordenados sequencialmente" )+" "+If( cPaisLoc $ "ANG|PTG", "Com os valores do custo em partes seleccionado.       ", "com os valores do custo em partes selecionado.       " ))
oReport:SetLandscape()
oReport:SetTotalInLine( .F. )
























Pergunte("MTR978", .F. )

Aadd( aOrdem, If( cPaisLoc $ "ANG|PTG", " código produto ", " Codigo Produto " ) )
Aadd( aOrdem, If( cPaisLoc $ "ANG|PTG", " Tipo Do Produto", " Tipo do Produto" ) )




oSection1 := TRSection():New(oReport,If( cPaisLoc $ "ANG|PTG", "Artigos (parte 1)", "Produtos (Parte 1)" ),{"SB1","SB2"},aOrdem)
oSection1 :SetTotalInLine( .F. )
oSection1 :SetReadOnly()
oSection1 :SetLineStyle()

TRCell():New(oSection1,"cProduto"	,"   ",If( cPaisLoc $ "ANG|PTG", "Código", "CODIGO" )  	,,	,,)
oSection1:Cell("cProduto"):GetFieldInfo("B1_COD")
TRCell():New(oSection1,"B1_DESC"	,"SB1",If( cPaisLoc $ "ANG|PTG", "Descrição", "DESCRIÇAO" )		,,30				,,)
TRCell():New(oSection1,"B1_UM"		,"SB1",If( cPaisLoc $ "ANG|PTG", "Um", "UM" )		,,	,,)
TRCell():New(oSection1,"cTipo"		,"   ",If( cPaisLoc $ "ANG|PTG", "Tipo", "TIPO" )		,"@!"		,2				,,)
TRCell():New(oSection1,"B1_GRUPO"	,"SB1",If( cPaisLoc $ "ANG|PTG", "Grupo", "GRUPO" )		,,	,,)
TRCell():New(oSection1,"nCusMed"	,"   ",If( cPaisLoc $ "ANG|PTG", "C.p. Médio", "C.P. MEDIO" )		,cPicB2Cust	,cTamB2Cust		,,)
TRCell():New(oSection1,"nQtdSal"	,"   ",If( cPaisLoc $ "ANG|PTG", "Qtd. Saldo", "QTD. SALDO" )		,cPicB2Qt	,cTamB2Qt		,,)
TRCell():New(oSection1,"nVlrSal"	,"   ",If( cPaisLoc $ "ANG|PTG", "Vlr.total Saldo", "VLR.TOTAL SALDO" )		,cPicB2Cust	,cTamB2Cust		,,)



oSection2 := TRSection():New(oSection1,If( cPaisLoc $ "ANG|PTG", "Artigos (parte 2)", "Produtos (Parte 2)" ),{"SB1","SB2","NNR"})
oSection2 :SetTotalInLine( .F. )
oSection2 :SetReadOnly()
oSection2 :SetLineStyle()

If cPaisLoc<>"CHI"
	TRCell():New(oSection2	,"B1_POSIPI"	,"SB1",If( cPaisLoc $ "ANG|PTG", "Posição Ipi", "POSICAO IPI" )		,	,,,)
Endif
If ( Type( "lVer116" ) == "L" ) .and.  lVer116
	TRCell():New(oSection2		,"NNR_DESCRI"	,"NNR",If( cPaisLoc $ "ANG|PTG", "Morada", "ENDERECO" )		,	,,,{|| If(lCusUnif , MV_PAR08 , Posicione("NNR",1,xFilial("NNR")+MV_PAR08,"NNR_DESCRI")) })
Else
	TRCell():New(oSection2		,"B2_LOCALIZ"	,"SB2",If( cPaisLoc $ "ANG|PTG", "Morada", "ENDERECO" )		,	,,,{|| If(lCusUnif , MV_PAR08 , SB2->B2_LOCALIZ) })
EndIf



oSection3 := TRSection():New(oSection2,If( cPaisLoc $ "ANG|PTG", "Movimentação dos artigos", "Movimentação dos produtos" ),{"SD1","SD2","SD3"})
oSection3 :SetHeaderPage()
oSection3 :SetTotalInLine( .F. )
oSection3 :SetTotalText(If( cPaisLoc $ "ANG|PTG", "T o t a i s  :", "T O T A I S  :" ))
oSection3 :SetReadOnly()

TRCell():New(oSection3,"dDtMov"		,"   ",If( cPaisLoc $ "ANG|PTG", "Operação", "OPERACAO" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Data", "DATA" )	,,,,)
TRCell():New(oSection3,"cTES"		,"   ",If( cPaisLoc $ "ANG|PTG", "Tes", "TES" )				,"@!"		,,,)
TRCell():New(oSection3,"cCF"		,"   ",If( cPaisLoc $ "ANG|PTG", "C.f", "C.F" )				,"@!"		,,,)
TRCell():New(oSection3,"cDoc"		,"   ",If( cPaisLoc $ "ANG|PTG", "Documento", "DOCUMENTO" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Número", "NUMERO" )	,"@!"		,,,)
TRCell():New(oSection3,"cParte"		,"   ",If( cPaisLoc $ "ANG|PTG", "Número", "NUMERO" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "C.partes", "C.PARTES" ) ,"@!"		,3	     	,,)
TRCell():New(oSection3,"Barra01"	,"   ","|"+Chr(13)+Chr(10)+"|"			,,,,{|| "|" })
TRCell():New(oSection3,"nENTQtd"	,"   ",If( cPaisLoc $ "ANG|PTG", "Entradas", "ENTRADAS" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Quantidade", "QUANTIDADE" )	,cPicD1Qt	,cTamD1Qt	,,,,,"RIGHT")
TRCell():New(oSection3,"nENTCus"	,"   ",If( cPaisLoc $ "ANG|PTG", "Entradas", "ENTRADAS" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "C.p. Total", "C.P. TOTAL" )	,cPicD1Cust	,cTamD1Cust	,,,,,"RIGHT")
TRCell():New(oSection3,"Barra02"	,"   ","|"+Chr(13)+Chr(10)+"|"			,,,,{|| "|" })
TRCell():New(oSection3,"nCusMov"	,"   ",If( cPaisLoc $ "ANG|PTG", "C.p. Médio", "C.P. MEDIO" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Do Movimento", "DO MOVIMENTO" )	,cPicB2Cust	,cTamB2Cust	,,,,,"RIGHT")
TRCell():New(oSection3,"Barra03"	,"   ","|"+Chr(13)+Chr(10)+"|"			,,,,{|| "|" })
TRCell():New(oSection3,"nSAIQtd"	,"   ",If( cPaisLoc $ "ANG|PTG", "Saídas", "SAIDAS" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Quantidade", "QUANTIDADE" )	,cPicD2Qt	,cTamD2Qt	,,,,,"RIGHT")
TRCell():New(oSection3,"nSAICus"	,"   ",If( cPaisLoc $ "ANG|PTG", "Saídas", "SAIDAS" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "C.p. Total", "C.P. TOTAL" )	,cPicD2Cust	,cTamD2Cust	,,,,,"RIGHT")
TRCell():New(oSection3,"Barra04"	,"   ","|"+Chr(13)+Chr(10)+"|"			,,,,{|| "|" })
TRCell():New(oSection3,"nSALDQtd"	,"   ",If( cPaisLoc $ "ANG|PTG", "Saldo", "SALDO" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Quantidade", "QUANTIDADE" )	,cPicB2Qt	,cTamB2Qt	,,,,,"RIGHT")
TRCell():New(oSection3,"nSALDCus"	,"   ",If( cPaisLoc $ "ANG|PTG", "Saldo", "SALDO" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Valor Total", "VALOR TOTAL" )	,cPicB2Cust	,cTamB2Cust	,,,,,"RIGHT")
TRCell():New(oSection3,"Barra05"	,"   ","|"+Chr(13)+Chr(10)+"|"			,,,,{|| "|" })
TRCell():New(oSection3,"cCCPVPJOP"	,"   ",If( cPaisLoc $ "ANG|PTG", "Cli,for,", "CLI,FOR," )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Cc , Pj Ou Op", "CC , PJ ou OP" )	,"@!"		,,,)

TRFunction():New(oSection3:Cell("nENTQtd")	,NIL,"SUM"		,,"",cPicD1Qt		,{|| IIf(!lDev,oSection3:Cell("nENTQtd"):GetValue( .T. ),(oSection3:Cell("nENTQtd"):GetValue( .T. ) * -1) ) }, .T. , .F. )
TRFunction():New(oSection3:Cell("nENTCus")	,NIL,"SUM"		,,"",cPicD1Cust	,{|| IIf(!lDev,oSection3:Cell("nENTCus"):GetValue( .T. ),(oSection3:Cell("nENTCus"):GetValue( .T. ) * -1) ) }, .T. , .F. )

TRFunction():New(oSection3:Cell("nSAIQtd")	,NIL,"SUM"		,,"",cPicD2Qt		,{|| IIf(!lDev,oSection3:Cell("nSAIQtd"):GetValue( .T. ),(oSection3:Cell("nSAIQtd"):GetValue( .T. ) * -1) ) }, .T. , .F. )
TRFunction():New(oSection3:Cell("nSAICus")	,NIL,"SUM"		,,"",cPicD2Cust	,{|| IIf(!lDev,oSection3:Cell("nSAICus"):GetValue( .T. ),(oSection3:Cell("nSAICus"):GetValue( .T. ) * -1) ) }, .T. , .F. )

TRFunction():New(oSection3:Cell("nSALDQtd"),NIL,"ONPRINT"	,,"",cPicB2Qt		,{|| oSection3:Cell("nSALDQtd"):GetValue( .T. ) }, .T. , .F. )
TRFunction():New(oSection3:Cell("nSALDCus"),NIL,"ONPRINT"	,,"",cPicB2Cust	,{|| oSection3:Cell("nSALDCus"):GetValue( .T. ) }, .T. , .F. )

oSection3:SetNoFilter("SD1")
oSection3:SetNoFilter("SD2")
oSection3:SetNoFilter("SD3")

Return(oReport)























Static Function ReportPrint(oReport)

Static lIxbConTes := NIL

Local oSection1 := oReport:Section(1)
Local oSection2 := oReport:Section(1):Section(1)
Local oSection3 := oReport:Section(1):Section(1):Section(1)
Local nOrdem    := oReport:Section(1):GetOrder()

Local cSelectD1 := ""
Local cWhereD1  := ""
Local cSelectD2 := ""
Local cWhereD2  := ""
Local cSelectD3 := ""
Local cWhereD3  := ""
Local cProdAnt  := ""
Local cLocalAnt := ""
Local cIndice	:= ""
Local cCampo1   := ""
Local cCampo2   := ""
Local cCampo3   := ""
Local cCampo4   := ""
Local cNumSeqTr := ""
Local cAlias    := ""
Local cWhereB1A := " "
Local cWhereB1B := " "
Local cWhereB1C := " "
Local cWhereB1D := " "

Local cQueryB1A := " "
Local cQueryB1B := " "
Local cQueryB1C := " "
Local cQueryB1D := " "

Local cUnion    := "%%"

Local aDadosTran:= {}

Local lFirst    := .T. 
Local lTransEnd := .T. 
Local lContinua := .F. 
Local lImpSMov  := .F. 
Local lImpS3    := .F. 

Local aSalAtu   := { 0,0,0,0,0,0,0 }
Local cTRBSD1	:= CriaTrab(, .F. )
Local cTRBSD2	:= Subs(cTrbSD1,1,7)+"A"
Local cTRBSD3	:= Subs(cTrbSD1,1,7)+"B"
Local cPicB2Qt2 := PesqPictQt("B2_QTSEGUM" ,18)
Local cSeqIni 	:= Replicate("z",6)

Local nInd      := 0
Local nRegTr    := 0
Local nTotRegs  := 0
Local aProdsMNT := {}
Local nX        := 0


Local lLocProc  := mv_par08 == GetMv("MV_LOCPROC")

Local lInverteMov := .F. 
Local lPriApropri := .T. 

Local lTesNEst := .F. 

Local cProdImp := GetMV("MV_PRODIMP")

Local cProdMNT := GetMv("MV_PRODMNT")

Local cProdTER := GetMv("MV_PRODTER")

Local aFilsCalc := MatFilCalc( mv_par16 == 1 )
Local cFilBack  := cFilAnt
Local nForFilial:= 0




	Local cAliasTop := ""
	cAliasTop := GetNextAlias()


Private bBloco   := { |nV,nX| Trim(nV)+IIf(Valtype(nX)="C","",StrZero(nX,2)) }

cProdMNT := cProdMNT + Space(15-Len(cProdMNT))
cProdTER := cProdTER + Space(15-Len(cProdTER))




Private lCusUnif := IIf(FindFunction("A330CusFil"),A330CusFil(),GetMV("MV_CUSFIL", .F. ))

lCusUnif:=lCusUnif .And.  mv_par08 == "**"

Private lDev := .F. 




If !Empty(aFilsCalc)

	For nForFilial := 1 To Len( aFilsCalc )

		If aFilsCalc[ nForFilial, 1 ]

			cFilAnt := aFilsCalc[ nForFilial, 2 ]

			oReport:EndPage()

			oReport:SetTitle(OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Kardex por custo em partes ", "KARDEX POR CUSTO EM PARTES " ))+IIf(mv_par11==1,OemToAnsi(If( cPaisLoc $ "ANG|PTG", "(sequência)", "(SEQUENCIA)" )),OemToAnsi(If( cPaisLoc $ "ANG|PTG", "(calculo) ", "(CALCULO) " )) ) + If(lCusUnif,"",OemToAnsi(If( cPaisLoc $ "ANG|PTG", "L o c a l :", "L O C A L :" ))+" "+mv_par08))

			If nOrdem == 1
				oReport:SetTitle( oReport:Title()+Alltrim(If( cPaisLoc $ "ANG|PTG", " (por ", " (Por " )+If( cPaisLoc $ "ANG|PTG", " código produto ", " Codigo Produto " )+" ,em "+AllTrim(GetMv("MV_SIMB"+Ltrim(Str(mv_par10))))+")")+" - " + aFilsCalc[ nForFilial, 3 ] )
			Else
				oReport:SetTitle( oReport:Title()+Alltrim(If( cPaisLoc $ "ANG|PTG", " (por ", " (Por " )+If( cPaisLoc $ "ANG|PTG", " Tipo Do Produto", " Tipo do Produto" )+" ,em "+AllTrim(GetMv("MV_SIMB"+Ltrim(Str(mv_par10))))+")")+" - " + aFilsCalc[ nForFilial, 3 ] )
			EndIf

			If mv_par09 $ "Ss"
				oSection3:Cell("cDoc"):SetTitle(If( cPaisLoc $ "ANG|PTG", "Sequência", "SEQUENCIA" )+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "Número", "NUMERO" ))
			EndIf

			dbSelectArea("SD1")
			nTotRegs += LastRec()

			dbSelectArea("SD2")
			nTotRegs += LastRec()

			dbSelectArea("SD3")
			nTotRegs += LastRec()

			dbSelectArea("SB2")
			dbSetOrder(1)
			nTotRegs += LastRec()






			lIxbConTes := IF(lIxbConTes == NIL,ExistBlock("MTAAVLTES"),lIxbConTes)








				MakeSqlExpr(oReport:uParam)




				oReport:Section(1):BeginQuery()




				cSelectD1 := "% D1_CP"+StrZero(mv_par17,2)

				If mv_par10 > 1
					cSelectD1 += StrZero(mv_par10,2)
				Else
					cSelectD1 += "01"
				EndIf
				cSelectD1 += " CUSTO,"
				cSelectD1 += "%"



				cWhereD1 := "%"
				cWhereD1 += "AND"
				If !lCusUnif
					cWhereD1 += " D1_LOCAL = '" + mv_par08 + "' AND"
				EndIf
				cWhereD1 += "%"



				cSelectD2 := "% D2_CP"+StrZero(mv_par17,2)

				If mv_par10 > 1
					cSelectD2 += StrZero(mv_par10,2)
				Else
					cSelectD2 += "01"
				EndIf
				cSelectD2 += " CUSTO,"
				cSelectD2 += "%"




				cWhereD2 := "%"
				cWhereD2 += "AND"
				If !lCusUnif
					cWhereD2 += " D2_LOCAL = '" + mv_par08 + "' AND"
				EndIf
				cWhereD2 += "%"



				cSelectD3 := "% D3_CP"+StrZero(mv_par17,2)

				If mv_par10 > 1
					cSelectD3 += StrZero(mv_par10,2)
				Else
					cSelectD3 += "01"
				EndIf
				cSelectD3 += " CUSTO,"
				cSelectD3 += "%"




			    cWhereD3 := "%"
				If SuperGetMV("MV_D3ESTOR", .F. , "N") == "N"
					cWhereD3 += " D3_ESTORNO <> 'S' AND"
				EndIf
				If SuperGetMV("MV_D3SERVI", .F. , "N") == "N" .And.  IntDL()
					cWhereD3 += " ( (D3_SERVIC = '   ') OR (D3_SERVIC <> '   ' AND D3_TM <= '500')  "
					cWhereD3 += " OR  (D3_SERVIC <> '   ' AND D3_TM > '500' AND D3_LOCAL ='"+SuperGetMV("MV_CQ", .F. , "98")+"') ) AND"
				EndIf
				If !lCusUnif .And.  !lLocProc
					cWhereD3 += " D3_LOCAL = '"+mv_par08+"' AND"
				EndIf
				cWhereD3+= " SB1.B1_COD >= '"+mv_par01+"' AND SB1.B1_COD <= '"+mv_par02+"' AND"
				cWhereD3 += " SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
				cWhereD3 += " SB1.B1_GRUPO >= '"+mv_par14+"' AND SB1.B1_GRUPO <= '"+mv_par15+"' AND SB1.B1_COD <> '"+cProdimp+"' AND "
				cWhereD3 += " SB1.D_E_L_E_T_=' ' AND"
				cWhereD3 += "%"



				cWhereB1A:= "%"
			   	cWhereB1B:= "%"
			    cWhereB1C:= "%"
			    cWhereB1D:= "%"
				cWhereB1A+= " AND SB1.B1_COD >= '"+mv_par01+"' AND SB1.B1_COD <= '"+mv_par02+"'"
				cWhereB1B+= " AND SB1.B1_COD = SB1EXS.B1_COD"
				cWhereB1C+= " SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
				cWhereB1D+= " SB1EXS.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1EXS.B1_COD >= '"+mv_par01+"' AND SB1EXS.B1_COD <= '"+mv_par02+"' AND SB1EXS.B1_TIPO >= '"+mv_par03+"' AND SB1EXS.B1_TIPO <= '"+mv_par04+"' AND"

				cWhereB1C += " SB1.B1_GRUPO >= '"+mv_par14+"' AND SB1.B1_GRUPO <= '"+mv_par15+"' AND SB1.B1_COD <> '"+cProdimp+"' AND "
				cWhereB1C += " SB1.D_E_L_E_T_=' '"
				cWhereB1D += " SB1EXS.B1_GRUPO >= '"+mv_par14+"' AND SB1EXS.B1_GRUPO <= '"+mv_par15+"' AND SB1EXS.B1_COD <> '"+cProdimp+"' AND "
				cWhereB1D += " SB1EXS.D_E_L_E_T_=' '"

				cQueryB1A:= Subs(cWhereB1A,2)
				cQueryB1B:= Subs(cWhereB1B,2)
				cQueryB1C:= Subs(cWhereB1C,2)
				cQueryB1D:= Subs(cWhereB1D,2)

				cWhereB1A+= "%"
			   	cWhereB1B+= "%"
			    cWhereB1C+= "%"
			    cWhereB1D+= "%"




				cQueryD1 := " FROM "
				cQueryD1 += RetSqlName("SB1") + " SB1"
				cQueryD1 += (", " + RetSqlName("SD1")+ " SD1 ")
				cQueryD1 += (", " + RetSqlName("SF4")+ " SF4 ")
				cQueryD1 += " WHERE SB1.B1_COD = D1_COD"
				cQueryD1 += (" AND D1_FILIAL = '"+xFilial("SD1")+"'")
				cQueryD1 += (" AND F4_FILIAL = '" + xFilial("SF4") + "'")
				cQueryD1 += (" AND SD1.D1_TES = F4_CODIGO AND F4_ESTOQUE = 'S'")
				cQueryD1 += (" AND D1_DTDIGIT >= '" + DTOS(mv_par05) + "'")
				cQueryD1 += (" AND D1_DTDIGIT <= '" + DTOS(mv_par06) + "'")
				cQueryD1 +=  " AND D1_ORIGLAN <> 'LF'"
				If !lCusUnif
					cQueryD1 += " AND D1_LOCAL = '" + mv_par08 + "'"
				EndIf
				cQueryD1 += " AND SD1.D_E_L_E_T_=' ' AND SF4.D_E_L_E_T_=' '"

				cQueryD2 := " FROM "
				cQueryD2 += RetSqlName("SB1") + " SB1 , "+ RetSqlName("SD2")+ " SD2 , "+ RetSqlName("SF4")+" SF4 "
				cQueryD2 += " WHERE SB1.B1_COD = D2_COD AND D2_FILIAL = '"+xFilial("SD2")+"'"
				cQueryD2 += " AND F4_FILIAL = '"+xFilial("SF4")+"' AND SD2.D2_TES = F4_CODIGO AND F4_ESTOQUE = 'S'"
				cQueryD2 += " AND D2_EMISSAO >= '"+DTOS(mv_par05)+"' AND D2_EMISSAO <= '"+DTOS(mv_par06)+"'"
				cQueryD2 += " AND D2_ORIGLAN <> 'LF'"
				If !lCusUnif
					cQueryD2 += " AND D2_LOCAL = '"+mv_par08+"'"
				EndIf
				cQueryD2 += " AND SD2.D_E_L_E_T_=' ' AND SF4.D_E_L_E_T_=' '"

				cQueryD3 := " FROM "
				cQueryD3 += RetSqlName("SB1") + " SB1 , "+ RetSqlName("SD3")+ " SD3 "
				cQueryD3 += " WHERE SB1.B1_COD = D3_COD AND D3_FILIAL = '"+xFilial("SD3")+"' "
				cQueryD3 += " AND D3_EMISSAO >= '"+DTOS(mv_par05)+"' AND D3_EMISSAO <= '"+DTOS(mv_par06)+"'"
				If SuperGetMV("MV_D3ESTOR", .F. , "N") == "N"
					cQueryD3 += " AND D3_ESTORNO <> 'S'"
				EndIf
				If SuperGetMV("MV_D3SERVI", .F. , "N") == "N" .And.  IntDL()
					cQueryD3 += " AND ( (D3_SERVIC = '   ') OR (D3_SERVIC <> '   ' AND D3_TM <= '500')  "
					cQueryD3 += " OR  (D3_SERVIC <> '   ' AND D3_TM > '500' AND D3_LOCAL ='"+SuperGetMV("MV_CQ", .F. , "98")+"') )"
				EndIf
				If !lCusUnif .And.  !lLocProc
					cQueryD3 += " AND D3_LOCAL = '"+mv_par08+"'"
				EndIf
				cQueryD3 += " AND SD3.D_E_L_E_T_=' '"

				cQuerySub:= "SELECT 1 "

				If mv_par07 == 1
					cQuery2 := " AND NOT EXISTS (" + cQuerySub + cQueryD1
					cQuery2 += cQueryB1B
					cQuery2 += " AND "
					cQuery2 += cQueryB1C
					cQuery2 += ") AND NOT EXISTS ("
					cQuery2 += cQuerySub + cQueryD2
					cQuery2 += cQueryB1B
					cQuery2 += " AND "
					cQuery2 += cQueryB1C
					cQuery2 += ") AND NOT EXISTS ("
					cQuery2 += cQuerySub + cQueryD3
					cQuery2 += cQueryB1B
					cQuery2 += " AND "
					cQuery2 += cQueryB1C + ")"

					cUnion := "%"
					cUnion += " UNION SELECT 'SB1'"
					cUnion += ", SB1EXS.B1_COD"
					cUnion += ", SB1EXS.B1_TIPO"
					cUnion += ", SB1EXS.B1_UM"
					cUnion += ", SB1EXS.B1_GRUPO"
					cUnion += ", SB1EXS.B1_DESC"
					cUnion += ", SB1EXS.B1_POSIPI"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", 0"
					cUnion += ", 0"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", 0"
					cUnion += ", ''"
					cUnion += ", ''"
					cUnion += ", 0"
					cUnion += " FROM "+RetSqlName("SB1") + " SB1EXS WHERE"
					cUnion += cQueryB1D
					cUnion += cQuery2
					cUnion += "%"
				EndIf

				cOrder := "%"
				If nOrdem == 1
					cOrder += " 2,"
				ElseIf nOrdem == 2
					cOrder += " 3,2,"
				EndIf

				If mv_par11 == 1
					cOrder += "17,12"
				Else
					If lCusUnif
						cOrder += "8,12"
					Else
						cOrder += "17,8,12"
					EndIf
				EndIf
				cOrder += "%"































































































































__execSql(cAliasTop," SELECT 'SD1' ARQ, SB1.B1_COD PRODUTO, SB1.B1_TIPO TIPO, SB1.B1_UM, SB1.B1_GRUPO, SB1.B1_DESC, SB1.B1_POSIPI, D1_SEQCALC SEQCALC, D1_DTDIGIT DATA, D1_TES TES, D1_CF CF, D1_NUMSEQ SEQUENCIA, D1_DOC DOCUMENTO, D1_SERIE SERIE, D1_QUANT QUANTIDADE, D1_QTSEGUM QUANT2UM, D1_LOCAL ARMAZEM, ' ' PROJETO, ' ' OP, ' ' CC, D1_FORNECE FORNECEDOR, D1_LOJA LOJA, ' ' PEDIDO, D1_TIPO TIPONF,  "+___SQLGetValue(CSELECTD1)+" ' ' TRT, D1_LOTECTL LOTE, SD1.R_E_C_N_O_ NRECNO FROM  "+RetSqlName('SB1')+" SB1, "+RetSqlName('SD1')+" SD1, "+RetSqlName('SF4')+" SF4 WHERE SB1.B1_COD = SD1.D1_COD AND SD1.D1_FILIAL =  '" +xFilial('SD1')+"'  AND SF4.F4_FILIAL =  '" +xFilial('SF4')+"'  AND SD1.D1_TES = SF4.F4_CODIGO AND SF4.F4_ESTOQUE = 'S' AND SD1.D1_DTDIGIT >=  "+___SQLGetValue(MV_PAR05)+" AND SD1.D1_DTDIGIT <=  "+___SQLGetValue(MV_PAR06)+" AND SD1.D1_ORIGLAN <> 'LF'  "+___SQLGetValue(CWHERED1)+" SD1.D_E_L_E_T_= ' ' AND SF4.D_E_L_E_T_= ' '  "+___SQLGetValue(CWHEREB1A)+" AND  "+___SQLGetValue(CWHEREB1C)+" UNION SELECT 'SD2', SB1.B1_COD, SB1.B1_TIPO, SB1.B1_UM, SB1.B1_GRUPO, SB1.B1_DESC, SB1.B1_POSIPI, D2_SEQCALC, D2_EMISSAO, D2_TES, D2_CF, D2_NUMSEQ, D2_DOC, D2_SERIE, D2_QUANT, D2_QTSEGUM, D2_LOCAL, ' ', ' ', ' ', D2_CLIENTE, D2_LOJA, D2_PEDIDO, D2_TIPO,  "+___SQLGetValue(CSELECTD2)+" ' ', D2_LOTECTL, SD2.R_E_C_N_O_ SD2RECNO FROM  "+RetSqlName('SB1')+" SB1, "+RetSqlName('SD2')+" SD2, "+RetSqlName('SF4')+" SF4 WHERE SB1.B1_COD = SD2.D2_COD AND SD2.D2_FILIAL =  '" +xFilial('SD2')+"'  AND SF4.F4_FILIAL =  '" +xFilial('SF4')+"'  AND SD2.D2_TES = SF4.F4_CODIGO AND SF4.F4_ESTOQUE = 'S' AND SD2.D2_EMISSAO >=  "+___SQLGetValue(MV_PAR05)+" AND SD2.D2_EMISSAO <=  "+___SQLGetValue(MV_PAR06)+" AND SD2.D2_ORIGLAN <> 'LF'  "+___SQLGetValue(CWHERED2)+" SD2.D_E_L_E_T_= ' ' AND SF4.D_E_L_E_T_= ' '  "+___SQLGetValue(CWHEREB1A)+" AND  "+___SQLGetValue(CWHEREB1C)+" UNION SELECT 'SD3', SB1.B1_COD, SB1.B1_TIPO, SB1.B1_UM, SB1.B1_GRUPO, SB1.B1_DESC, SB1.B1_POSIPI, D3_SEQCALC, D3_EMISSAO, D3_TM, D3_CF, D3_NUMSEQ, D3_DOC, ' ', D3_QUANT, D3_QTSEGUM, D3_LOCAL, D3_PROJPMS, D3_OP, D3_CC, ' ', ' ', ' ', ' ',  "+___SQLGetValue(CSELECTD3)+" D3_TRT, D3_LOTECTL, SD3.R_E_C_N_O_ SD3RECNO FROM  "+RetSqlName('SB1')+" SB1, "+RetSqlName('SD3')+" SD3 WHERE SB1.B1_COD = SD3.D3_COD AND SD3.D3_FILIAL =  '" +xFilial('SD3')+"'  AND SD3.D3_EMISSAO >=  "+___SQLGetValue(MV_PAR05)+" AND SD3.D3_EMISSAO <=  "+___SQLGetValue(MV_PAR06)+" AND  "+___SQLGetValue(CWHERED3)+" SD3.D_E_L_E_T_= ' '  "+___SQLGetValue(CUNION)+" ORDER BY  "+___SQLGetValue(CORDER),{},.F.)









				oReport:Section(1):EndQuery()




				dbSelectArea(cAliasTop)
				oReport:SetMeter(nTotRegs)

				While !oReport:Cancel() .And.  !(cAliasTop)->(Eof())

					If oReport:Cancel()
						Exit
					EndIf

					oReport:IncMeter()



					dbSelectArea("SB2")
					If !dbSeek(xFilial("SB2")+(cAliasTop)->PRODUTO+If(lCusUnif,"",mv_par08))
						dbSelectArea(cAliasTop)
						dbSkip()
						Loop
					EndIf

					dbSelectArea(cAliasTop)
					cProdAnt  := (cAliasTop)->PRODUTO
					cLocalAnt := SB2->B2_LOCAL

					lFirst:= .F. 

					MR978ImpS1(@aSalAtu,cAliasTop, .T. ,lCusUnif,oSection1,oSection2,oReport)

					oSection3:Init()
					While !oReport:Cancel() .And.  !(cAliasTop)->(Eof()) .And.  (cAliasTop)->PRODUTO = cProdAnt .And.  If(lCusUnif .Or.  lLocProc, .T. ,IIf((cAliasTop)->ARQ <> "SB1",(cAliasTop)->ARMAZEM==cLocalAnt, .T. ))
						oReport:IncMeter()
						lContinua := .F. 
						lImpSMov  := .F. 
						If Alltrim((cAliasTop)->ARQ) $ "SD1/SD2"
							lFirst:= .T. 
							SF4->(dbSeek(xFilial("SF4")+(cAliasTop)->TES))







							If lIxbConTes .And.  SF4->F4_ESTOQUE <> "S"
								lTesNEst := ExecBlock("MTAAVLTES", .F. , .F. )
								lTesNEst := If(ValType(lTesNEst) # "L", .F. ,lTesNEst)
							EndIf
							If SF4->F4_ESTOQUE <> "S" .And.  !lTesNEst
								dbSkip()
								Loop
							EndIf
						ElseIf Alltrim((cAliasTop)->ARQ) == "SD3"
							lFirst:= .T. 




							lInverteMov:= .F. 
							If (cAliasTop)->ARMAZEM <> cLocalAnt .Or.  lCusUnif
								If !(Substr((cAliasTop)->CF,3,1) == "3")
									If !lCusUnif
										dbSkip()
										Loop
									EndIf
								ElseIf lPriApropri
									lInverteMov:= .T. 
								EndIf
							EndIf




							If mv_par13 == 2 .And.  Substr((cAliasTop)->CF,3,1) == "4"
								cNumSeqTr := (cAliasTOP)->(PRODUTO+SEQUENCIA+ARMAZEM)


								aDadosTran:={(cAliasTOP)->TES,(cAliasTOP)->QUANTIDADE,(cAliasTOP)->CUSTO,(cAliasTOP)->QUANT2UM,(cAliasTOP)->TIPO, (cAliasTOP)->DATA,(cAliasTOP)->CF,(cAliasTOP)->SEQUENCIA,(cAliasTOP)->DOCUMENTO,(cAliasTOP)->PRODUTO, (cAliasTOP)->OP,(cAliasTOP)->PROJETO,(cAliasTOP)->CC,(cAliasTOP)->ARQ}
								dbSkip()
								If (cAliasTOP)->(PRODUTO+SEQUENCIA+ARMAZEM) == cNumSeqTr
									dbSkip()
									Loop
								Else
									lContinua := .T. 
									If !Localiza(aDadosTran[10])
										If lFirst
											oSection3:Cell("dDtMov"):SetValue(STOD(aDadosTran[6]))
											oSection3:Cell("cTES"):SetValue(aDadosTran[1])
											If ( cPaisLoc=="BRA" )
												oSection3:Cell("cCF"):Show()
												If	lInverteMov
													oSection3:Cell("cCF"):SetValue(Substr(aDadosTran[7],1,3)+"*")
												Else
													oSection3:Cell("cCF"):SetValue(aDadosTran[7])
												EndIf
											Else
												oSection3:Cell("cCF"):Hide()
												oSection3:Cell("cCF"):SetValue("   ")
											EndIf
											If mv_par09 $ "Ss"
												oSection3:Cell("cDoc"):SetValue(aDadosTran[8])
		                                        oSection3:Cell("cParte"):SetValue(StrZero(mv_par17,2))
											Else
												oSection3:Cell("cDoc"):SetValue(aDadosTran[9])
		                                        oSection3:Cell("cParte"):SetValue(StrZero(mv_par17,2))
											EndIf
										EndIf
										If aDadosTran[1] <= "500"
											oSection3:Cell("nENTQtd"):Show()
											oSection3:Cell("nENTCus"):Show()
											oSection3:Cell("nCusMov"):Show()

											oSection3:Cell("nENTQtd"):SetValue(aDadosTran[2])
											oSection3:Cell("nENTCus"):SetValue(aDadosTran[3])
											oSection3:Cell("nCusMov"):SetValue(aDadosTran[3] / aDadosTran[2])

											oSection3:Cell("nSAIQtd"):Hide()
											oSection3:Cell("nSAICus"):Hide()
											oSection3:Cell("nSAIQtd"):SetValue(0)
											oSection3:Cell("nSAICus"):SetValue(0)

											aSalAtu[1] += aDadosTran[2]
											aSalAtu[mv_par10+1] += aDadosTran[3]
											aSalAtu[7] += aDadosTran[4]
										Else
											oSection3:Cell("nENTQtd"):Hide()
											oSection3:Cell("nENTCus"):Hide()
											oSection3:Cell("nENTQtd"):SetValue(0)
											oSection3:Cell("nENTCus"):SetValue(0)

											oSection3:Cell("nCusMov"):Show()
											oSection3:Cell("nSAIQtd"):Show()
											oSection3:Cell("nSAICus"):Show()

											oSection3:Cell("nCusMov"):SetValue(aDadosTran[3] / aDadosTran[2])
											oSection3:Cell("nSAIQtd"):SetValue(aDadosTran[2])
											oSection3:Cell("nSAICus"):SetValue(aDadosTran[3])

											aSalAtu[1] -= aDadosTran[2]
											aSalAtu[mv_par10+1] -= aDadosTran[3]
											aSalAtu[7] -= aDadosTran[4]
										EndIf
									Else
										lTransEnd := .F. 
									EndIf
								EndIf
							EndIf
						EndIf
						If lFirst .And.  !lContinua .And.  lTransEnd
							oSection3:Cell("dDtMov"):SetValue(STOD(DATA))
							oSection3:Cell("cTES"):SetValue(TES)
							If ( cPaisLoc=="BRA" )
								oSection3:Cell("cCF"):Show()
								oSection3:Cell("cCF"):SetValue(CF)
								If	lInverteMov
									oSection3:Cell("cCF"):SetValue(Substr(CF,1,3)+"*")
								Else
									oSection3:Cell("cCF"):SetValue(CF)
								EndIf
							Else
								oSection3:Cell("cCF"):Hide()
								oSection3:Cell("cCF"):SetValue("   ")
							EndIf
							If mv_par09 $ "Ss"
								oSection3:Cell("cDoc"):SetValue(SEQUENCIA)
                                oSection3:Cell("cParte"):SetValue(StrZero(mv_par17,2))
							Else
								oSection3:Cell("cDoc"):SetValue(DOCUMENTO)
                                oSection3:Cell("cParte"):SetValue(StrZero(mv_par17,2))
							EndIf
						EndIf

						Do Case
							Case Alltrim((cAliasTop)->ARQ) == "SD1" .And.  !lContinua .And.  lTransEnd
								lDev:=MTR978Dev("SD1",cAliasTop)
								If (cAliasTOP)->TES <= "500" .And.  !lDev
									If (cAliasTOP)->TIPONF <> "C"
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nCusMov"):Show()
									Else
										oSection3:Cell("nCusMov"):SetValue(0)
										oSection3:Cell("nCusMov"):Hide()
									EndIf

									oSection3:Cell("nENTQtd"):Show()
									oSection3:Cell("nENTCus"):Show()

									oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)

									oSection3:Cell("nSAIQtd"):Hide()
									oSection3:Cell("nSAICus"):Hide()
									oSection3:Cell("nSAIQtd"):SetValue(0)
									oSection3:Cell("nSAICus"):SetValue(0)

									aSalAtu[1] += (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
									aSalAtu[7] += (cAliasTOP)->QUANT2UM
								Else
									If (cAliasTOP)->TIPONF <> "C"
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nCusMov"):Show()
									Else
										oSection3:Cell("nCusMov"):SetValue(0)
										oSection3:Cell("nCusMov"):Hide()
									EndIf

									oSection3:Cell("nENTQtd"):Hide()
									oSection3:Cell("nENTCus"):Hide()
									oSection3:Cell("nENTQtd"):SetValue(0)
									oSection3:Cell("nENTCus"):SetValue(0)

									oSection3:Cell("nSAIQtd"):Show()
									oSection3:Cell("nSAICus"):Show()

									If lDev
										oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)

										aSalAtu[1] += (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1] += (cAliasTOP)->CUSTO
										aSalAtu[7] += (cAliasTOP)->QUANT2UM
									Else
										oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)

										aSalAtu[1] 			-= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
										aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
									EndIf
								EndIf
							Case Alltrim((cAliasTop)->ARQ) = "SD2" .And.  !lContinua .And.  lTransEnd
								lDev:=MTR978Dev("SD2",cAliasTop)
								If (cAliasTOP)->TES <= "500" .Or.  lDev
									If lDev
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()

										oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)

										aSalAtu[1] 			-= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
										aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
									Else
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()

										oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)

										aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	+= (cAliasTOP)->CUSTO
										aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
									EndIf

									If (cAliasTOP)->TIPONF <> "C"
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nCusMov"):Show()
									Else
										oSection3:Cell("nCusMov"):SetValue(0)
										oSection3:Cell("nCusMov"):Hide()
									EndIf
									oSection3:Cell("nSAIQtd"):Hide()
									oSection3:Cell("nSAICus"):Hide()
									oSection3:Cell("nSAIQtd"):SetValue(0)
									oSection3:Cell("nSAICus"):SetValue(0)
								Else
									If (cAliasTOP)->TIPONF <> "C"
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nCusMov"):Show()
									Else
										oSection3:Cell("nCusMov"):SetValue(0)
										oSection3:Cell("nCusMov"):Hide()
									EndIf

									oSection3:Cell("nENTQtd"):Hide()
									oSection3:Cell("nENTCus"):Hide()
									oSection3:Cell("nENTQtd"):SetValue(0)
									oSection3:Cell("nENTCus"):SetValue(0)

									oSection3:Cell("nSAIQtd"):Show()
									oSection3:Cell("nSAICus"):Show()

									oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)

									aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
									aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
								EndIf
							Case Alltrim((cAliasTop)->ARQ) == "SD3" .And.  !lContinua .And.  lTransEnd
								lDev := .F. 
								If	lInverteMov
									If (cAliasTOP)->TES > "500"
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										oSection3:Cell("nCusMov"):Show()

										oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)

										oSection3:Cell("nSAIQtd"):Hide()
										oSection3:Cell("nSAICus"):Hide()
										oSection3:Cell("nSAIQtd"):SetValue(0)
										oSection3:Cell("nSAICus"):SetValue(0)

										aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	+= (cAliasTOP)->CUSTO
										aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
									Else
										oSection3:Cell("nENTQtd"):Hide()
										oSection3:Cell("nENTCus"):Hide()
										oSection3:Cell("nENTQtd"):SetValue(0)
										oSection3:Cell("nENTCus"):SetValue(0)

										oSection3:Cell("nCusMov"):Show()
										oSection3:Cell("nSAIQtd"):Show()
										oSection3:Cell("nSAICus"):Show()

										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)

										aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
										aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
									EndIf
									If lCusUnif
										lPriApropri:= .F. 
									EndIf
								Else
									If (cAliasTOP)->TES <= "500"
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										oSection3:Cell("nCusMov"):Show()

										oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)

										oSection3:Cell("nSAIQtd"):Hide()
										oSection3:Cell("nSAICus"):Hide()
										oSection3:Cell("nSAIQtd"):SetValue(0)
										oSection3:Cell("nSAICus"):SetValue(0)

										aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	+= (cAliasTOP)->CUSTO
										aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
									Else
										oSection3:Cell("nENTQtd"):Hide()
										oSection3:Cell("nENTCus"):Hide()
										oSection3:Cell("nENTQtd"):SetValue(0)
										oSection3:Cell("nENTCus"):SetValue(0)

										oSection3:Cell("nCusMov"):Show()
										oSection3:Cell("nSAIQtd"):Show()
										oSection3:Cell("nSAICus"):Show()

										oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
										oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)

										aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
										aSalAtu[mv_par10+1]	-= (cAliasTOP)->CUSTO
										aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
									EndIf
									If lCusUnif
										lPriApropri:= .T. 
									EndIf
								EndIf
						EndCase
						If lFirst .And.  lTransEnd
							oSection3:Cell("nSALDQtd"):SetValue(aSalAtu[1])
							oSection3:Cell("nSALDCus"):SetValue(aSalAtu[mv_par10+1])
						EndIf
						Do Case
							Case Alltrim((cAliasTop)->ARQ) == "SD3" .And.  !lContinua .And.  lTransEnd
								If Empty((cAliasTOP)->OP) .And.  Empty((cAliasTOP)->PROJETO)
									oSection3:Cell("cCCPVPJOP"):SetValue("CC"+(cAliasTOP)->CC)
								ElseIf !Empty((cAliasTOP)->PROJETO)
									oSection3:Cell("cCCPVPJOP"):SetValue("PJ"+(cAliasTOP)->PROJETO)
								ElseIf !Empty((cAliasTOP)->OP)
									oSection3:Cell("cCCPVPJOP"):SetValue("OP"+(cAliasTOP)->OP)
								EndIf
							Case Alltrim((cAliasTop)->ARQ) == "SD1" .And.  !lContinua .And.  lTransEnd
								oSection3:Cell("cCCPVPJOP"):SetValue("F-"+(cAliasTOP)->FORNECEDOR)
							Case Alltrim((cAliasTop)->ARQ) == "SD2" .And.  !lContinua .And.  lTransEnd







								If ((cAliasTop)->TIPONF) == "B"
									oSection3:Cell("cCCPVPJOP"):SetValue("F-"+(cAliasTop)->FORNECEDOR)
								Else
									oSection3:Cell("cCCPVPJOP"):SetValue("C-"+(cAliasTop)->FORNECEDOR)
								EndIf
							Case lContinua .And.  aDadosTran[14] == "SD3" .And.  lTransEnd
								If Empty(aDadosTran[11]) .And.  Empty(aDadosTran[12])
									oSection3:Cell("cCCPVPJOP"):SetValue("CC"+aDadosTran[13])
								ElseIf !Empty(aDadosTran[12])
									oSection3:Cell("cCCPVPJOP"):SetValue("PJ"+aDadosTran[12])
								ElseIf !Empty(aDadosTran[11])
									oSection3:Cell("cCCPVPJOP"):SetValue("OP"+aDadosTran[11])
								EndIf
						EndCase

						If lFirst .And.  lTransEnd
							oSection3:PrintLine()
						Endif

						lTransEnd := .T. 

						If !lInverteMov .Or.  (lInverteMov .And.  lPriApropri)
							If !lContinua
								dbSkip()
							EndIf
						EndIf
					EndDo

					If lFirst
						oReport:PrintText(If( cPaisLoc $ "ANG|PTG", "Qtd. na segunda um: ", "QTD. NA SEGUNDA UM: " )+TransForm(aSalAtu[7],cPicB2Qt2),,oSection3:Cell("nSAICus"):ColPos())
					Else
						If !MTR978IsMNT()
							oReport:PrintText(If( cPaisLoc $ "ANG|PTG", "Não Houve Movimentação Para Este Artigo", "NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO" ))
							oReport:ThinLine()
							lImpSMov := .T. 
						Else
							If FindFunction("NGProdMNT")
								aProdsMNT := aClone(NGProdMNT())
								If aScan(aProdsMNT, {|x| AllTrim(x) == AllTrim(SB1->B1_COD) }) == 0
									oReport:PrintText(If( cPaisLoc $ "ANG|PTG", "Não Houve Movimentação Para Este Artigo", "NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO" ))
									oReport:ThinLine()
									lImpSMov := .T. 
								EndIf
							ElseIf SB1->B1_COD <> cProdMNT .And.  SB1->B1_COD <> cProdTER
								oReport:PrintText(If( cPaisLoc $ "ANG|PTG", "Não Houve Movimentação Para Este Artigo", "NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO" ))
								oReport:ThinLine()
								lImpSMov := .T. 
							EndIf
						EndIf
					EndIf

					oSection1:Finish()
					oSection2:Finish()
					If !lImpSMov
						oSection3:Finish()
					Endif
				EndDo
				dbSelectArea(cAliasTop)
				dbCloseArea()


























































































































































































































































































































































































































































































































































































		EndIf

	next

EndIf


cFilAnt := cFilBack

Return NIL





















Static Function MTR978Dev(cAlias,cAliasTop)
Static lListaDev := NIL

Local lRet:= .F. 
Local cSeek:= If(!Empty(cAliasTop),(cAliasTop)->DOCUMENTO+(cAliasTop)->SERIE+(cAliasTop)->FORNECEDOR+(cAliasTop)->LOJA,"")


lListaDev := If(ValType(lListaDev)#"L",GetMV("MV_LISTDEV"),lListaDev)

If lListaDev .And.  cAlias == "SD1"
	dbSelectArea("SF1")
	If Empty(cSeek)
		cSeek:=SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA
	EndIf
	If dbSeek(xFilial("SF1") + cSeek) .And.  SF1->F1_TIPO == "D"
		lRet:= .T. 
	EndIf
ElseIf lListaDev .And.  cAlias == "SD2"
	dbSelectArea("SF2")
	If Empty(cSeek)
		cSeek:=+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA
	EndIf
	If dbSeek(xFilial("SF2") + cSeek) .And.  SF2->F2_TIPO == "D"
		lRet:= .T. 
	EndIf
EndIf
dbSelectArea(If(Empty(cAliasTop),cAlias,cAliasTop))
Return lRet
















Function MTR978VAlm()
Local lRet:= .T. 
Local cConteudo:=&(ReadVar())
Local nOpc:=2



Local lCusUnif := IIf(FindFunction("A330CusFil"),A330CusFil(),GetMV("MV_CUSFIL", .F. ))
If lCusUnif .And.  cConteudo <> "**"
	nOpc := Aviso(If( cPaisLoc $ "ANG|PTG", "Atenção", "Atencao" ),If( cPaisLoc $ "ANG|PTG", "Ao alterar o armazém o custo medio unificado será desconsiderado.", "Ao alterar o armazem o custo medio unificado sera desconsiderado." ),{"Confirma",If( cPaisLoc $ "ANG|PTG", "Abandonar", "Abandona" )})
	If nOpc == 2
		lRet:= .F. 
	EndIf
EndIf
Return lRet


























Static Function MR978ImpS1(aSalAtu,cAliasTop,lQuery,lCusUnif,oSection1,oSection2,oReport)

Local aArea     := GetArea()
Local nCusMed   := 0
Local i         := 0
Local aSalAlmox := {}
Local cSeek     := ""

lQuery := If( lQuery == nil, .F. , lQuery ) ;
cAliasTop := If( cAliasTop == nil, "SB1", cAliasTop ) ;



If lCusUnif
	aArea:=GetArea()
	aSalAtu  := { 0,0,0,0,0,0,0 }
	dbSelectArea("SB2")
	dbSetOrder(1)
	dbSeek(cSeek:=xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD))
	While !Eof() .And.  B2_FILIAL+B2_COD == cSeek
		aSalAlmox := CalcEstCP(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),SB2->B2_LOCAL,mv_par05,,,mv_par17)
		For i:=1 to Len(aSalAtu)
			aSalAtu[i] += aSalAlmox[i]
		next
		dbSkip()
	End
	RestArea(aArea)
Else
	aSalAtu := CalcEstCP(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),mv_par08,mv_par05,,,mv_par17)
EndIf



SB2->(dbSetOrder(1))
SB2->(dbSeek(xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD)))
If AsalAtu[1] > 0
	nCusmed := aSalAtu[mv_par10+1]/aSalAtu[1]
ElseIf AsalAtu[1] == 0 .and.  AsalAtu[mv_par10+1] == 0
	nCusMed := 0
Else
	nCusmed := &(Eval(bBloco,"SB2->B2_CM",mv_par10))
EndIf

oSection1:Init()
oSection2:Init()

oSection1:Cell("nCusMed"):SetValue(nCusMed)
oSection1:Cell("nQtdSal"):SetValue(aSalAtu[1])
oSection1:Cell("nVlrSal"):SetValue(aSalAtu[mv_par10+1])


	oSection1:Cell("cProduto"):SetValue((cAliasTop)->PRODUTO)
	oSection1:Cell("cTipo"   ):SetValue((cAliasTop)->TIPO	)
	dbSelectArea("SB2")
	dbSeek(xFilial("SB2")+(cAliasTop)->PRODUTO+If(lCusUnif,"",mv_par08))





oSection1:PrintLine()
oSection2:PrintLine()

RestArea(aArea)
RETURN













Static Function MTR978IsMNT()
Local aProdsMNT := {}
Local cProdMNT	 := ""
Local nX := 0
Local lIntegrMNT := .F. 
Local aAreaSB1
Local aArea


If FindFunction("NGProdMNT")
	aProdsMNT := aClone(NGProdMNT("M"))
	If Len(aProdsMNT) > 0
		aArea	 := GetArea()
		aAreaSB1 := SB1->(GetArea())

		SB1->(dbSelectArea( "SB1" ))
		SB1->(dbSetOrder(1))
		For nX := 1 To Len(aProdsMNT)
			If SB1->(dbSeek( xFilial("SB1") + aProdsMNT[nX] ))
				lIntegrMNT := .T. 
				Exit
			EndIf
		next

		RestArea(aAreaSB1)
		RestArea(aArea)
	EndIf
Else
	cProdMNT	:= GetMv("MV_PRODMNT")
	cProdMNT := cProdMNT + Space(15-Len(cProdMNT))
	If !Empty(cProdMNT)
		aArea	 := GetArea()
		aAreaSB1 := SB1->(GetArea())
		SB1->(dbSelectArea( "SB1" ))
		SB1->(dbSetOrder(1))
		If SB1->(dbSeek( xFilial("SB1") + cProdMNT ))
			lIntegrMNT := .T. 
		EndIf
		RestArea(aAreaSB1)
		RestArea(aArea)
	EndIf
EndIf
Return( lIntegrMNT )














Function MTR978DISP(nSelParte)
Local nPartes     := 0
Local aRegraCP    := {}
Local lRet        := .T. 

nSelParte := If( nSelParte == nil, 0, nSelParte ) ;




If ExistBlock("MA330CP")
	aRegraCP:=ExecBlock("MA330CP", .F. , .F. )
	If ValType(aRegraCP) # "A"
		aRegraCP:={}
	EndIf
EndIf
If Len(aRegraCP) > 1
	nPartes := Len(aRegraCP) + 1
EndIf

lRet := nSelParte <= nPartes

If !lRet
	Aviso("MTR978DISP",If( cPaisLoc $ "ANG|PTG", "O número  da parte seleccionada não esta disponível  para actual   configuração  do custo em partes utilizado para esta empresa. introduzir um número  válido para o custo em partes.", "O numero da parte selecionada não esta diposnivel para atual configuração do custo em partes utilizado para esta empresa. Informar um numero valido para o custo em partes." ),{"Ok"})
EndIf

Return lRet














Static Function AjustaSX1()
Local aAreaAnt := GetArea()
Local aAreaSX1 := SX1->(GetArea())
Local nTamSX1  := Len(SX1->X1_GRUPO)
Local cPerg    := "MTR978"

dbSelectArea("SX1")
dbSetOrder(1)
If dbSeek(PADR(cPerg,nTamSX1)+"09") .And.  !Empty(SX1->X1_VALID)
	RecLock("SX1", .F. )
	_FIELD->X1_VALID := ""
	MsUnLock()
EndIf

RestArea(aAreaAnt)
RestArea(aAreaSX1)
Return