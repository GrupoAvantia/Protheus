#INCLUDE "MATR465.CH"  
#INCLUDE "PROTHEUS.CH" 

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ MATR465  ³ Autor ³ Marco Bianchi         ³ Data ³ 26/05/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gera e imprime o relatorio de notas de Credito e Debito.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MP8                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function MATR465()

Local oReport

Private	cEspecie	:= ""		// Declarada como Private poius é utilizada em Report Def e PrintDialog
Private lRelease4   := .F. 

lRelease4 := (FindFunction("TRepInUse") .And. TRepInUse())
If lRelease4
	If !Pergunte("MT465A",.T.)
		Return()
	EndIf

	//-- Interface de impressao
	oReport := ReportDef()
	oReport:PrintDialog()
Else
	MATR465R3()
EndIf

Return


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³ Marco Bianchi         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatório                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()

Local oReport
Local cAliasQry := GetNextAlias()
Local cPerg     := ""
Local aOrd      := {}
Local cAlias    := ""
Local nTot1     := 0
Local nTot2     := 0
Local nTot3     := 0
Local nRod1   	:= 0
Local nRod2   	:= 0
Local nRod3   	:= 0
Local oSintetico
Local nI1		:= 0
Local nTamData  := Len(DTOC(MsDate()))

Private	nX1			:= 0
Private aDadosImp	:= {}


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do componente de impressao                                      ³
//³                                                                        ³
//³TReport():New                                                           ³
//³ExpC1 : Nome do relatorio                                               ³
//³ExpC2 : Titulo                                                          ³
//³ExpC3 : Pergunte                                                        ³
//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
//³ExpC5 : Descricao                                                       ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Determina qual o tipo de Nota de Credito deseja imprimir...
If MV_PAR01 == 1
	cEspecie := 'NCC'
	cPerg    := "MT465B"
	cAlias   := "SF1"
ElseIf MV_PAR01 == 2
	cEspecie := 'NCE'   
	cPerg    := "MT465B" 
	cAlias   := "SF2"	
ElseIf MV_PAR01 == 3
	cEspecie := 'NCP'  
	cPerg    := "MT465C"	
	cAlias   := "SF2"	
Else
	cEspecie := 'NCI'
	cPerg    := "MT465C"   
	cAlias   := "SF1"	
EndIf

aOrd := {STR0040,STR0041,STR0042,STR0043} 	//"Nota Fiscal"###"Data de Emissao"###"Cliente"###"Data do Registro"
oReport := TReport():New("MATR465",If((cPaisLoc=="VEN"),STR0079,STR0044),cPerg, {|oReport| ReportPrint(oReport,cAliasQry,oSintetico,@nI1)},STR0044)//Relatorio de Faturas de Credito //Relatorio de Notas de Credito 
oReport:SetLandscape() 
oReport:SetTotalInLine(.F.)


//Carrega os parametros padroes do relatorio...
Pergunte(oReport:uParam,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao da secao utilizada pelo relatorio                               ³
//³                                                                        ³
//³TRSection():New                                                         ³
//³ExpO1 : Objeto TReport que a secao pertence                             ³
//³ExpC2 : Descricao da seçao                                              ³
//³ExpA3 : Array com as tabelas utilizadas pela secao. A primeira tabela   ³
//³        sera considerada como principal para a seção.                   ³
//³ExpA4 : Array com as Ordens do relatório                                ³
//³ExpL5 : Carrega campos do SX3 como celulas                              ³
//³        Default : False                                                 ³
//³ExpL6 : Carrega ordens do Sindex                                        ³
//³        Default : False                                                 ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao da celulas da secao do relatorio                                ³
//³                                                                        ³
//³TRCell():New                                                            ³
//³ExpO1 : Objeto TSection que a secao pertence                            ³
//³ExpC2 : Nome da celula do relatório. O SX3 será consultado              ³
//³ExpC3 : Nome da tabela de referencia da celula                          ³
//³ExpC4 : Titulo da celula                                                ³
//³        Default : X3Titulo()                                            ³
//³ExpC5 : Picture                                                         ³
//³        Default : X3_PICTURE                                            ³
//³ExpC6 : Tamanho                                                         ³
//³        Default : X3_TAMANHO                                            ³
//³ExpL7 : Informe se o tamanho esta em pixel                              ³
//³        Default : False                                                 ³
//³ExpB8 : Bloco de código para impressao.                                 ³
//³        Default : ExpC2                                                 ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If cEspecie$"NCC|NCI"
   cAlias := "SF1"
Else   
   cAlias := "SF2"
EndIf   


// Section 1 - Notas Fiscais
oSintetico := TRSection():New(oReport,STR0070,{},aOrd,/*Campos do SX3*/,/*Campos do SIX*/)
oSintetico:SetTotalInLine(.F.)

TRCell():New(oSintetico,"AIMP01","   ",STR0040,PesqPict("SF1","F1_DOC")		,TamSX3("F1_DOC")[1]		,/*lPixel*/,{|| aDadosImp[nI1][01] })	// Nota Fiscal
TRCell():New(oSintetico,"AIMP02","   ",STR0045,PesqPict("SF1","F1_SERIE")		,TamSX3("F1_SERIE")[1]		,/*lPixel*/,{|| aDadosImp[nI1][02] })	// Sertie
TRCell():New(oSintetico,"AIMP03","   ",STR0046,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,{|| aDadosImp[nI1][03] })	// Emissao
TRCell():New(oSintetico,"AIMP14","   ",STR0047,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,{|| aDadosImp[nI1][14] })	// Dt. Registro
TRCell():New(oSintetico,"AIMP04","   ",STR0042,PesqPict("SA1","A1_COD")		,TamSX3("A1_COD")[1]		,/*lPixel*/,{|| aDadosImp[nI1][04] })	// Cliente
TRCell():New(oSintetico,"AIMP06","   ",STR0048,PesqPict("SA1","A1_NOME")		,TamSX3("A1_NOME")[1]		,/*lPixel*/,{|| aDadosImp[nI1][06] })	// Nome Cliente
TRCell():New(oSintetico,"AIMP10","   ",STR0049,PesqPict("SF1","F1_ESPECIE")	,TamSX3("F1_ESPECIE")[1]	,/*lPixel*/,{|| aDadosImp[nI1][10] })	// Especie
TRCell():New(oSintetico,"AIMP07","   ",STR0050,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| aDadosImp[nI1][07] },,,"RIGHT")	// Imp. nao Incluido
TRCell():New(oSintetico,"AIMP08","   ",STR0051,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| aDadosImp[nI1][08] },,,"RIGHT")	// Imp. Incluido
TRCell():New(oSintetico,"AIMP09","   ",STR0052,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| aDadosImp[nI1][09] },,,"RIGHT")	// Total de N.Fiscal

// Section 2 -  Quebra por Data de Emissao
oQuebraE := TRSection():New(oReport,STR0071,{},,/*Campos do SX3*/,/*Campos do SIX*/)
oQuebraE:SetTotalInLine(.F.)
TRCell():New(oQuebraE,"EMISSAO"	,"   ",STR0046,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,{|| aDadosImp[nI1][03] })			// Emissao
TRCell():New(oQuebraE,"QE1"		,"   ",STR0040,PesqPict("SF1","F1_DOC")		,TamSX3("F1_DOC")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Nota Fiscal
TRCell():New(oQuebraE,"QE2"		,"   ",STR0045,PesqPict("SF1","F1_SERIE")	,TamSX3("F1_SERIE")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Sertie
TRCell():New(oQuebraE,"QE3"		,"   ",STR0047,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,/*{|| code-block de impressao }*/)	// Dt. Registro
TRCell():New(oQuebraE,"QE4"		,"   ",STR0042,PesqPict("SA1","A1_COD")		,TamSX3("A1_COD")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Cliente
TRCell():New(oQuebraE,"QE5"		,"   ",STR0048,PesqPict("SA1","A1_NOME")	,TamSX3("A1_NOME")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Nome Cliente
TRCell():New(oQuebraE,"QE6"		,"   ",STR0049,PesqPict("SF1","F1_ESPECIE")	,TamSX3("F1_ESPECIE")[1]	,/*lPixel*/,/*{|| code-block de impressao }*/)	// Especie
TRCell():New(oQuebraE,"NTOT1"	,"   ",STR0050,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot1 },,,"RIGHT")						// Imp. nao Incluido
TRCell():New(oQuebraE,"NTOT2"	,"   ",STR0051,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot2 },,,"RIGHT")						// Imp. Incluido
TRCell():New(oQuebraE,"NTOT3"	,"   ",STR0052,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot3 },,,"RIGHT")						// Total de N.Fiscal

// Section 3 -  Quebra por Cliente
oQuebraC := TRSection():New(oReport,STR0072,{},,/*Campos do SX3*/,/*Campos do SIX*/)
oQuebraC:SetTotalInLine(.F.)
TRCell():New(oQuebraC,"CLIENTE","   ",STR0042,PesqPict("SF1","F1_FORNECE")	,TamSX3("F1_FORNECE")[1]	,/*lPixel*/,{|| aDadosImp[nI1][04] })			// Cliente
TRCell():New(oQuebraC,"NOME"	,"   ",STR0048,PesqPict("SA1","A1_NOME")	,TamSX3("A1_NOME")[1]		,/*lPixel*/,{|| aDadosImp[nI1][06] })			// Nome Cliente
TRCell():New(oQuebraC,"QC1"		,"   ",STR0040,PesqPict("SF1","F1_DOC")		,TamSX3("F1_DOC")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Nota Fiscal
TRCell():New(oQuebraC,"QC2"		,"   ",STR0045,PesqPict("SF1","F1_SERIE")	,TamSX3("F1_SERIE")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Sertie
TRCell():New(oQuebraC,"QC3"		,"   ",STR0046,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,/*{|| code-block de impressao }*/)	// Emissao
TRCell():New(oQuebraC,"QC4"		,"   ",STR0047,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,/*{|| code-block de impressao }*/)	// Dt. Registro
TRCell():New(oQuebraC,"QC5"		,"   ",STR0049,PesqPict("SF1","F1_ESPECIE")	,TamSX3("F1_ESPECIE")[1]	,/*lPixel*/,/*{|| code-block de impressao }*/)	// Especie
TRCell():New(oQuebraC,"NTOT1"	,"   ",STR0050,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot1 },,,"RIGHT")						// Imp. nao Incluido
TRCell():New(oQuebraC,"NTOT2"	,"   ",STR0051,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot2 },,,"RIGHT")						// Imp. Incluido
TRCell():New(oQuebraC,"NTOT3"	,"   ",STR0052,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot3 },,,"RIGHT")						// Total de N.Fiscal
        
// Section 4 -  Quebra por Data de Registro
oQuebraD := TRSection():New(oReport,STR0073,{},,/*Campos do SX3*/,/*Campos do SIX*/)
oQuebraD:SetTotalInLine(.F.)
TRCell():New(oQuebraD,"REGISTRO"	,"  " ,STR0047,PesqPict("SF1","F1_DTDIGIT")	,nTamData					,/*lPixel*/,{|| aDadosImp[nI1][14] })			// Data do Regsitro
TRCell():New(oQuebraD,"QR1"			,"   ",STR0040,PesqPict("SF1","F1_DOC")		,TamSX3("F1_DOC")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Nota Fiscal
TRCell():New(oQuebraD,"QR2"			,"   ",STR0045,PesqPict("SF1","F1_SERIE")	,TamSX3("F1_SERIE")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Sertie
TRCell():New(oQuebraD,"QR3"			,"   ",STR0046,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,/*{|| code-block de impressao }*/)	// Dt. Registro
TRCell():New(oQuebraD,"QR4"			,"   ",STR0042,PesqPict("SA1","A1_COD")		,TamSX3("A1_COD")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Cliente
TRCell():New(oQuebraD,"QR5"			,"   ",STR0048,PesqPict("SA1","A1_NOME")	,TamSX3("A1_NOME")[1]		,/*lPixel*/,/*{|| code-block de impressao }*/)	// Nome Cliente
TRCell():New(oQuebraD,"QR6"			,"   ",STR0049,PesqPict("SF1","F1_ESPECIE")	,TamSX3("F1_ESPECIE")[1]	,/*lPixel*/,/*{|| code-block de impressao }*/)	// Especie
TRCell():New(oQuebraD,"NTOT1"		,"   ",STR0050,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot1 },,,"RIGHT")						// Imp. nao Incluido
TRCell():New(oQuebraD,"NTOT2"		,"   ",STR0051,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot2 },,,"RIGHT")						// Imp. Incluido
TRCell():New(oQuebraD,"NTOT3"		,"   ",STR0052,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nTot3 },,,"RIGHT")						// Total de N.Fiscal
                                     

// Section 5 -  Analitico
oAnalitico := TRSection():New(oReport,STR0074,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/)
oAnalitico:SetTotalInLine(.F.)
TRCell():New(oAnalitico,"AIMP01","   ",STR0040,PesqPict("SF1","F1_DOC")		,TamSX3("F1_DOC")[1]		,/*lPixel*/,{|| aDadosImp[nI1][01] })	// Nota Fiscal
TRCell():New(oAnalitico,"AIMP02","   ",STR0045,PesqPict("SF1","F1_SERIE")		,TamSX3("F1_SERIE")[1]		,/*lPixel*/,{|| aDadosImp[nI1][02] })	// Serie
TRCell():New(oAnalitico,"AIMP10","   ",STR0046,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,{|| aDadosImp[nI1][10] })	// Emissao
TRCell():New(oAnalitico,"AIMP03","   ",STR0047,PesqPict("SF1","F1_DTDIGIT")	,nTamData					,/*lPixel*/,{|| aDadosImp[nI1][03] })	// Dt. Registro
TRCell():New(oAnalitico,"AIMP08","   ",STR0053,PesqPict("SF1","F1_ESPECIE")	,TamSX3("F1_ESPECIE")[1]	,/*lPixel*/,{|| aDadosImp[nI1][08] })	// Especie
If cEspecie$"NCC|NCE"			
	TRCell():New(oAnalitico,"AIMP04","   ",STR0042,PesqPict("SF1","F1_FORNECE")	,TamSX3("F1_FORNECE")[1]	,/*lPixel*/,{|| aDadosImp[nI1][04] })	// Cliente
	TRCell():New(oAnalitico,"AIMP06","   ",STR0048,PesqPict("SF1","F1_FORNECE")	,TamSX3("F1_FORNECE")[1]	,/*lPixel*/,{|| aDadosImp[nI1][06] })	// Loja
Else
	TRCell():New(oAnalitico,"AIMP04","   ",STR0055,PesqPict("SF1","F1_FORNECE")	,TamSX3("F1_FORNECE")[1]	,/*lPixel*/,{|| aDadosImp[nI1][04] })	// Prov:
	TRCell():New(oAnalitico,"AIMP06","   ",STR0048,PesqPict("SF1","F1_FORNECE")	,TamSX3("F1_FORNECE")[1]	,/*lPixel*/,{|| aDadosImp[nI1][06] })	// Loja
EndIf

// Section 6 - Itens
oItens := TRSection():New(oReport,STR0075,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/)
oItens:SetTotalInLine(.F.)
TRCell():New(oItens,"AIMP1101","   ",STR0056,PesqPict("SB1","B1_COD")		,TamSX3("B1_COD")[1]		,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][01] })		// Produto
TRCell():New(oItens,"AIMP1102","   ",STR0057,PesqPict("SB1","B1_DESC")		,TamSX3("B1_DESC")[1]		,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][02] })		// Descricao
TRCell():New(oItens,"AIMP1103","   ",STR0058,PesqPict("SD1","D1_TES")		,TamSX3("D1_TES")[1]		,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][03] })		// Tes
TRCell():New(oItens,"AIMP1104","   ",STR0059,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][04] },,,"RIGHT")		// Imp N. Incl.
TRCell():New(oItens,"AIMP1105","   ",STR0060,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][05] },,,"RIGHT")		// Imp Incl.
TRCell():New(oItens,"AIMP1106","   ",STR0061,PesqPict("SD1","D1_LOCAL")	,TamSX3("D1_LOCAL")[1]		,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][06] })		// Local
TRCell():New(oItens,"AIMP1107","   ",STR0062,PesqPict("SD1","D1_QUANT")	,TamSX3("D1_QUANT")[1]		,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][07] },,,"RIGHT")		// Quantidade
TRCell():New(oItens,"AIMP1108","   ",STR0063,PesqPict("SD1","D1_VUNIT")	,TamSX3("D1_VUNIT")[1]		,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][08] },,,"RIGHT")		// Valor Unit.
TRCell():New(oItens,"AIMP1109","   ",STR0064,PesqPict("SD1","D1_TOTAL")	,TamSX3("D1_TOTAL")[1]		,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][09] },,,"RIGHT")		// Valor Total

If cPaisLoc == "EUA"
	TRCell():New(oItens,"AIMP1110","   ",STR0078,PesqPict("SD1","D1_TOTAL")	,TamSX3("D1_TOTAL")[1]		,/*lPixel*/,{|| aDadosImp[nI1][11][nX1][10] },,,"RIGHT")		// Valor Total sem desconto
EndIf	

// Section 7 - Rodape dos itens
oRodape := TRSection():New(oReport,STR0076,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/)
oRodape:SetTotalInLine(.F.)
TRCell():New(oRodape,"AIMP14","   ",STR0065,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,{|| aDadosImp[nI1][14] })		// Registro
TRCell():New(oRodape,"AIMP09","   ",STR0066,PesqPict("SF1","F1_COND")		,TamSX3("F1_COND")[1]		,/*lPixel*/,{|| aDadosImp[nI1][09] })		// Cond.Pag.
TRCell():New(oRodape,"AIMP12","   ",STR0067,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| aDadosImp[nI1][12] },,,"RIGHT")		// Tot.Imp.Nao Incl
TRCell():New(oRodape,"AIMP13","   ",STR0068,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| aDadosImp[nI1][13] },,,"RIGHT")		// Tot.Imp.Incl
TRCell():New(oRodape,"AIMP07","   ",STR0069,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| aDadosImp[nI1][07] },,,"RIGHT")		// "Total N.Fiscal"

// Section 8 - Total Geral (por nota fiscal e com impressao dos itens)
oTotRod := TRSection():New(oReport,STR0077,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/)
oTotRod:SetTotalInLine(.F.)
TRCell():New(oTotRod,"ATOTROD14"	,"   ",STR0077,PesqPict("SF1","F1_EMISSAO")	,nTamData					,/*lPixel*/,{|| aDadosImp[nI1][14] })	// Registro
TRCell():New(oTotRod,"ATOTROD09"	,"   ","",PesqPict("SF1","F1_COND")	,TamSX3("F1_COND")[1]		,/*lPixel*/,{|| aDadosImp[nI1][09] })	// Cond.Pag.
TRCell():New(oTotRod,"NROD1"		,"   ",STR0067,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nRod1 },,,"RIGHT")				// Tot.Imp.Nao Incl
TRCell():New(oTotRod,"NROD2"		,"   ",STR0068,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nRod2 },,,"RIGHT")				// Tot.Imp.Incl
TRCell():New(oTotRod,"NROD3"		,"   ",STR0069,PesqPict("SF1","F1_VALBRUT")	,TamSX3("F1_VALBRUT")[1]	,/*lPixel*/,{|| nRod3 },,,"RIGHT")				// "Total N.Fiscal"
     
oReport:Section(1):Setedit(.F.)
oReport:Section(2):Setedit(.F.)
oReport:Section(3):Setedit(.F.)
oReport:Section(4):Setedit(.F.)
oReport:Section(5):Setedit(.F.)
oReport:Section(6):Setedit(.F.)
oReport:Section(7):Setedit(.F.)
oReport:Section(8):Setedit(.F.)

Return(oReport)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrin³ Autor ³Eduardo Riera          ³ Data ³04.05.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportPrint(oReport,cAliasQry,oSintetico,nI1)

Local nTotGImpDis	:= 0
Local nTotGImpInc	:= 0
Local nI 			:= 0
Local nX 			:= 0
Local cQuebra       := ""
Local lQuebra     	:= .T.
Local lRet          := .F.
Local cAliasSF1     := ""
Local cAliasSD1     := ""
Local cAliasSF2		:= ""
Local cAliasSD2		:= ""         
Local cNome         := ""
Local cNomeCli      := ""

Private nOrdem      := oReport:Section(1):GetOrder()
Private lQuery 		:= .F.
                                                     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Transforma parametros Range em expressao SQL                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MakeSqlExpr(oReport:uParam)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Filtragem do relatório                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFDEF TOP
	lQuery	:= .T.
#ENDIF

// SetBlock: faz com que as variaveis locais possam ser utilizadas em outras funcoes nao precisando declara-las como provate
oReport:Section(2):Cell("NTOT1" ):SetBlock({|| nTot1})
oReport:Section(2):Cell("NTOT2" ):SetBlock({|| nTot2})
oReport:Section(2):Cell("NTOT3" ):SetBlock({|| nTot3})
oReport:Section(3):Cell("NTOT1" ):SetBlock({|| nTot1})
oReport:Section(3):Cell("NTOT2" ):SetBlock({|| nTot2})
oReport:Section(3):Cell("NTOT3" ):SetBlock({|| nTot3})
oReport:Section(4):Cell("NTOT1" ):SetBlock({|| nTot1})
oReport:Section(4):Cell("NTOT2" ):SetBlock({|| nTot2})
oReport:Section(4):Cell("NTOT3" ):SetBlock({|| nTot3})
oReport:Section(8):Cell("NROD1" ):SetBlock({|| nRod1})
oReport:Section(8):Cell("NROD2" ):SetBlock({|| nRod2})
oReport:Section(8):Cell("NROD3" ):SetBlock({|| nRod3})


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Query do relatório da secao 1                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aDadosImp	:= {}
If cEspecie$"NCC|NCI"
	PesqSF1(@aDadosImp,@nTotGImpDis,@nTotGImpInc,cAliasQry,oReport,@lRet,@cAliasSF1,@cAliasSD1)
Else
	PesqSF2(@aDadosImp,@nTotGImpDis,@nTotGImpInc,cAliasQry,oReport,@lRet,@cAliasSF2,@cAliasSD2)
EndIf
	
If oReport:Section(1):GetOrder() == 2	
	//Quebra por data de emissao...
	aSort(aDadosImp,,,{|x,y| DToS(x[3])+x[1]+x[2]+x[4]+x[5] < DToS(y[3])+y[1]+y[2]+y[4]+y[5]})		
ElseIf oReport:Section(1):GetOrder() == 3
	//Quebra por cliente
	aSort(aDadosImp,,,{|x,y| x[4]+x[5]+x[1]+x[2]+DToS(x[3]) < y[4]+y[5]+y[1]+y[2]+DToS(y[3])})
Else
	//Quebra por data de digitacao...
	aSort(aDadosImp,,,{|x,y| DToS(x[14])+x[1]+x[2]+x[4]+x[5] < DToS(y[14])+y[1]+y[2]+y[4]+y[5]})		
EndIf


If oReport:Section(1):GetOrder() == 1	.And. mv_par05 == 2		// Nao Lista Itens
	oReport:Section(1):Init()	
ElseIf oReport:Section(1):GetOrder() == 2    
   cNome := "EMISSAO"
ElseIf oReport:Section(1):GetOrder() == 3
   cNome 	:= "CLIENTE"
   cNomeCli := "NOME"
ElseIf oReport:Section(1):GetOrder() == 4
   cNome := "REGISTRO"
EndIf   

If mv_par05 == 2		// Nao Lista Itens	
	TRFunction():New(oSintetico:Cell("AIMP07"),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,.F./*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSintetico:Cell("AIMP08"),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,.F./*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSintetico:Cell("AIMP09"),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,.F./*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)
EndIf   

nTot1 := 0
nTot2 := 0
nTot3 := 0    
nRod1 := 0
nRod2 := 0
nRod3 := 0
oReport:SetMeter(Len(aDadosImp))
For nI := 1 To Len(aDadosImp)

	nI1 := nI
	If oReport:Section(1):GetOrder() <> 1
		If oReport:Section(1):GetOrder() == 2					// por Emissao
			cQuebra := DToS(aDadosImp[nI][03])
		ElseIf oReport:Section(1):GetOrder() == 3				// por Cliente
			cQuebra := aDadosImp[nI][04]+aDadosImp[nI][05]
		Else													// por Registro
			cQuebra := DToS(aDadosImp[nI][14])	
		EndIf			    
	    
		If lQuebra
			oReport:Section(oReport:Section(1):GetOrder()):Init()
			If cNome <> "" 	
				oReport:Section(oReport:Section(1):GetOrder()):Cell(cNome):Show()		    
			EndIf
			If cNomeCli <> "" 				
				oReport:Section(oReport:Section(1):GetOrder()):Cell(cNomeCli):Show()		    
			EndIf
			If oReport:Section(1):GetOrder() == 2	
				// por Emissao
				oReport:Section(2):Cell("QE1"):Disable()
				oReport:Section(2):Cell("QE2"):Disable()		
				oReport:Section(2):Cell("QE3"):Disable()	
				oReport:Section(2):Cell("QE4"):Disable()	
				oReport:Section(2):Cell("QE5"):Disable()	
				oReport:Section(2):Cell("QE6"):Disable()	
				oReport:Section(2):Cell("NTOT1"):Disable()
				oReport:Section(2):Cell("NTOT2"):Disable()
				oReport:Section(2):Cell("NTOT3"):Disable()
			ElseIf oReport:Section(1):GetOrder() == 3
				// por Cliente
				oReport:Section(3):Cell("QC1"):Disable()	
				oReport:Section(3):Cell("QC2"):Disable()	
				oReport:Section(3):Cell("QC3"):Disable()	
				oReport:Section(3):Cell("QC4"):Disable()	
				oReport:Section(3):Cell("QC5"):Disable()
			Else
				// por Registro
				oReport:Section(4):Cell("QR1"):Disable()		
				oReport:Section(4):Cell("QR2"):Disable()	
				oReport:Section(4):Cell("QR3"):Disable()	
				oReport:Section(4):Cell("QR4"):Disable()	
				oReport:Section(4):Cell("QR5"):Disable()	
				oReport:Section(4):Cell("QR6"):Disable()	
			EndIf

			oReport:Section(oReport:Section(1):GetOrder()):Cell("NTOT1"):Disable()
			oReport:Section(oReport:Section(1):GetOrder()):Cell("NTOT2"):Disable()
			oReport:Section(oReport:Section(1):GetOrder()):Cell("NTOT3"):Disable()
			
			oReport:Section(oReport:Section(1):GetOrder()):PrintLine()
			oReport:Section(1):Init()
			lQuebra := .f.   
		EndIf

	EndIf

	If oReport:Section(1):GetOrder() == 1					// por Nota Fiscal
	    If MV_PAR05 == 2									// Nao Lista Itens
			oReport:Section(1):Cell("AIMP01"):Show()
			oReport:Section(1):Cell("AIMP02"):Show()
			oReport:Section(1):Cell("AIMP03"):Show()
			oReport:Section(1):Cell("AIMP14"):Show()
			oReport:Section(1):Cell("AIMP04"):Show()
			oReport:Section(1):Cell("AIMP06"):Show()
			oReport:Section(1):Cell("AIMP10"):Show()
			oReport:Section(1):Cell("AIMP07"):Show()
			oReport:Section(1):Cell("AIMP08"):Show()
			oReport:Section(1):Cell("AIMP09"):Show()
		EndIf
	ElseIf oReport:Section(1):GetOrder() == 2				// por Data de Emissao
		oReport:Section(1):Cell("AIMP01"):Show()
		oReport:Section(1):Cell("AIMP02"):Show()
		oReport:Section(1):Cell("AIMP03"):Disable()
		oReport:Section(1):Cell("AIMP14"):Show()
		oReport:Section(1):Cell("AIMP04"):Show()
		oReport:Section(1):Cell("AIMP06"):Show()
		oReport:Section(1):Cell("AIMP10"):Show()
		oReport:Section(1):Cell("AIMP07"):Show()
		oReport:Section(1):Cell("AIMP08"):Show()
		oReport:Section(1):Cell("AIMP09"):Show()
	ElseIf oReport:Section(1):GetOrder() == 3				// por Cliente
		oReport:Section(1):Cell("AIMP01"):Show()
		oReport:Section(1):Cell("AIMP02"):Show()
		oReport:Section(1):Cell("AIMP03"):Show()
		oReport:Section(1):Cell("AIMP14"):Show()
		oReport:Section(1):Cell("AIMP04"):Disable()
		oReport:Section(1):Cell("AIMP06"):Disable()
		oReport:Section(1):Cell("AIMP10"):Show()
		oReport:Section(1):Cell("AIMP07"):Show()
		oReport:Section(1):Cell("AIMP08"):Show()
		oReport:Section(1):Cell("AIMP09"):Show()
	Else                                    				// por Data do Regsitro
		oReport:Section(1):Cell("AIMP01"):Show()
		oReport:Section(1):Cell("AIMP02"):Show()
		oReport:Section(1):Cell("AIMP03"):Show()
		oReport:Section(1):Cell("AIMP14"):Disable()
		oReport:Section(1):Cell("AIMP04"):Show()
		oReport:Section(1):Cell("AIMP06"):Show()
		oReport:Section(1):Cell("AIMP10"):Show()
		oReport:Section(1):Cell("AIMP07"):Show()
		oReport:Section(1):Cell("AIMP08"):Show()
		oReport:Section(1):Cell("AIMP09"):Show()
    EndIf

	If oReport:Section(1):GetOrder() == 1 .And. MV_PAR05 == 1	// Lista Itens apenas se ordem por Nota Fiscal
		oReport:Section(5):Init()
		oReport:Section(5):PrintLine() 
		oReport:Section(5):Finish()		
		
		oReport:Section(6):Init()
		For nX := 1 To Len(aDadosImp[nI][11])  	
			nX1 := nX
			oReport:Section(6):PrintLine()                	
		Next nX      
		oReport:Section(6):Finish()		
		
		If nI1 > 0		
			oReport:Section(7):Init()
			oReport:Section(7):PrintLine() 
			oReport:Section(7):Finish()		
		EndIf
		
		nRod1 += aDadosImp[nI][12]
		nRod2 += aDadosImp[nI][13]
		nRod3 += aDadosImp[nI][07]

	Else	
		oReport:Section(1):PrintLine()                	
	EndIf
	
	If oReport:Section(1):GetOrder() <> 1	
		nTot1 += aDadosImp[nI][07]
		nTot2 += aDadosImp[nI][08]
		nTot3 += aDadosImp[nI][09]
		If (nI == Len(aDadosImp)) .Or.;     
		   ((oReport:Section(1):GetOrder() == 2) .And. (cQuebra <> DTos(aDadosImp[nI+1][03]))) .Or.;
		   ((oReport:Section(1):GetOrder() == 3) .And. (cQuebra <> aDadosImp[nI+1][04]+aDadosImp[nI+1][05])) .Or.; 
		   ((oReport:Section(1):GetOrder() == 4) .And. (cQuebra <> DTos(aDadosImp[nI+1][14]))) 

			If cNome <> "" 	
				oReport:Section(oReport:Section(1):GetOrder()):Cell(cNome):Hide()		
			EndIf
			If cNomeCli <> ""
				oReport:Section(oReport:Section(1):GetOrder()):Cell(cNomeCli):Hide()
			EndIf
			If oReport:Section(1):GetOrder() == 2	
				// por Emissao
				oReport:Section(2):Cell("QE1"):Hide()		
				oReport:Section(2):Cell("QE2"):Hide()		
				oReport:Section(2):Cell("QE3"):Hide()		
				oReport:Section(2):Cell("QE4"):Hide()		
				oReport:Section(2):Cell("QE5"):Hide()		
				oReport:Section(2):Cell("QE6"):Hide()		
			ElseIf oReport:Section(1):GetOrder() == 3
				// por Cliente
				oReport:Section(3):Cell("QC1"):Hide()		
				oReport:Section(3):Cell("QC2"):Hide()		
				oReport:Section(3):Cell("QC3"):Hide()		
				oReport:Section(3):Cell("QC4"):Hide()		
				oReport:Section(3):Cell("QC5"):Hide()		
			Else
				// por Registro
				oReport:Section(4):Cell("QR1"):Hide()		
				oReport:Section(4):Cell("QR2"):Hide()		
				oReport:Section(4):Cell("QR3"):Hide()		
				oReport:Section(4):Cell("QR4"):Hide()		
				oReport:Section(4):Cell("QR5"):Hide()		
				oReport:Section(4):Cell("QR6"):Hide()		
			EndIf
			
			oReport:Section(oReport:Section(1):GetOrder()):Cell("NTOT1"):Show()		
			oReport:Section(oReport:Section(1):GetOrder()):Cell("NTOT2"):Show()		
			oReport:Section(oReport:Section(1):GetOrder()):Cell("NTOT3"):Show()		
			oReport:Section(oReport:Section(1):GetOrder()):PrintLine()

			oReport:Section(1):Finish()	
			oReport:Section(oReport:Section(1):GetOrder()):Finish()	
		
			lQuebra := .T.
			nTot1 	:= 0
			nTot2 	:= 0
			nTot3 	:= 0

		EndIf
	EndIf

	oReport:IncMeter()
Next

If oReport:Section(1):GetOrder() == 1	
	oReport:Section(1):Finish()	
EndIf	


If oReport:Section(1):GetOrder() == 1 .And. MV_PAR05 == 1	// Lista Itens apenas se ordem por Nota Fiscal
	If nI1 > 0
		oReport:Section(8):Init()  
		oReport:Section(8):Cell("ATOTROD14"):Hide()
		oReport:Section(8):Cell("ATOTROD09"):Hide()
		oReport:Section(8):Printline()
		oReport:Section(8):Finish()
	EndIf
EndIf

		
If lQuery
	If lRet
		If !Empty(cAliasSF1)
		   (cAliasSF1)->(dbCloseArea())
		ElseIf !Empty(cAliasSF2)		   
		   (cAliasSF2)->(dbCloseArea())
		EndIf   
	EndIf   
EndIf

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATR465   º Autor ³ Julio Cesar        ºFecha ³  08-10-03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Gera e imprime o relatorio de notas de Credito e Debito.   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6 IDE                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATR465R3()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracion de Variables                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cDesc1   := STR0001 //"Este programa tiene como objetivo imprimir informe de"
Local cDesc2   := STR0002 //"Notas Credito de acuerdo con los parámetros informados"
Local cDesc3   := STR0003 //"por el usuario."
Local cPict    := ""
Local Titulo   := ""
Local nLin     := 80
Local Cabec1   := ""
Local Cabec2   := ""
Local imprime  := .T.
Local aOrd     := {}
Local cPerg    := ""
Local aAreaAtu := GetArea()

Private lEnd        := .F.
Private lAbortPrint := .F.
Private limite      := 132
Private tamanho     := "M"
Private nomeprog    := "MATR465" // Coloque aquí el nombre del programa para impresión en el encabezamiento
Private nTipo       := 18
Private aReturn     := { "A Rayas", 1, "Administración", 2, 2, 1, "", 1}
Private nLastKey    := 0
Private cbtxt       := Space(10)
Private cbcont      := 00
Private CONTFL      := 01
Private m_pag       := 01
Private wnrel       := "MATR465" // Coloque aquí el nombre del archivo usado para impresión en disco
Private cString     := "SF1"
Private cEspecie    := ""
Private lQuery      := .F.
Private lRelease4   := .F. 

#IFDEF TOP
	If TCSrvType() != "AS/400"
		lQuery := .T.
	EndIf
#ENDIF	

////////////////////////////////////////
//MV_PAR01 => Produto De            ? //
//MV_PAR02 => Produto Ate           ? //
//MV_PAR03 => Data De               ? //
//MV_PAR04 => Data Ate              ? //
//MV_PAR05 => Lista os Itens        ? //
//MV_PAR06 => Grupo De              ? //
//MV_PAR07 => Grupo Ate             ? //
//MV_PAR08 => Cliente/Forneceor De  ? //
//MV_PAR09 => Cliente/Fornecedor Ate? //
//MV_PAR10 => Armazem De            ? //
//MV_PAR11 => Armazem Ate           ? //
//MV_PAR12 => Nota de Credito De    ? //
//MV_PAR13 => Nota de Credito Ate   ? //
//MV_PAR14 => Serie De              ? //
//MV_PAR15 => Serie Ate             ? //
//MV_PAR16 => TES De                ? //
//MV_PAR17 => TES Ate               ? //
//MV_PAR18 => Qual a Moeda          ? //
//MV_PAR19 => Converter             ? //
//MV_PAR20 => Data De               ? //
//MV_PAR21 => Data Ate              ? //
////////////////////////////////////////

IF cPaisLoc == "VEN"
	Titulo   := STR0079 //"Informe de Facturas de Credito"
Else
	Titulo   := STR0004 //"Informe de Notas de Credito"
EndIf

aOrd := {STR0005,STR0006,STR0007,STR0008} //"Factura"###"Fecha de Emision"###"Cliente"###"Fecha Registro"
If !Pergunte("MT465A",.T.)
	Return
EndIf

//Determina qual o tipo de Nota de Credito deseja imprimir...
If MV_PAR01 == 1
	cEspecie := "NCC"
	cPerg    := "MT465B"
ElseIf MV_PAR01 == 2
	cEspecie := "NCE"   
	cPerg    := "MT465B" 
ElseIf MV_PAR01 == 3
	cEspecie := "NCP"  
	cPerg    := "MT465C"	
Else
	cEspecie := "NCI"  
	cPerg    := "MT465C"   
EndIf

//Carrega os parametros padroes do relatorio...
Pergunte(cPerg,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta la interfase estandar con el usuario...                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel := SetPrint(cString,NomeProg,cPerg,@titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,.F.,Tamanho,,.F.)

If nLastKey == 27
	Return
Endif

SetDefault(aReturn,cString)

If nLastKey == 27
	Return
Endif

nTipo := If(aReturn[4]==1,15,18)
nOrdem:= aReturn[8]

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Procesamiento. RPTSTATUS monta ventana con la regla de procesamiento.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RptStatus({|| RunReport(Cabec1,Cabec2,Titulo,nLin) },Titulo)

//Restaura a area original...
RestArea(aAreaAtu)

Return



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncion   ³RUNREPORT º Autor ³ AP6 IDE            ºFecha ³  08-10-03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcion auxiliar llamada por la RPTSTATUS. La funcion      º±±
±±º          ³ RPTSTATUS monta la ventana con la regla de procesamiento.  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Programa principal                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function RunReport(Cabec1,Cabec2,Titulo,nLin)

Local nI          := 0
Local nX		  := 0
Local nTotGeral   := 0
Local nTotGImpDis := 0
Local nTotGImpInc := 0
Local nTotal	  := 0	
Local nTotalCli	  := 0	
Local cQuebra     := ""
Local aDadosImp   := {}
Local aImpInf     := {}
Local lQuebra     := .T.
Local cAliasSF1   := ""
Local cAliasSD1   := ""
Local cAliasSF2	  := ""
Local cAliasSD2	  := ""   
Local lRet        := .F.
Local nTotImpInc  := 0
	
If cEspecie$"NCC|NCI"
	MsgRun(STR0038,"",{|| CursorWait(), PesqSF1(@aDadosImp,@nTotGImpDis,@nTotGImpInc,@lRet,@cAliasSF1,@cAliasSD1) ,CursorArrow()}) //"Gerando relatorio, aguarde..."
Else
	MsgRun(STR0038,"",{|| CursorWait(), PesqSF2(@aDadosImp,@nTotGImpDis,@nTotGImpInc,@lRet,@cAliasSF2,@cAliasSD2) ,CursorArrow()}) //"Gerando relatorio, aguarde..."
EndIf


If aReturn[8] == 1
	If MV_PAR05 == 2
		/////////////////////////////////////////
		//Cabecalho para quebra por Factura... //
		/////////////////////////////////////////
		//         10        20        30        40        50        60        70        80        90        100       110       120       130
		//012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
		//Numero        Ser Fecha      Fecha      Codigo  Nombre                              Esp Impuesto       Impuesto       Total de
		//Factura           Emision    Registro   Cliente Cliente                                 No Incluido    Incluido       Factura
		//9999999999999 XXX 99/99/9999 99/99/9999 XXXXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXX 999.999.999,99 999.999.999,99 999.999.999,99
		Cabec1 := STR0009 //"Numero        Ser Fecha      Fecha      Codigo  Nombre                              Esp Impuesto       Impuesto       Total de"
		If cEspecie$"NCC|NCE"
			Cabec2 := STR0010 //"Factura           Emision    Registro   Cliente Cliente                                 No Incluido    Incluido       Factura"
		Else
			Cabec2 := STR0011 //"Factura           Emision    Registro   Prov.   Proveedor                               No Incluido    Incluido       Factura"
		EndIf
	Else
		Cabec1 := STR0012 //"RELACION DE LOS ITEMES DE LAS NOTAS DE CREDITO"
	EndIf
ElseIf aReturn[8] == 2
	//////////////////////////////////////////////////
	//Cabecalho para quebra por data de emissao...  //
	//////////////////////////////////////////////////
	//         10        20        30        40        50        60        70        80        90        100       110       120       130
	//012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	//Numero        Serie  Fecha       Codigo  Nombre                               Esp  Impuesto        Impuesto        Total de
	//Factura              Registro    Cliente Cliente                                   No Incluido     Incluido        Factura
	//9999999999999 XXX    99/99/9999  XXXXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  XXX  999.999.999,99  999.999.999,99  999.999.999,99
	Cabec1 := STR0013 //"Numero        Serie  Fecha       Codigo  Nombre                               Esp  Impuesto        Impuesto        Total de"
	If cEspecie$"NCC|NCE"
		Cabec2 := STR0014 //"Factura              Registro    Cliente Cliente                                   No Incluido     Incluido        Factura"
	Else
		Cabec2 := STR0015 //"Factura              Registro    Prov.   Proveedor                                 No Incluido     Incluido        Factura"
	EndIf
ElseIf aReturn[8] == 3 
	/////////////////////////////////////////
	//Cabecalho para quebra por Cliente... //
	/////////////////////////////////////////
	//         10        20        30        40        50        60        70        80        90        100       110       120       130
	//012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	//Numero        Serie    Fecha         Fecha         Esp    Impuesto          Impuesto          Total de
	//Factura                Emision       Registro             No Incluido       Incluido          Factura
	//9999999999999 XXX      99/99/9999    99/99/9999    XXX    999.999.999,99    999.999.999,99    999.999.999,99
	Cabec1 := STR0016 //"Numero        Serie    Fecha         Fecha         Esp    Impuesto          Impuesto          Total de"
	Cabec2 := STR0017 //"Factura                Emision       Registro             No Incluido       Incluido          Factura"
Else
	//////////////////////////////////////////////////
	//Cabecalho para quebra por data de registro... //
	//////////////////////////////////////////////////
	//         10        20        30        40        50        60        70        80        90        100       110       120       130
	//012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
	//Numero        Serie  Fecha       Codigo  Nombre                               Esp  Impuesto        Impuesto        Total de
	//Factura              Emision     Cliente Cliente                                   No Incluido     Incluido        Factura
	//9999999999999 XXX    99/99/9999  XXXXXX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  XXX  999.999.999,99  999.999.999,99  999.999.999,99
	Cabec1 := STR0013 //"Numero        Serie  Fecha       Codigo  Nombre                               Esp  Impuesto        Impuesto        Total de"
	If cEspecie$"NCC|NCE"
		Cabec2 := STR0018 //"Factura              Emision     Cliente Cliente                                   No Incluido     Incluido        Factura"
	Else
		Cabec2 := STR0019 //"Factura              Emision     Prov.   Proveedor                                 No Incluido     Incluido        Factura"
	EndIf
EndIf

If aReturn[8] == 2
	//Quebra por data de emissao...
	aSort(aDadosImp,,,{|x,y| DToS(x[3])+x[1]+x[2]+x[4]+x[5] < DToS(y[3])+y[1]+y[2]+y[4]+y[5]})		
ElseIf aReturn[8] == 3
	//Quebra por cliente
	aSort(aDadosImp,,,{|x,y| x[4]+x[5]+x[1]+x[2]+DToS(x[3]) < y[4]+y[5]+y[1]+y[2]+DToS(y[3])})
Else
	//Quebra por data de digitacao...
	aSort(aDadosImp,,,{|x,y| DToS(x[14])+x[1]+x[2]+x[4]+x[5] < DToS(y[14])+y[1]+y[2]+y[4]+y[5]})		
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ SETREGUA -> Indica cuantos registros seran procesados para la regla ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetRegua(Len(aDadosImp))
For nI := 1 To Len(aDadosImp)
	If aReturn[8] == 2
		cQuebra := DToS(aDadosImp[nI][03])
	ElseIf aReturn[8] == 3
		cQuebra := aDadosImp[nI][04]+aDadosImp[nI][05]
	Else
		cQuebra := DToS(aDadosImp[nI][14])	
	EndIf			    

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Comprobar la anulacion por el usuario...                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lAbortPrint
		@nLin,00 PSAY STR0020 //"*** CANCELADO PELO OPERADOR ***"
		Exit
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Impresion del encabezamiento del informe. . .                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nLin > 55 // Salto de Página. En este caso el impreso tiene 55 líneas...
		Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,nTipo)
		nLin := 09
	Endif
                     
	//Emissao por nota...
	If aReturn[8] == 1
		If MV_PAR05 == 2
			@ nLin,000 PSAY aDadosImp[nI][01] Picture PesqPict("SF1","F1_DOC")
			@ nLin,021 PSAY aDadosImp[nI][02] Picture PesqPict("SF1","F1_SERIE")
			@ nLin,025 PSAY aDadosImp[nI][03] Picture PesqPict("SF1","F1_EMISSAO") 
			@ nLin,036 PSAY aDadosImp[nI][14] Picture PesqPict("SF1","F1_EMISSAO")
			@ nLin,047 PSAY aDadosImp[nI][04] Picture PesqPict("SA1","A1_COD")
			@ nLin,055 PSAY aDadosImp[nI][06] Picture PesqPict("SA1","A1_NOME")
			@ nLin,091 PSAY aDadosImp[nI][10] Picture PesqPict("SF1","F1_ESPECIE")			
			@ nLin,095 PSAY aDadosImp[nI][07] Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,110 PSAY aDadosImp[nI][08] Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,125 PSAY aDadosImp[nI][09] Picture PesqPict("SF1","F1_VALBRUT")	
		Else     
			//         10        20        30        40        50        60        70        80        90        100       110       120       130
			//012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901
			//NUMERO: 9999999999999 XXX EMISION: 99/99/9999 REG: 99/99/9999 ESPECIE: XXX CLIENTE: XXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  
			//CODIGO DEL MATERIAL DESCRIPCION                    TE  IMP. NO INCL.  IMP. INCL.     LOCAL CANTIDAD    VALOR UNIT.    VALOR TOTAL
			//XXXXXXXXXXXXXXX     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 999 999.999.999,99 999.999.999,99 XX    99999999.99 999.999.999,99 999.999.999,99
			//
			//REGISTRO: 99/99/9999 COND.PAGO: XXX  TOT.IMP. NO INCL.: 999.999.999,99  TOT.IMP.INCL.: 999.999.999,99 TOTAL FACTURA: 999.999.999,99	
			Cabec2 := STR0021		 //"CODIGO DEL MATERIAL DESCRIPCION                    TE  IMP. NO INCL.  IMP. INCL.     LOCAL CANTIDAD    VALOR UNIT.    VALOR TOTAL"
			@ nLin,000 PSAY STR0022 //"NUMERO: "
			@ nLin,008 PSAY aDadosImp[nI][01] Picture PesqPict("SF1","F1_DOC")
			@ nLin,029 PSAY aDadosImp[nI][02] Picture PesqPict("SF1","F1_SERIE")
			@ nLin,033 PSAY STR0023 //"EMISION: "
			@ nLin,042 PSAY aDadosImp[nI][10] Picture PesqPict("SF1","F1_EMISSAO")
			@ nLin,053 PSAY STR0024 //"REG: "
			@ nLin,058 PSAY aDadosImp[nI][03] Picture PesqPict("SF1","F1_DTDIGIT")
			@ nLin,069 PSAY STR0025 //"ESPECIE: "
			@ nLin,078 PSAY aDadosImp[nI][08] Picture PesqPict("SF1","F1_ESPECIE")
			If cEspecie$"NCC|NCE"			
				@ nLin,082 PSAY STR0026 //"CLIENTE: "
			Else
				@ nLin,082 PSAY STR0027 //"PROV...: "
			EndIf
			@ nLin,091 PSAY aDadosImp[nI][04] Picture PesqPict("SA1","A1_COD")
			@ nLin,098 PSAY aDadosImp[nI][06] Picture PesqPict("SA1","A1_NOME")
			nLin++
			@ nLin,000 PSAY Cabec2
			Cabec2 := ""
			For nX := 1 To Len(aDadosImp[nI][11])  	
				nLin++
				@ nLin,000 PSAY aDadosImp[nI][11][nX][01] Picture PesqPict("SB1","B1_COD")
				@ nLin,031 PSAY aDadosImp[nI][11][nX][02] Picture PesqPict("SB1","B1_DESC")
				@ nLin,062 PSAY aDadosImp[nI][11][nX][03] Picture PesqPict("SD1","D1_TES")
				@ nLin,066 PSAY aDadosImp[nI][11][nX][04] Picture PesqPict("SF1","F1_VALBRUT")
				@ nLin,081 PSAY aDadosImp[nI][11][nX][05] Picture PesqPict("SF1","F1_VALBRUT")
				@ nLin,096 PSAY aDadosImp[nI][11][nX][06] Picture PesqPict("SD1","D1_LOCAL")
				@ nLin,102 PSAY aDadosImp[nI][11][nX][07] Picture PesqPict("SD1","D1_QUANT")				
				@ nLin,114 PSAY aDadosImp[nI][11][nX][08] Picture PesqPict("SD1","D1_VUNIT")								
				@ nLin,129 PSAY aDadosImp[nI][11][nX][09] Picture PesqPict("SD1","D1_TOTAL")								
			Next nX 
			nLin += 2
			@ nLin,000 PSAY STR0028 //"REGISTRO: 	"
			@ nLin,010 PSAY aDadosImp[nI][14] Picture PesqPict("SF1","F1_EMISSAO")
			@ nLin,021 PSAY STR0029 //"COND.PAGO: "
			@ nLin,032 PSAY aDadosImp[nI][09] Picture PesqPict("SF1","F1_COND") 
			@ nLin,037 PSAY STR0030 //"TOT.IMP. NO INCL.: "
			@ nLin,056 PSAY aDadosImp[nI][12] Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,072 PSAY STR0031 //"TOT.IMP.INCL.: "
			@ nLin,087 PSAY aDadosImp[nI][13] Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,102 PSAY STR0032 //"TOTAL FACTURA: "
			@ nLin,117 PSAY aDadosImp[nI][07] Picture PesqPict("SF1","F1_VALBRUT")
			nLin++
			@ nLin,000 PSAY Replicate("-",132)
			nLin += 2			
		EndIf
	ElseIf aReturn[8] == 2	
		If lQuebra
			@ nLin,000 PSAY PadR(STR0033,35," ")+DToC(aDadosImp[nI][03]) //"F E C H A   E M I S I O N  ==> "
			nLin    += 2
			lQuebra := .F.
		EndIf
		@ nLin,000 PSAY aDadosImp[nI][01] Picture PesqPict("SF1","F1_DOC")
		@ nLin,021 PSAY aDadosImp[nI][02] Picture PesqPict("SF1","F1_SERIE")
		@ nLin,028 PSAY aDadosImp[nI][14] Picture PesqPict("SF1","F1_EMISSAO")
		@ nLin,040 PSAY aDadosImp[nI][04] Picture PesqPict("SA1","A1_COD")
		@ nLin,048 PSAY aDadosImp[nI][06] Picture PesqPict("SA1","A1_NOME")       
		@ nLin,085 PSAY aDadosImp[nI][10] Picture PesqPict("SF1","F1_ESPECIE")       		
		@ nLin,090 PSAY aDadosImp[nI][07] Picture PesqPict("SF1","F1_VALBRUT")
		@ nLin,106 PSAY aDadosImp[nI][08] Picture PesqPict("SF1","F1_VALBRUT")
		@ nLin,122 PSAY aDadosImp[nI][09] Picture PesqPict("SF1","F1_VALBRUT")
	ElseIf aReturn[8] == 3
		If lQuebra
			If cEspecie$"NCC|NCE"
				@ nLin,000 PSAY PadR(STR0034,20," ")+aDadosImp[nI][04]+" "+aDadosImp[nI][06] //"C L I E N T E  ==> "
			Else
				@ nLin,000 PSAY PadR(STR0035,25," ")+aDadosImp[nI][04]+" "+aDadosImp[nI][06] //"P R O V E E D O R  ==> "
			EndIf
			nLin    += 2
			lQuebra := .F.
		EndIf
		@ nLin,000 PSAY aDadosImp[nI][01] Picture PesqPict("SF1","F1_DOC")
		@ nLin,021 PSAY aDadosImp[nI][02] Picture PesqPict("SF1","F1_SERIE")
		@ nLin,030 PSAY aDadosImp[nI][03] Picture PesqPict("SF1","F1_EMISSAO") 
		@ nLin,044 PSAY aDadosImp[nI][14] Picture PesqPict("SF1","F1_EMISSAO")
		@ nLin,058 PSAY aDadosImp[nI][10] Picture PesqPict("SF1","F1_ESPECI")
		@ nLin,065 PSAY aDadosImp[nI][07] Picture PesqPict("SF1","F1_VALBRUT")
		@ nLin,083 PSAY aDadosImp[nI][08] Picture PesqPict("SF1","F1_VALBRUT")
		@ nLin,101 PSAY aDadosImp[nI][09] Picture PesqPict("SF1","F1_VALBRUT")
	Else
		If lQuebra
			@ nLin,000 PSAY PadR(STR0036,35," ")+DToC(aDadosImp[nI][14]) //"F E C H A   R E G I S T R O  ==> "
			nLin    += 2
			lQuebra := .F.
		EndIf
		@ nLin,000 PSAY aDadosImp[nI][01] Picture PesqPict("SF1","F1_DOC")
		@ nLin,021 PSAY aDadosImp[nI][02] Picture PesqPict("SF1","F1_SERIE")
		@ nLin,028 PSAY aDadosImp[nI][14] Picture PesqPict("SF1","F1_EMISSAO")
		@ nLin,040 PSAY aDadosImp[nI][04] Picture PesqPict("SA1","A1_COD")
		@ nLin,048 PSAY aDadosImp[nI][06] Picture PesqPict("SA1","A1_NOME")
		@ nLin,085 PSAY aDadosImp[nI][10] Picture PesqPict("SF1","F1_ESPECIE")
		@ nLin,090 PSAY aDadosImp[nI][07] Picture PesqPict("SF1","F1_VALBRUT")
		@ nLin,106 PSAY aDadosImp[nI][08] Picture PesqPict("SF1","F1_VALBRUT")
		@ nLin,122 PSAY aDadosImp[nI][09] Picture PesqPict("SF1","F1_VALBRUT")	
	EndIf
						
	nLin++    // Avanza la línea de impresión
	If aReturn[8] == 1 .And. MV_PAR05 == 1
		nTotGeral += aDadosImp[nI][07]
	Else
		nTotGeral += aDadosImp[nI][09] 
		nTotal	  += aDadosImp[nI][07]		
    	nTotalCli += aDadosImp[nI][07]
    	nTotImpInc+= aDadosImp[nI][08]
	EndIf

	If (nI == Len(aDadosImp)) .Or.;
	   ((aReturn[8] == 2) .And. (cQuebra <> DToS(aDadosImp[nI+1][03]))) .Or.;
	   ((aReturn[8] == 3) .And. (cQuebra <> aDadosImp[nI+1][04]+aDadosImp[nI+1][05])) .Or.; 
	   ((aReturn[8] == 4) .And. (cQuebra <> DToS(aDadosImp[nI+1][14]))) 

		nLin += 2
		@ nLin,000 PSAY PadR(STR0037,20," ") //"TOTAL GENERAL ==> "
		If aReturn[8] == 1 .And. MV_PAR05 == 1      
			@ nLin,037 PSAY STR0030 //"TOT.IMP. NO INCL.: "
			@ nLin,056 PSAY nTotGImpDis Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,072 PSAY STR0031 //"TOT.IMP.INCL.: "
			@ nLin,087 PSAY nTotGImpInc Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,102 PSAY STR0032 //"TOTAL FACTURA: "
			@ nLin,117 PSAY nTotGeral Picture PesqPict("SF1","F1_VALBRUT")
		ElseIf aReturn[8] == 1 .And. MV_PAR05 == 2      		
			@ nLin,095 PSAY nTotGImpDis Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,110 PSAY nTotGImpInc Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,125 PSAY nTotGeral   Picture PesqPict("SF1","F1_VALBRUT")
		ElseIf (aReturn[8] == 2 .Or. aReturn[8] == 4) 
			@ nLin,090 PSAY nTotal      Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,106 PSAY nTotImpInc	 Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,122 PSAY nTotGeral   Picture PesqPict("SF1","F1_VALBRUT")
		ElseIf aReturn[8] == 3 
			@ nLin,065 PSAY nTotalCli   Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,083 PSAY nTotImpInc Picture PesqPict("SF1","F1_VALBRUT")
			@ nLin,101 PSAY nTotGeral   Picture PesqPict("SF1","F1_VALBRUT")
		EndIf		
		

		nLin++                                    
		@ nLin,000 PSAY Replicate("-",139)
		nLin     += 2			
		lQuebra  := .T.
		nTotGeral:= 0
		nTotal	 := 0
		nTotalCli:= 0
		nTotImpInc:= 0
	EndIf
	IncRegua()
Next nI

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza la ejecucion del informe...                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SET DEVICE TO SCREEN

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Si imprime en disco, llama al gerente de impresion...          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aReturn[5]==1
	dbCommitAll()
	SET PRINTER TO
	OurSpool(wnrel)
Endif

MS_FLUSH()

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncion   ³PesqSF1   º Autor ³ Julio Cesar        ºFecha ³  08-10-03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Pesquisa os dados referente as notas de credito que estao  º±±
±±º          ³ armazenadas nos arquivos SF1/SD1                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Programa principal                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PesqSF1(aDadosImp,nTotGImpDis,nTotGImpInc,cAliasQry,oReport,lRet,cAliasSF1,cAliasSD1)

Local nI		  := 0
Local cChave      := ""
Local cNomeCliFor := ""
Local cCodCliFor  := ""
Local cLoja       := ""
Local aDadosImpDet:= {}
Local nTotImpInc  := 0
Local nTotImpDis  := 0
Local nImpInc     := 0
Local nImpDis     := 0               
Local nValBrut    := 0
Local nVUnit      := 0
Local nDecimais   := MsDecimais(MV_PAR18)
Local aAreaSF1    := {}
Local aAreaSD1    := SD1->(GetArea())
Local cF1DOC      := ""
Local cF1SERIE    := ""
Local dF1EMISSAO  := Ctod("//")
Local cF1ESPECIE  := ""
Local cF1COND     := ""
Local dF1DTDIGIT  := ""
Local nF1MOEDA    := 0
Local nF1TXMOEDA  := 0
Local nF1VALBRUT  := 0
Local nValSDesc   := 0

lRet := .T.
If !lQuery
	dbSelectArea("SF1")    
	aAreaSF1 := GetArea()
	dbSetOrder(1)
	dbSeek(xFilial("SF1")+MV_PAR12+MV_PAR14+MV_PAR08,.T.)
	
	//Determina o alias do arquivo SF1...
	cAliasSF1 := "SF1"
Else                     
	lRet  := MQuerySF1(@aAreaSF1,@cAliasSF1,@cAliasSD1,cAliasQry,oReport)
EndIf

If lRet
	While ValidWhile(1)
		If !lQuery
			//Se o documento nao pertencer a serie determinada pelo usuario salta para
			//o proximo registro...
			If !(AllTrim(F1_ESPECIE)$cEspecie)
				dbSkip()
				Loop
			EndIf
			
			//Caso a data de emissao da nota nao esteja dentro do range informado pelo
			//usuario salta para o proximo registro...
			If (DToS(F1_EMISSAO) < DToS(MV_PAR03)) .Or. (DToS(F1_EMISSAO) > DToS(MV_PAR04))
				dbSkip()
				Loop
			EndIf
			
			//Caso a moeda seja diferente da selecionada e o usuario nao queira converter
			//salta para o proximo registro...
			If (F1_MOEDA <> MV_PAR18) .And. (MV_PAR19 == 2)
				dbSkip()
				Loop
			EndIf
			
			//Caso a data de digitacao da nota nao esteja dentro do range informado pelo
			//usuario salta para o proximo registro...
			If (DToS(F1_DTDIGIT) < DToS(MV_PAR20)) .Or. (DToS(F1_DTDIGIT) > DToS(MV_PAR21))
				dbSkip()
				Loop
			EndIf
		EndIf

		cF1DOC      := (cAliasSF1)->F1_DOC
		cF1SERIE    := (cAliasSF1)->F1_SERIE
	 	dF1EMISSAO  := (cAliasSF1)->F1_EMISSAO
		cF1ESPECIE  := (cAliasSF1)->F1_ESPECIE
		cF1COND     := (cAliasSF1)->F1_COND
		dF1DTDIGIT  := (cAliasSF1)->F1_DTDIGIT
		nF1MOEDA    := (cAliasSF1)->F1_MOEDA
		nF1TXMOEDA  := (cAliasSF1)->F1_TXMOEDA
		//Conforme a especie selecionada pelo usuario busca cliente ou fornecedor...
		cCodCliFor  := (cAliasSF1)->F1_FORNECE
		cLoja       := (cAliasSF1)->F1_LOJA
		If cEspecie$"NCC|NCE"
			SA1->(dbSetOrder(1))
			SA1->(dbSeek(xFilial("SA1")+cCodCliFor+cLoja))
			cNomeCliFor := SubStr(SA1->A1_NOME,1,35)
		Else
			SA2->(dbSetOrder(1))
			SA2->(dbSeek(xFilial("SA2")+(cAliasSF1)->F1_FORNECE+(cAliasSF1)->F1_LOJA))
			cNomeCliFor := SubStr(SA2->A2_NOME,1,35)
		EndIf
		//Converte o valor para a moeda selecionada pelo usuario...
		If (F1_MOEDA <> MV_PAR18) .And. (MV_PAR19 == 1)
			nF1VALBRUT := Round(xMoeda((cAliasSF1)->F1_VALBRUT,nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
		Else
			nF1VALBRUT := (cAliasSF1)->F1_VALBRUT
		EndIf
		
		cChave := (cAliasSF1)->F1_DOC+(cAliasSF1)->F1_SERIE+(cAliasSF1)->F1_FORNECE+(cAliasSF1)->F1_LOJA
		If !lQuery
			SD1->(dbSetOrder(1))
			SD1->(dbSeek(xFilial("SD1")+cChave))
			
			//Determina o alias do arquivo SD1...
			cAliasSD1 := "SD1"
		Endif

		nValSDesc := 0
		While ValidWhile(2,cChave,cAliasSD1)
			If !lQuery
				//Caso o produto corrente seja inferior ou superior ao produto inicial do range
				//informado salta para o proximo registro...
				If (SD1->D1_COD < MV_PAR01) .Or. (SD1->D1_COD > MV_PAR02)
					SD1->(dbSkip())
					Loop
				EndIf
				
				//Caso o grupo corrente nao esteja no range determinado pelo usuario
				//salta para o proximo registro...
				If (SD1->D1_GRUPO < MV_PAR06) .Or. (SD1->D1_GRUPO > MV_PAR07)
					SD1->(dbSkip())
					Loop
				EndIf
				
				//Caso o local corrente nao esteja no range determinado pelo usuario
				//salta para o proximo registro...
				If (SD1->D1_LOCAL < MV_PAR10) .Or. (SD1->D1_LOCAL > MV_PAR11)
					SD1->(dbSkip())
					Loop
				EndIf
				
				//Caso o TES corrente nao esteja no range determinado pelo usuario
				//salta para o proximo registro...
				If (SD1->D1_TES < MV_PAR16) .Or. (SD1->D1_TES > MV_PAR17)
					SD1->(dbSkip())
					Loop
				EndIf
				
				//Caso o tipo seja diferente salta para o proximo registro...
				If (SD1->D1_TIPO <> F1_TIPO) .Or. (SD1->D1_TIPODOC <> F1_TIPODOC)
					SD1->(dbSkip())
					Loop
				EndIf
			Endif
			
			aImpInf := TesImpInf((cAliasSD1)->D1_TES)
			For nI := 1 To Len(aImpInf)
				If aImpInf[nI][03] <> "3"
					If (nF1MOEDA <> MV_PAR18) .And. (MV_PAR19 == 1)
						nImpDis    += Round(xMoeda((cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
						nTotImpDis += Round(xMoeda((cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
						nTotGImpDis+= Round(xMoeda((cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
					Else
						nImpDis    += (cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02])))
						nTotImpDis += (cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02])))
						nTotGImpDis+= (cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02])))
					EndIf
				Else
					If (nF1MOEDA <> MV_PAR18) .And. (MV_PAR19 == 1)
						nImpInc    += Round(xMoeda((cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
						nTotImpInc += Round(xMoeda((cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
						nTotGImpInc+= Round(xMoeda((cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
					Else
						nImpInc    += (cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02])))
						nTotImpInc += (cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02])))
						nTotGImpInc+= (cAliasSD1)->(FieldGet(FieldPos(aImpInf[nI][02])))
					EndIf
				EndIf
			Next nI
			SB1->(dbSetOrder(1))
			SB1->(dbSeek(xFilial("SB1")+(cAliasSD1)->D1_COD))
			//Converte o valor para a moeda selecionada pelo usuario...
			If (nF1MOEDA <> MV_PAR18) .And. (MV_PAR19 == 1)
				If cPaisLoc == "EUA"
					nVUnit   := Round(xMoeda(((cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC)/(cAliasSD1)->D1_QUANT,nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
					nValBrut := Round(xMoeda((cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC,nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
				Else 
					nVUnit   := Round(xMoeda((cAliasSD1)->D1_VUNIT,nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
					nValBrut := Round(xMoeda((cAliasSD1)->D1_TOTAL,nF1MOEDA,MV_PAR18,dF1EMISSAO,nDecimais+1,nF1TXMOEDA),nDecimais)
				EndIf
			Else
				If cPaisLoc == "EUA"
					nVUnit    := ((cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC)/(cAliasSD1)->D1_QUANT
					nValBrut  := (cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC
					nValSDesc := (cAliasSD1)->D1_TOTAL
				Else
					nVUnit   := (cAliasSD1)->D1_VUNIT
					nValBrut := (cAliasSD1)->D1_TOTAL
				EndIf
			EndIf
			
			AAdd(aDadosImpDet,{SB1->B1_COD, SB1->B1_DESC, (cAliasSD1)->D1_TES, nImpDis,;
			nImpInc, (cAliasSD1)->D1_LOCAL, (cAliasSD1)->D1_QUANT,;
			nVUnit, nValBrut, nValSDesc})
			(cAliasSD1)->(dbSkip())
			nImpDis := 0
			nImpInc := 0
		End
		
		//Caso nao tenha encontrado nenhum registro no arquivo SD1 avanca para o proximo
		//registro do arquivo SF1...
		If Empty(aDadosImpDet)
			dbSkip() // Avanza el puntero del registro en el archivo
			Loop
		EndIf

		If (MV_PAR05 <> 1) .Or. (nOrdem <> 1)
			AAdd(aDadosImp,{cF1DOC, cF1SERIE, dF1EMISSAO, cCodCliFor, cLoja,cNomeCliFor, nTotImpDis,;
			nTotImpInc,nF1VALBRUT, AllTrim(cF1ESPECIE), "", "", "",dF1DTDIGIT})
		Else
			AAdd(aDadosImp,{cF1DOC, cF1SERIE, dF1EMISSAO, cCodCliFor, cLoja,cNomeCliFor, nF1VALBRUT,;
			AllTrim(cF1ESPECIE),cF1COND, dF1EMISSAO, aClone(aDadosImpDet), nTotImpDis, nTotImpInc, dF1DTDIGIT,aDadosImpDet[Len(aDadosImpDet)][10]})
		EndIf
		nTotImpDis   := 0
		nTotImpInc   := 0
		aDadosImpDet := {}
		If !lQuery
			(cAliasSF1)->(dbSkip()) // Avanza el puntero del registro en el archivo
		Endif
	EndDo
EndIf

If !lRelease4
	If lQuery .And. lRet
	   (cAliasSF1)->(dbCloseArea())
	EndIf
EndIf

RestArea(aAreaSD1)
RestArea(aAreaSF1)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncion   ³PesqSF2   º Autor ³ Julio Cesar        ºFecha ³  08-10-03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Pesquisa os dados referente as notas de credito que estao  º±±
±±º          ³ armazenadas nos arquivos SF2/SD2                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Programa principal                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PesqSF2(aDadosImp,nTotGImpDis,nTotGImpInc,cAliasQry,oReport,lRet,cAliasSF2,cAliasSD2)

Local cChave      := ""
Local cNomeCliFor := ""
Local cCodCliFor  := ""
Local cLoja       := ""
Local aDadosImpDet:= {}
Local nTotImpInc  := 0
Local nTotImpDis  := 0
Local nImpInc     := 0
Local nImpDis     := 0
Local nValBrut    := 0
Local nPrcVen     := 0 
Local nDecimais   := MsDecimais(MV_PAR18)
Local aAreaSF2    := {}
Local aAreaSD2    := SD2->(GetArea())  
Local nI
Local nF2MOEDA    := 0
Local nF2TXMoeda  := 0
Local nF2VALBRUT  := 0
Local cF2DOC      := ""
Local cF2SERIE    := ""
Local dF2EMISSAO  := Ctod("//")
Local cF2ESPECIE  := ""
Local cF2COND     := ""
Local dDtDigit    := CTOD("  /  /  ")

Private cCampoData  := IIf(SF2->(FieldPos("F2_DTDIGIT")) > 0,"F2_DTDIGIT", "F2_EMISSAO")

lRet := .T.
If !lQuery
	dbSelectArea("SF2")
	aAreaSF2 := GetArea()
	dbSetOrder(4)
	dbSeek(xFilial("SF2")+MV_PAR14+DToS(MV_PAR03)+MV_PAR12+MV_PAR08,.T.)

	//Determina o alias do arquivo SF1...
	cAliasSF2 := "SF2"
Else                  
	lRet  := MQuerySF2(@aAreaSF2,@cAliasSF2,@cAliasSD2,cAliasQry,oReport)
EndIf

If lRet
	While ValidWhile(3)
		If !lQuery
			//Se o documento nao pertencer a serie determinada pelo usuario salta para
			//o proximo registro...
			If !(AllTrim(F2_ESPECIE)$cEspecie)
				dbSkip()
				Loop
			EndIf
			
			//Caso a data de emissao da nota nao esteja dentro do range informado pelo
			//usuario salta para o proximo registro...
			If (DToS(F2_EMISSAO) < DToS(MV_PAR03)) .Or. (DToS(F2_EMISSAO) > DToS(MV_PAR04))
				dbSkip()
				Loop
			EndIf
			
			//Caso a moeda seja diferente da selecionada e o usuario nao queira converter
			//salta para o proximo registro...
			If (F2_MOEDA <> MV_PAR18) .And. (MV_PAR19 == 2)
				dbSkip()
				Loop
			EndIf
			
			//Caso a data de digitacao da nota nao esteja dentro do range informado pelo
			//usuario salta para o proximo registro...
			If (DToS(&(cCampoData)) < DToS(MV_PAR20)) .Or. (DToS(&(cCampoData)) > DToS(MV_PAR21))
				dbSkip()
				Loop
			EndIf
		EndIf
			
		nF2MOEDA   := (cAliasSF2)->F2_MOEDA
		nF2TXMOEDA := (cAliasSF2)->F2_TXMOEDA
		//Converte o valor para a moeda selecionada pelo usuario...
		If (nF2MOEDA <> MV_PAR18) .And. (MV_PAR19 == 1)
			nF2VALBRUT := Round(xMoeda(F2_VALBRUT,nF2MOEDA,MV_PAR18,F2_EMISSAO,nDecimais+1,F2_TXMOEDA),nDecimais)
		Else
			nF2VALBRUT := F2_VALBRUT
		EndIf
		cF2DOC     := (cAliasSF2)->F2_DOC
		cF2SERIE   := (cAliasSF2)->F2_SERIE
		dF2EMISSAO := (cAliasSF2)->F2_EMISSAO
		cF2ESPECIE := (cAliasSF2)->F2_ESPECIE
		cF2COND    := (cAliasSF2)->F2_COND
		//Conforme a especie selecionada pelo usuario busca cliente ou fornecedor...
		cCodCliFor  := (cAliasSF2)->F2_CLIENTE
		cLoja       := (cAliasSF2)->F2_LOJA
		dDtDigit    := &(cCampoData)
		
		If cEspecie$"NCC|NCE"
			SA1->(dbSetOrder(1))
			SA1->(dbSeek(xFilial("SA1")+cCodCliFor+cLoja))
			cNomeCliFor := SubStr(SA1->A1_NOME,1,35)
		Else
			SA2->(dbSetOrder(1))
			SA2->(dbSeek(xFilial("SA2")+cCodCliFor+cLoja))
			cNomeCliFor := SubStr(SA2->A2_NOME,1,35)
		EndIf
		
		cChave := F2_DOC+F2_SERIE+F2_CLIENTE+F2_LOJA
		If !lQuery 
			SD2->(dbSetOrder(3))
			SD2->(dbSeek(xFilial("SD2")+cChave))
			
			//Determina o alias do arquivo SD2...
			cAliasSD2 := "SD2"
		EndIf
		
		While ValidWhile(4,cChave,cAliasSD2)
			If !lQuery
				//Caso o produto corrente seja inferior ou superior ao produto inicial do range
				//informado salta para o proximo registro...
				If (SD2->D2_COD < MV_PAR01) .Or. (SD2->D2_COD > MV_PAR02)
					SD2->(dbSkip())
					Loop
				EndIf
				
				//Caso o grupo corrente nao esteja no range determinado pelo usuario
				//salta para o proximo registro...
				If (SD2->D2_GRUPO < MV_PAR06) .Or. (SD2->D2_GRUPO > MV_PAR07)
					SD2->(dbSkip())
					Loop
				EndIf
				
				//Caso o local corrente nao esteja no range determinado pelo usuario
				//salta para o proximo registro...
				If (SD2->D2_LOCAL < MV_PAR10) .Or. (SD2->D2_LOCAL > MV_PAR11)
					SD2->(dbSkip())
					Loop
				EndIf
				
				//Caso o TES corrente nao esteja no range determinado pelo usuario
				//salta para o proximo registro...
				If (SD2->D2_TES < MV_PAR16) .Or. (SD2->D2_TES > MV_PAR17)
					SD2->(dbSkip())
					Loop
				EndIf
				
				//Caso o tipo seja diferente salta para o proximo registro...
				If (SD2->D2_TIPO <> F2_TIPO) .Or. (SD2->D2_TIPODOC <> F2_TIPODOC)
					SD2->(dbSkip())
					Loop
				EndIf
			EndIf
			
			aImpInf := TesImpInf((cAliasSD2)->D2_TES)
			For nI := 1 To Len(aImpInf)
				If aImpInf[nI][03] <> "3"
					If (nF2MOEDA <> MV_PAR18) .And. (MV_PAR19 == 1)
						nImpDis    += Round(xMoeda((cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF2MOEDA,MV_PAR18,dF2EMISSAO,nDecimais+1,nF2TXMOEDA),nDecimais)
						nTotImpDis += Round(xMoeda((cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF2MOEDA,MV_PAR18,dF2EMISSAO,nDecimais+1,nF2TXMOEDA),nDecimais)
						nTotGImpDis+= Round(xMoeda((cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF2MOEDA,MV_PAR18,dF2EMISSAO,nDecimais+1,nF2TXMOEDA),nDecimais)
					Else
						nImpDis    += (cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02])))
						nTotImpDis += (cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02])))
						nTotGImpDis+= (cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02])))
					EndIf
				Else
					If (nF2MOEDA <> MV_PAR18) .And. (MV_PAR19 == 1)
						nImpInc    += Round(xMoeda((cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF2MOEDA,MV_PAR18,dF2EMISSAO,nDecimais+1,nF2TXMOEDA),nDecimais)
						nTotImpInc += Round(xMoeda((cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF2MOEDA,MV_PAR18,dF2EMISSAO,nDecimais+1,nF2TXMOEDA),nDecimais)
						nTotGImpInc+= Round(xMoeda((cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02]))),nF2MOEDA,MV_PAR18,dF2EMISSAO,nDecimais+1,nF2TXMOEDA),nDecimais)
					Else
						nImpInc    += (cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02])))
						nTotImpInc += (cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02])))
						nTotGImpInc+= (cAliasSD2)->(FieldGet(FieldPos(aImpInf[nI][02])))
					EndIf
				EndIf
			Next nI
			SB1->(dbSetOrder(1))
			SB1->(dbSeek(xFilial("SB1")+(cAliasSD2)->D2_COD))
			//Converte o valor para a moeda selecionada pelo usuario...
			If (nF2MOEDA <> MV_PAR18) .And. (MV_PAR19 == 1)
				nPrcVen  := Round(xMoeda((cAliasSD2)->D2_PRCVEN,nF2MOEDA,MV_PAR18,dF2EMISSAO,nDecimais+1,nF2TXMOEDA),nDecimais)
				nValBrut := Round(xMoeda((cAliasSD2)->D2_TOTAL,nF2MOEDA,MV_PAR18,dF2EMISSAO,nDecimais+1,nF2TXMOEDA),nDecimais)
			Else
				nPrcVen  := (cAliasSD2)->D2_PRCVEN
				nValBrut := (cAliasSD2)->D2_TOTAL
			EndIf
			AAdd(aDadosImpDet,{SB1->B1_COD, SB1->B1_DESC, (cAliasSD2)->D2_TES, nImpDis,;
			nImpInc, (cAliasSD2)->D2_LOCAL, (cAliasSD2)->D2_QUANT,;
			nPrcVen, nValBrut})
			
			(cAliasSD2)->(dbSkip())
			nImpDis := 0
			nImpInc := 0
		End
		
		//Caso nao tenha encontrado nenhum registro no arquivo SD2 avanca para o proximo
		//registro do arquivo SF2...
		If Empty(aDadosImpDet)
			dbSkip() // Avanza el puntero del registro en el archivo
			Loop
		EndIf
		
		If (MV_PAR05 <> 1) .Or. (nOrdem <> 1)
			AAdd(aDadosImp,{cF2DOC, cF2SERIE, dF2EMISSAO, cCodCliFor, cLoja,;
			cNomeCliFor, nTotImpDis, nTotImpInc,;
			nF2VALBRUT, AllTrim(cF2ESPECIE), "", "", "",;
			dDtDigit})
		Else
			AAdd(aDadosImp,{cF2DOC, cF2SERIE, dF2EMISSAO, cCodCliFor, cLoja,;
			cNomeCliFor, nF2VALBRUT, AllTrim(cF2ESPECIE),;
			cF2COND, dF2EMISSAO, aClone(aDadosImpDet),;
			nTotImpDis, nTotImpInc, dDtDigit})
		EndIf
		
		nTotImpDis   := 0
		nTotImpInc   := 0
		aDadosImpDet := {}
		If !lQuery 
			dbSkip() // Avanza el puntero del registro en el archivo
		Endif
	EndDo
EndIf

If !lRelease4
	If lQuery .And. lRet
		dbCloseArea()
	EndIf
EndIf
RestArea(aAreaSD2)
RestArea(aAreaSF2)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ValidWhileº Autor ³ Julio Cesar        ºFecha ³  08-10-03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Realiza a validacao dos loops conforme os parametros       º±±
±±º          ³ recebidos pela funcao.                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6 IDE                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ValidWhile(nValid,cChave,cAliasSD)

Local lRet := .F.

Do Case
	Case nValid == 1
		If !lQuery
			lRet := !Eof() .And. F1_FILIAL+F1_DOC+F1_SERIE+F1_FORNECE <= xFilial("SF1")+MV_PAR13+MV_PAR15+MV_PAR09
	    Else
			lRet := !Eof()
		EndIf	    
	Case nValid == 2
		If !lQuery
			lRet :=	!SD1->(Eof()) .And. SD1->D1_FILIAL+SD1->D1_DOC+SD1->D1_SERIE+;
			    	SD1->D1_FORNECE+SD1->D1_LOJA == F1_FILIAL+cChave
		Else
			lRet := !(cAliasSD)->(Eof()) .And. (cAliasSD)->D1_FILIAL+;
			        (cAliasSD)->D1_DOC+(cAliasSD)->D1_SERIE+;
			    	(cAliasSD)->D1_FORNECE+(cAliasSD)->D1_LOJA == F1_FILIAL+cChave
		EndIf
	Case nValid == 3
		If !lQuery
			lRet := !Eof() .And. F2_FILIAL+F2_SERIE+DToS(F2_EMISSAO)+F2_DOC+F2_CLIENTE <= xFilial("SF2")+MV_PAR15+DToS(MV_PAR04)+MV_PAR13+MV_PAR09 
		Else
			lRet := !Eof()
		EndIf
	Case nValid == 4
		If !lQuery
			lRet :=	!SD2->(Eof()) .And. SD2->D2_FILIAL+SD2->D2_DOC+SD2->D2_SERIE+;
			        SD2->D2_CLIENTE+SD2->D2_LOJA == F2_FILIAL+cChave
		Else
			lRet :=	!(cAliasSD)->(Eof()) .And. (cAliasSD)->D2_FILIAL+;
			        (cAliasSD)->D2_DOC+(cAliasSD)->D2_SERIE+;
			        (cAliasSD)->D2_CLIENTE+(cAliasSD)->D2_LOJA == F2_FILIAL+cChave
		EndIf
EndCase

Return lRet


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MQuerySF1 º Autor ³ Julio Cesar        ºFecha ³  08-10-03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Monta as querys para filtro nos arquivos SF1 e SD1         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6 IDE                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MQuerySF1(aAreaSF1,cAliasSF1,cAliasSD1,cAliasQry,oReport)
Local cCliFor  := ""
Local cQuery   := ""
Local cCpos    := "" 
Local cCposSD1 := "" 
Local cOrdem   := ""
Local cDocSer  := ""
Local aStru    := {}
Local nPos     := 0
Local nI       := 0
Local nX       := 0

//Armazena a area Original...
aAreaSF1 := GetArea()


If lRelease4
	cAliasSF1 := cAliasQry
	cAliasSD1 := cAliasQry
	cOrdem := "%" + SqlOrder(SD1->(IndexKey(1))) + "%"
	cWhere :="%"
	If MV_PAR19 == 2
		cWhere += " AND F1_MOEDA = "+Transform(MV_PAR18,PesqPict("SF1","F1_MOEDA",TamSX3("F1_MOEDA")[1],TamSX3("F1_MOEDA")[2]))
	EndIf
	cWhere +="%"
	
	//SF1 - Campos de impostos
	aStru := SF1->(dbStruct())
	cCpos := "%"
	While .T.
		nPos := aScan(aStru,{|x| SubStr(x[1],1,9)=="F1_BASIMP" .Or. SubStr(x[1],1,9)=="F1_VALIMP"},nPos+1)
		If nPos == 0
			Exit
		Else
			cCpos += ", "+AllTrim(aStru[nPos][1])
		EndIf
	End
	cCpos += "%"
	//SD1 - Campos de impostos
	aStru := SD1->(dbStruct())
	cCposSD1 := "%"
	While .T.
		nPos := aScan(aStru,{|x| SubStr(x[1],1,9)=="D1_BASIMP" .Or. SubStr(x[1],1,9)=="D1_VALIMP"},nPos+1)
		If nPos == 0
			Exit
		Else
			cCposSD1 += ", "+AllTrim(aStru[nPos][1])
		EndIf
	End
	cCposSD1 += "%"
	//Query para o arquivo SF1...
	oReport:Section(1):BeginQuery()	
	BeginSql Alias cAliasSF1
	SELECT F1_FILIAL, F1_DOC, F1_SERIE, F1_FORNECE, F1_LOJA,
	F1_ESPECIE, F1_EMISSAO, F1_MOEDA, F1_TXMOEDA, F1_VALBRUT,
	F1_COND, F1_TIPO, F1_TIPODOC, F1_DTDIGIT %Exp:cCpos%
	//query para arquivo SD1	
	,D1_FILIAL, D1_DOC, D1_SERIE, D1_FORNECE, D1_LOJA,D1_COD, D1_GRUPO, D1_LOCAL, D1_TES, D1_VUNIT, 
	D1_TOTAL, D1_VALDESC,D1_QUANT %Exp:cCposSD1%

	FROM %table:SF1% SF1, %table:SD1% SD1
	
	WHERE F1_FILIAL = %xFilial:SF1%
	AND F1_DOC >= %Exp:MV_PAR12% AND F1_DOC <= %Exp:MV_PAR13%
	AND F1_SERIE >= %Exp:MV_PAR14% AND F1_SERIE <= %Exp:MV_PAR15%
	AND F1_FORNECE >= %Exp:MV_PAR08% AND F1_FORNECE <= %Exp:MV_PAR09%
	AND F1_ESPECIE = %Exp:cEspecie%
	AND F1_EMISSAO >= %Exp:DToS(MV_PAR03)% AND F1_EMISSAO <= %Exp:DToS(MV_PAR04)%
	AND F1_DTDIGIT >= %Exp:DToS(MV_PAR20)% AND F1_DTDIGIT <= %Exp:DToS(MV_PAR21)%
	AND SF1.%notdel%
	//---condicao para SD1
	AND D1_FILIAL = %Exp:xFilial("SD1")%
	AND D1_DOC = F1_DOC
	AND D1_SERIE = F1_SERIE
	AND D1_TIPO = F1_TIPO
	AND D1_TIPODOC = F1_TIPODOC
	AND D1_FORNECE = F1_FORNECE
	AND D1_LOJA = F1_LOJA
	AND D1_COD BETWEEN %Exp:MV_PAR01% AND %Exp:MV_PAR02%
	AND D1_GRUPO BETWEEN %Exp:MV_PAR06% AND %Exp:MV_PAR07%
	AND D1_LOCAL BETWEEN %Exp:MV_PAR10% AND %Exp:MV_PAR11%
	AND D1_TES BETWEEN %Exp:MV_PAR16% AND %Exp:MV_PAR17%
	AND SD1.%notdel%
	//
	%Exp:cWhere%	
	ORDER BY %Exp:cOrdem%
	EndSql 
	oReport:Section(1):EndQuery(/*Array com os parametros do tipo Range*/)
	
Else

	//Determina o alias do arquivo SF1/SD1...
	cAliasSF1 := GetNextAlias()
	cAliasSD1 := cAliasSF1

	//Campos SF1
	Aadd(aStru,SF1->(dbStruct()))
	While .T.
		nPos := aScan(aStru[1],{|x| SubStr(x[1],1,9)=="F1_BASIMP" .Or. SubStr(x[1],1,9)=="F1_VALIMP"},nPos+1)
		If nPos == 0
			Exit
		Else
			cCpos += ", "+AllTrim(aStru[1][nPos][1])
		EndIf
	End
	cQuery := "SELECT F1_FILIAL, F1_DOC, F1_SERIE, F1_FORNECE, F1_LOJA,"
	cQuery += " F1_ESPECIE, F1_EMISSAO, F1_MOEDA, F1_TXMOEDA, F1_VALBRUT,"
	cQuery += " F1_COND, F1_TIPO, F1_TIPODOC, F1_DTDIGIT"+cCpos
	//Campos SD1
	Aadd(aStru,SD1->(dbStruct()))
	cCpos := ""
	While .T.
		nPos := aScan(aStru[2],{|x| SubStr(x[1],1,9)=="D1_BASIMP" .Or. SubStr(x[1],1,9)=="D1_VALIMP"},nPos+1)
		If nPos == 0
			Exit
		Else
			cCpos += ", "+AllTrim(aStru[2][nPos][1])
		EndIf
	End
	cQuery += ",D1_FILIAL, D1_DOC, D1_SERIE, D1_FORNECE, D1_LOJA,"
	cQuery += " D1_COD, D1_GRUPO, D1_LOCAL, D1_TES, D1_VUNIT, D1_TOTAL,D1_VALDESC,"
	cQuery += " D1_QUANT"+cCpos
	//
	cQuery += " FROM " + RetSQLName("SD1") + " SD1, " + RetSQLName("SF1") + " SF1  WHERE"
	//---condicao para SF1
	cQuery += " F1_FILIAL = '" + xFilial("SF1") + "'"
	cQuery += " AND F1_DOC BETWEEN '"+MV_PAR12+"' AND '"+MV_PAR13+"'"
	cQuery += " AND F1_SERIE BETWEEN '"+MV_PAR14+"' AND '"+MV_PAR15+"'"	 
	cQuery += " AND F1_FORNECE BETWEEN '"+MV_PAR08+"' AND '"+MV_PAR09+"'"	
	cQuery += " AND SubString(F1_ESPECIE,1,3) = '"+cEspecie+"'" 
	cQuery += " AND F1_EMISSAO BETWEEN '"+DToS(MV_PAR03)+"' AND '"+DToS(MV_PAR04)+"'"	
	If MV_PAR19 == 2
		cQuery += " AND F1_MOEDA = "+Transform(MV_PAR18,PesqPict("SF1","F1_MOEDA",TamSX3("F1_MOEDA")[1],TamSX3("F1_MOEDA")[2]))
	EndIf
	cQuery += " AND F1_DTDIGIT BETWEEN '"+DToS(MV_PAR20)+"' AND '"+DToS(MV_PAR21)+"'"	
	cQuery += " AND SF1.D_E_L_E_T_ = ' '"
	//---condicao para SD1
	cQuery += " AND D1_FILIAL = '" + xFilial("SD1") + "'"
	cQuery += " AND D1_DOC = F1_DOC"
	cQuery += " AND D1_SERIE = F1_SERIE "
	cQuery += " AND D1_TIPO = F1_TIPO"
	cQuery += " AND D1_TIPODOC = F1_TIPODOC"
	cQuery += " AND D1_FORNECE = F1_FORNECE"
	cQuery += " AND D1_LOJA = F1_LOJA"
	cQuery += " AND D1_COD BETWEEN '"+MV_PAR01+"' AND '"+MV_PAR02+"'"
	cQuery += " AND D1_GRUPO BETWEEN '"+MV_PAR06+"' AND '"+MV_PAR07+"'"
	cQuery += " AND D1_LOCAL BETWEEN '"+MV_PAR10+"' AND '"+MV_PAR11+"'"
	cQuery += " AND D1_TES BETWEEN '"+MV_PAR16+"' AND '"+MV_PAR17+"'"
	cQuery += " AND SD1.D_E_L_E_T_ = ' '"
	//
	cQuery += " ORDER BY "+SqlOrder(SD1->(IndexKey(1)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea( .T., "TOPCONN", TCGenQry(,,cQuery), cAliasSF1, .F., .T.)
			           
	For nI := 1 To Len(aStru)
		For nX := 1 To Len(aStru[nI])
			If aStru[nI][nX][2] != "C"
				TCSetField(cAliasSD1, aStru[nI][nX][1], aStru[nI][nX][2], aStru[nI][nX][3], aStru[nI][nX][4])
			EndIf
		Next
	Next nI
EndIf

dbSelectArea(cAliasSF1)
dbGoTop()
Return .T.



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MQuerySF2 º Autor ³ Julio Cesar        ºFecha ³  08-10-03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Monta as querys para filtro nos arquivos SF2 e SD2         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6 IDE                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MQuerySF2(aAreaSF2,cAliasSF2,cAliasSD2,cAliasQry,oReport)

Local cCliFor  := ""
Local cQuery   := ""
Local cCpos    := "" 
Local cCposSD2 := "" 
Local cOrdem   := ""
Local cDocSer  := ""
Local cTipo    := ""
Local cTipoDoc := ""
Local aStru    := {}
Local nPos     := 0
Local nI       := 0
Local nX       := 0

//Armazena a area Original...
aAreaSF2 := GetArea()
		
If lRelease4
	cOrdem := "%" + SqlOrder(SD2->(IndexKey(3))) + "%"
	cWhere :="%"
	If MV_PAR19 == 2
		cWhere += " AND F2_MOEDA = "+Transform(MV_PAR18,PesqPict("SF2","F2_MOEDA",TamSX3("F2_MOEDA")[1],TamSX3("F2_MOEDA")[2]))
	EndIf
	cWhere +="%"
	cAliasSF2 := cAliasQry
	cAliasSD2 := cAliasQry
	                              
	//SF2 - Acrescenta os campos refentes aos impostos...	
	aStru := SF2->(dbStruct())
	cCpos := "%"
	While .T.
		nPos := aScan(aStru,{|x| SubStr(x[1],1,9)=="F2_BASIMP" .Or. SubStr(x[1],1,9)=="F2_VALIMP"},nPos+1)
		If nPos == 0
			Exit
		Else
			cCpos += ", "+AllTrim(aStru[nPos][1])
		EndIf
	End  
	cCpos += "%"
	//SD2 - Acrescenta os campos refentes aos impostos...	
	aStru := SD2->(dbStruct())
	cCposSD2 := "%"
	While .T.
		nPos := aScan(aStru,{|x| SubStr(x[1],1,9)=="D2_BASIMP" .Or. SubStr(x[1],1,9)=="D2_VALIMP"},nPos+1)
		If nPos == 0
			Exit
		Else
			cCposSD2 += ", "+AllTrim(aStru[nPos][1])
		EndIf
	End
	cCposSD2 += "%"
	
	If AllTrim(cCampoData) == "F2_DTDIGIT"
		oReport:Section(1):BeginQuery()	
		BeginSql Alias cAliasQry

		SELECT F2_FILIAL, F2_DOC, F2_SERIE, F2_CLIENTE, F2_LOJA,
		F2_ESPECIE, F2_EMISSAO, F2_MOEDA, F2_TXMOEDA, F2_VALBRUT,
		F2_COND, F2_TIPO, F2_TIPODOC, F2_DTDIGIT %Exp:cCpos%
		//
		,D2_FILIAL, D2_DOC, D2_SERIE, D2_CLIENTE, D2_LOJA,
		D2_COD, D2_GRUPO, D2_LOCAL, D2_TES, D2_PRCVEN, D2_TOTAL,
		D2_QUANT, D2_ITEM %Exp:cCposSD2%

		FROM %table:SF2% SF2, %table:SD2% SD2
		
		WHERE F2_FILIAL = %Exp:xFilial("SF2")%
		AND F2_DOC >= %Exp:MV_PAR12% AND F2_DOC <= %Exp:MV_PAR13%
		AND F2_SERIE >= %Exp:MV_PAR14% AND F2_SERIE <= %Exp:MV_PAR15%
		AND F2_CLIENTE >= %Exp:MV_PAR08% AND F2_CLIENTE <= %Exp:MV_PAR09%
		AND F2_ESPECIE = %Exp:cEspecie%
		AND F2_EMISSAO >= %Exp:DToS(MV_PAR03)% AND F2_EMISSAO <= %Exp:DToS(MV_PAR04)%
		AND F2_DTDIGIT >= %Exp:DToS(MV_PAR20)% AND  F2_DTDIGIT <= %Exp:DToS(MV_PAR21)%
		AND SF2.%notdel%
		//
		AND D2_FILIAL = %Exp:xFilial("SD2")%
		AND D2_DOC = F2_DOC
	    AND D2_SERIE = F2_SERIE
	    AND D2_TIPO = F2_TIPO
	    AND D2_TIPODOC = F2_TIPODOC
		AND D2_CLIENTE = F2_CLIENTE
		AND D2_LOJA = F2_LOJA
		AND D2_COD BETWEEN %Exp:MV_PAR01% AND %Exp:MV_PAR02%
		AND D2_GRUPO BETWEEN %Exp:MV_PAR06% AND %Exp:MV_PAR07%
		AND D2_LOCAL BETWEEN %Exp:MV_PAR10% AND %Exp:MV_PAR11%
		AND D2_TES BETWEEN %Exp:MV_PAR16% AND %Exp:MV_PAR17%
		AND SD2.%notdel%
		ORDER BY %Exp:cOrdem%
		EndSql
		oReport:Section(1):EndQuery(/*Array com os parametros do tipo Range*/)
	Else
		oReport:Section(1):BeginQuery()	
		BeginSql Alias cAliasQry

		SELECT F2_FILIAL, F2_DOC, F2_SERIE, F2_CLIENTE, F2_LOJA,
		F2_ESPECIE, F2_EMISSAO, F2_MOEDA, F2_TXMOEDA, F2_VALBRUT,
		F2_COND, F2_TIPO, F2_TIPODOC %Exp:cCpos%
		//
		,D2_FILIAL, D2_DOC, D2_SERIE, D2_CLIENTE, D2_LOJA,
		D2_COD, D2_GRUPO, D2_LOCAL, D2_TES, D2_PRCVEN, D2_TOTAL,
		D2_QUANT, D2_ITEM %Exp:cCposSD2%
		
		FROM %table:SF2% SF2, %table:SD2% SD2
		
		WHERE F2_FILIAL = %Exp:xFilial("SF2")%
		AND F2_DOC >= %Exp:MV_PAR12% AND F2_DOC <= %Exp:MV_PAR13%
		AND F2_SERIE >= %Exp:MV_PAR14% AND F2_SERIE <= %Exp:MV_PAR15%
		AND F2_CLIENTE >= %Exp:MV_PAR08% AND F2_CLIENTE <= %Exp:MV_PAR09%
		AND F2_ESPECIE = %Exp:cEspecie%
		AND F2_EMISSAO >= %Exp:DToS(MV_PAR03)% AND F2_EMISSAO <= %Exp:DToS(MV_PAR04)%
		AND SF2.%notdel%
		//
		AND D2_DOC = F2_DOC
	    AND D2_SERIE = F2_SERIE
	    AND D2_TIPO = F2_TIPO
	    AND D2_TIPODOC = F2_TIPODOC
		AND D2_CLIENTE = F2_CLIENTE
		AND D2_LOJA = F2_LOJA
		AND D2_COD BETWEEN %Exp:MV_PAR01% AND %Exp:MV_PAR02%
		AND D2_GRUPO BETWEEN %Exp:MV_PAR06% AND %Exp:MV_PAR07%
		AND D2_LOCAL BETWEEN %Exp:MV_PAR10% AND %Exp:MV_PAR11%
		AND D2_TES BETWEEN %Exp:MV_PAR16% AND %Exp:MV_PAR17%
		AND SD2.%notdel%
		ORDER BY %Exp:cOrdem%
		EndSql
		oReport:Section(1):EndQuery(/*Array com os parametros do tipo Range*/)
	EndIf
	
Else

	//Determina o alias do arquivo SF1...
	cAliasSF2 := GetNextAlias()
	cAliasSD2 := cAliasSF2

	Aadd(aStru,SF2->(dbStruct()))
	//Acrescenta os campos refentes aos impostos...	
	While .T.
		nPos := aScan(aStru[1],{|x| SubStr(x[1],1,9)=="F2_BASIMP" .Or. SubStr(x[1],1,9)=="F2_VALIMP"},nPos+1)
		If nPos == 0
			Exit
		Else
			cCpos += ", "+AllTrim(aStru[1][nPos][1])
		EndIf
	End
	cCpos  += IIf(SF2->(FieldPos("F2_DTDIGIT")) > 0,",F2_DTDIGIT","")
	cQuery := "SELECT F2_FILIAL, F2_DOC, F2_SERIE, F2_CLIENTE, F2_LOJA,"
	cQuery += " F2_ESPECIE, F2_EMISSAO, F2_MOEDA, F2_TXMOEDA, F2_VALBRUT,"
	cQuery += " F2_COND, F2_TIPO, F2_TIPODOC"+cCpos
	Aadd(aStru,SD2->(dbStruct()))
	//Acrescenta os campos refentes aos impostos...	
	cCpos := ""
	While .T.
		nPos := aScan(aStru[2],{|x| SubStr(x[1],1,9)=="D2_BASIMP" .Or. SubStr(x[1],1,9)=="D2_VALIMP"},nPos+1)
		If nPos == 0
			Exit
		Else
			cCpos += ", "+AllTrim(aStru[2][nPos][1])
		EndIf
	End
	cQuery += ",D2_FILIAL, D2_DOC, D2_SERIE, D2_CLIENTE, D2_LOJA,"
	cQuery += " D2_COD, D2_GRUPO, D2_LOCAL, D2_TES, D2_PRCVEN, D2_TOTAL,"
	cQuery += " D2_QUANT, D2_ITEM"+cCpos
	//
	cQuery += " FROM " + RetSQLName("SD2") + " SD2, " + RetSQLName("SF2") + " SF2 WHERE"
	//---condicao para SF2
	cQuery += " F2_FILIAL = '" + xFilial("SF2") + "'"
	cQuery += " AND F2_DOC BETWEEN '"+MV_PAR12+"' AND '"+MV_PAR13+"'"
	cQuery += " AND F2_SERIE BETWEEN '"+MV_PAR14+"' AND '"+MV_PAR15+"'"	 
	cQuery += " AND F2_CLIENTE BETWEEN '"+MV_PAR08+"' AND '"+MV_PAR09+"'"	
	cQuery += " AND SubString(F2_ESPECIE,1,3) = '"+cEspecie+"'" 
	cQuery += " AND F2_EMISSAO BETWEEN '"+DToS(MV_PAR03)+"' AND '"+DToS(MV_PAR04)+"'"	
	If MV_PAR19 == 2
		cQuery += " AND F2_MOEDA = "+Transform(MV_PAR18,PesqPict("SF2","F2_MOEDA",TamSX3("F2_MOEDA")[1],TamSX3("F2_MOEDA")[2]))
	EndIf
	cQuery += " AND "+cCampoData+" BETWEEN '"+DToS(MV_PAR20)+"' AND '"+DToS(MV_PAR21)+"'"	
	cQuery += " AND SF2.D_E_L_E_T_ = ' '"
	//---condicao para SD2
	cQuery += " AND D2_FILIAL = '" + xFilial("SD2") + "'"
	cQuery += " AND D2_DOC = F2_DOC"
	cQuery += " AND D2_SERIE = F2_SERIE"
	cQuery += " AND D2_TIPO = F2_TIPO"
	cQuery += " AND D2_TIPODOC = F2_TIPODOC"
	cQuery += " AND D2_CLIENTE = F2_CLIENTE"
	cQuery += " AND D2_LOJA = F2_LOJA"
	cQuery += " AND D2_COD BETWEEN '"+MV_PAR01+"' AND '"+MV_PAR02+"'"
	cQuery += " AND D2_GRUPO BETWEEN '"+MV_PAR06+"' AND '"+MV_PAR07+"'"
	cQuery += " AND D2_LOCAL BETWEEN '"+MV_PAR10+"' AND '"+MV_PAR11+"'"
	cQuery += " AND D2_TES BETWEEN '"+MV_PAR16+"' AND '"+MV_PAR17+"'"
	cQuery += " AND SD2.D_E_L_E_T_ = ' '"
	//
	cQuery += " ORDER BY "+SqlOrder(SD2->(IndexKey(3)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea( .T., "TOPCONN", TCGenQry(,,cQuery), cAliasSF2, .F., .T.)

	For nI := 1 To Len(aStru)
		For nX := 1 To Len(aStru[nI])
			If aStru[nI][nX][2] != "C"
				TCSetField(cAliasSD2, aStru[nI][nX][1], aStru[nI][nX][2], aStru[nI][nX][3], aStru[nI][nX][4])
			EndIf
		Next
	Next nI  
Endif

//Seleciona a area referente ao arquivo SF2...
dbSelectArea(cAliasSF2)   
dbGoTop()
Return .T.
