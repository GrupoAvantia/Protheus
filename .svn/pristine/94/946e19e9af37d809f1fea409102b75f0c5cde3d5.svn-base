#INCLUDE "PROTHEUS.CH"
#INCLUDE "MATR331.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATR331  ³ Autor ³ Ricardo Berti			³ Data ³17/07/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Relatorio para listagem de recursividade por movimentacao   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATR331()

Local oReport

If FindFunction("TRepInUse") .And. TRepInUse()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Interface de impressao                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport:= ReportDef()
	oReport:PrintDialog()
Else
	MATR331R3()
EndIf

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³ Ricardo Berti 		³ Data ³17.07.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatório                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()

Local oReport 
Local oSection1
Local oCell         
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inclui Help no SX1	  						                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX1()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do componente de impressao                                      ³
//³                                                                        ³
//³TReport():New                                                           ³
//³ExpC1 : Nome do relatorio                                               ³
//³ExpC2 : Titulo                                                          ³
//³ExpC3 : Pergunte                                                        ³
//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
//³ExpC5 : Descricao                                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:= TReport():New("MATR331",STR0001,"MTR331", {|oReport| ReportPrint(oReport)},STR0002+" "+STR0003+" "+STR0004) //"Recursividade por Movimentacao"##"Este relatorio tem como objetivo listar as movimentacoes"###"que geram recursividade no processamento do recalculo do"####"custo medio."
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTR331",.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                    	³
//³ mv_par01     // Data de emissao inicial                     ³
//³ mv_par02     // Data de emissao final                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

oSection1 := TRSection():New(oReport,STR0012,{"SD3"}) //"Recursividade por Movimentacao"##"Itens de Movimentação Interna"
oSection1 :SetHeaderPage(.F.)

TRCell():New(oSection1,"D3_COD"		,"SD3",/*Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"D3_LOCAL"	,"SD3")
TRCell():New(oSection1,"D3_TM"		,"SD3")
TRCell():New(oSection1,"D3_DOC"		,"SD3")
TRCell():New(oSection1,"D3_EMISSAO"	,"SD3")
TRCell():New(oSection1,"D3_OP"		,"SD3")
oCell:=TRCell():New(oSection1,"C2_PRODUTO"	,"SC2")
oCell:SetTitle(STR0010+CRLF+STR0011) //"Produto da "###"Ordem de Producao"

Return(oReport)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrin³ Autor ³ Ricardo Berti 		³ Data ³17.07.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatorio                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportPrint(oReport)

Local oSection1	:= oReport:Section(1) 
Local cAliasSD3	:= "SD3"
Local cArqTemp	:= "" 
Local cIndTemp1	:= ""
Local cOpVazia	:= Criavar("D3_OP",.F.)
Local aArqTemp	:= {}
Local nx		:= 0
Local nRegSD3	:= 0
Local aListaReg	:= {}
Local lRet		:= .T.
Local lImp		:= .F. // Indica se algo foi impresso
#IFNDEF TOP
	Local cCondicao
#ENDIF

// Montagem do arquivo de trabalho
AADD(aArqTemp,{"CODIGO"		,"C",Len(SB1->B1_COD),0})
AADD(aArqTemp,{"COMPONENTE"	,"C",Len(SB1->B1_COD),0})
AADD(aArqTemp,{"OP"			,"C",Len(SD3->D3_OP),0})
AADD(aArqTemp,{"ARMAZEM"	,"C",Len(SD3->D3_LOCAL),0})
AADD(aArqTemp,{"MOVIMENTO"	,"C",Len(SD3->D3_TM),0})
AADD(aArqTemp,{"EMISSAO"	,"D",8,0})
AADD(aArqTemp,{"DOCUMENTO"	,"C",Len(SD3->D3_DOC),0})
AADD(aArqTemp,{"REGISTRO"	,"N",20,0})
AADD(aArqTemp,{"G1NIVEL"	,"C",2,0})
AADD(aArqTemp,{"G1NIVINV"	,"C",2,0})
cArqTemp :=CriaTrab(aArqTemp)
cIndTemp1:=Substr(CriaTrab(NIL,.F.),1,7)+"1"
dbUseArea(.T.,,cArqTemp,cArqTemp,.T.,.F.)
IndRegua(cArqTemp,cIndTemp1,"CODIGO+COMPONENTE+OP")

// Leitura para gravacao de dados no arquivo de trabalho
dbSelectArea("SC2")
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Filtragem do relatório                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFDEF TOP
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Transforma parametros Range em expressao SQL                            ³	
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MakeSqlExpr(oReport:uParam)
	
	cAliasSD3 := GetNextAlias()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Query do relatório da secao 1                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport:Section(1):BeginQuery()	
	
	BeginSql Alias cAliasSD3

		SELECT D3_FILIAL,D3_OP,D3_LOCAL,D3_TM,D3_DOC,D3_COD,D3_EMISSAO,SD3.R_E_C_N_O_ SD3RECNO

		FROM %table:SD3% SD3			

		WHERE	D3_FILIAL   = %xFilial:SD3% AND
				D3_ESTORNO <> 'S' AND
				D3_OP      <> %Exp:cOpVazia% AND
				D3_CF      <> 'PR0' AND D3_CF <> 'PR1' AND
				D3_EMISSAO >= %Exp:DtoS(mv_par01)% AND D3_EMISSAO  <= %Exp:DtoS(mv_par02)% AND 
				SD3.%NotDel% 
				
		ORDER BY D3_FILIAL,D3_OP,D3_COD,D3_EMISSAO
	
	EndSql 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Metodo EndQuery ( Classe TRSection )                                    ³
	//³                                                                        ³
	//³Prepara o relatório para executar o Embedded SQL.                       ³
	//³                                                                        ³
	//³ExpA1 : Array com os parametros do tipo Range                           ³
	//³                                                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport:Section(1):EndQuery(/*Array com os parametros do tipo Range*/)
	
#ELSE
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Transforma parametros Range em expressao Advpl                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MakeAdvplExpr(oReport:uParam)

	cCondicao := " D3_FILIAL == '" + xFilial("SD3") + "' "
	cCondicao += " .And. D3_ESTORNO <> 'S' "
	cCondicao += " .And. D3_OP <> '" + cOpVazia+ "' "
	cCondicao += " .And. D3_CF <> 'PR0' .And. D3_CF <> 'PR1' "
	cCondicao += " .And. DtoS(D3_EMISSAO) >= '" + DtoS(mv_par01) + "'"
	cCondicao += " .And. DtoS(D3_EMISSAO) <= '" + DtoS(mv_par02) + "'"

	oReport:Section(1):SetFilter(cCondicao,"D3_FILIAL+D3_OP+D3_COD+DTOS(D3_EMISSAO)")

#ENDIF		

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicio da impressao do fluxo do relatorio                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

dbSelectArea(cAliasSD3)
oReport:SetMeter(SD3->(LastRec()))

// Grava no arquivo de trabalho
While !oReport:Cancel() .And. !(cAliasSD3)->(Eof())
	If oReport:Cancel()
		Exit
	EndIf	
	// Movimenta regua
	oReport:IncMeter()

	#IFDEF TOP
		nRegSD3:= (cAliasSD3)->SD3RECNO
	#ELSE
		nRegSD3:= (cAliasSD3)->(Recno())
	#ENDIF
	// Posiciona na ordem de producao
	If SC2->(dbSeek(xFilial("SC2")+(cAliasSD3)->D3_OP))
		// Grava relacionamento no arquivo de trabalho
		dbSelectArea(cArqTemp)
		If !dbSeek(SC2->C2_PRODUTO+(cAliasSD3)->D3_COD+(cAliasSD3)->D3_OP)
			RecLock(cArqTemp,.T.)
			Replace CODIGO		With SC2->C2_PRODUTO
			Replace COMPONENTE  With (cAliasSD3)->D3_COD
			Replace OP			With (cAliasSD3)->D3_OP
			Replace ARMAZEM     With (cAliasSD3)->D3_LOCAL
			Replace MOVIMENTO   With (cAliasSD3)->D3_TM 
			Replace EMISSAO     With (cAliasSD3)->D3_EMISSAO
			Replace DOCUMENTO   With (cAliasSD3)->D3_DOC 
			Replace REGISTRO    With nRegSD3
			Replace G1NIVEL     With "01"
			Replace G1NIVINV    With "99"
			MsUnLock()
		EndIf
	EndIf
	dbSelectArea(cAliasSD3)
	dbSkip()
End

// Varre com recursividade o arquivo de trabalho
dbSelectArea(cArqTemp)
oReport:SetMeter(SD3->(LastRec()))
dbGotop()

oSection1:Init()

While !oReport:Cancel() .And. (cArqTemp)->(!Eof())
	If oReport:Cancel()
		Exit
	EndIf	
	// Movimenta regua
	oReport:IncMeter()
	// Checa recursividade
	IF G1NIVEL == "01"
		aListaReg:={}
		lRet := MR331Nivel(COMPONENTE,G1NIVEL,cArqTemp,aListaReg)
		IF !lRet
			nRegSD3:=Recno()
			// Imprime caso exista problema
			For nx:=1 to Len(aListaReg)
				// Checa impressao do separador
				If nx == 1 .And. lImp
            		oReport:ThinLine()
				EndIf
				// Posiciona o registro
				(cArqTemp)->(dbGoto(aListaReg[nx]))			
				// Imprime a informacao desejada
				oSection1:Cell("D3_COD"):SetValue(COMPONENTE)
				oSection1:Cell("D3_LOCAL"):SetValue(ARMAZEM)
				oSection1:Cell("D3_TM"):SetValue(MOVIMENTO)
				oSection1:Cell("D3_DOC"):SetValue(DOCUMENTO)
				oSection1:Cell("D3_EMISSAO"):SetValue(EMISSAO)
				oSection1:Cell("D3_OP"):SetValue(OP)
				oSection1:Cell("C2_PRODUTO"):SetValue(CODIGO)
				oSection1:PrintLine()			
				lImp := .T.
			Next
			dbGoto(nRegSD3)
		Endif
	EndIf
	dbSkip()
Enddo
oSection1:Finish()			

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apaga Arquivos temporarios                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cArqTemp)
dbCloseArea()
Ferase(cArqTemp+GetDBExtension())
Ferase(cIndTemp1+OrdBagExt())

Return Nil



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ MATR331R3³ Autor ³ Rodrigo de A Sartorio ³ Data ³ 04.04.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Relatorio para listagem de recursividade por movimentacao   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATR331R3()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Define Variaveis                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local Titulo  := STR0001 //"Recursividade por Movimentacao"   
Local cDesc1  := STR0002 //"Este relatorio tem como objetivo listar as movimentacoes"   
Local cDesc2  := STR0003 //"que geram recursividade no processamento do recalculo do"  
Local cDesc3  := STR0004 //"custo medio."                                              
Local cString := "SD3"  // Alias utilizado na Filtragem
Local lDic    := .F. // Habilita/Desabilita Dicionario
Local lComp   := .T. // Habilita/Desabilita o Formato Comprimido/Expandido
Local lFiltro := .F. // Habilita/Desabilita o Filtro
Local wnrel   := "MATR331"  // Nome do Arquivo utilizado no Spool
Local nomeprog:= "MATR331"  // nome do programa

Private Tamanho := "M" // P/M/G
Private Limite  := 132 // 80/132/220
Private aOrdem  := {}  // Ordem do Relatorio
Private cPerg   := "MTR331"  // Pergunta do Relatorio
Private aReturn := { STR0005, 1,STR0006, 1, 2, 1, "",1 } //"Zebrado"###"Administracao"
						//[1] Reservado para Formulario
						//[2] Reservado para N§ de Vias
						//[3] Destinatario
						//[4] Formato => 1-Comprimido 2-Normal
						//[5] Midia   => 1-Disco 2-Impressora
						//[6] Porta ou Arquivo 1-LPT1... 4-COM1...
						//[7] Expressao do Filtro
						//[8] Ordem a ser selecionada
						//[9]..[10]..[n] Campos a Processar (se houver)

Private lEnd    := .F.// Controle de cancelamento do relatorio
Private m_pag   := 1  // Contador de Paginas
Private nLastKey:= 0  // Controla o cancelamento da SetPrint e SetDefault

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica as Perguntas Selecionadas                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX1()
Pergunte(cPerg,.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Envia para a SetPrinter                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:=SetPrint(cString,wnrel,cPerg,@titulo,cDesc1,cDesc2,cDesc3,lDic,aOrdem,lComp,Tamanho,,lFiltro)
If ( nLastKey==27 )
	dbSelectArea("SD3")
	dbSetOrder(1)
	Set Filter to
	Return
Endif
SetDefault(aReturn,cString)
If ( nLastKey==27 )
	dbSelectArea("SD3")
	dbSetOrder(1)
	Set Filter to
	Return
Endif
RptStatus({|lEnd| ImpDet(@lEnd,wnRel,nomeprog,Titulo)},Titulo)
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³ ImpDet   ³ Autor ³ Rodrigo de A Sartorio ³ Data ³04.04.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Controle de Fluxo do Relatorio.                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function ImpDet(lEnd,wnrel,nomeprog,Titulo)
Local cbCont   := 0   // Numero de Registros Processados
Local li       := 100 // Contador de Linhas
Local lImp     := .F. // Indica se algo foi impresso
Local cbText   := ""  // Mensagem do Rodape
Local cAliasSD3:= "SD3"
Local cArqIndD3:= ""
Local cArqTemp := "" 
Local cIndTemp1:= ""
Local cOpVazia := Criavar("D3_OP",.F.)
Local aArqTemp := {}
Local nx       := 0
Local nInd     := 0             
Local nRegSD3  := 0
Local aListaReg:= {}
Local lRet     := .T.
Local cQuery
Local cTexto1  := SubStr(STR0007,1,37)+Space(11)+SubStr(STR0007,38,120)
Local cTexto2  := Space(11)+STR0008
//                          1         2         3         4         5         6         7         8         9        10        11        12        13        14        15        16        17        18        19        20        21        22
//                01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
//                XXXXXXXXXXXXXXX    XX   XXX  XXXXXX   XXXXXXXXXX  XXXXXXXXXXXXX  XXXXXXXXXXXXXXX
Local cCabec1:=  cTexto1 //"PRODUTO         ARMAZEM MOV DOCUMENTO  DATA DE     ORDEM DE     PRODUTO DA ORDEM"
Local cCabec2:=  cTexto2 //"                                       EMISSAO     PRODUCAO       DE PRODUCAO"

// Montagem do arquivo de trabalho
AADD(aArqTemp,{"CODIGO","C",Len(SB1->B1_COD),0})
AADD(aArqTemp,{"COMPONENTE","C",Len(SB1->B1_COD),0})
AADD(aArqTemp,{"OP","C",Len(SD3->D3_OP),0})
AADD(aArqTemp,{"ARMAZEM","C",Len(SD3->D3_LOCAL),0})
AADD(aArqTemp,{"MOVIMENTO","C",Len(SD3->D3_TM),0})
AADD(aArqTemp,{"EMISSAO","D",8,0})
AADD(aArqTemp,{"DOCUMENTO","C",Len(SD3->D3_DOC),0})
AADD(aArqTemp,{"REGISTRO","N",20,0})
AADD(aArqTemp,{"G1NIVEL","C",2,0})
AADD(aArqTemp,{"G1NIVINV","C",2,0})
cArqTemp :=CriaTrab(aArqTemp)
cIndTemp1:=Substr(CriaTrab(NIL,.F.),1,7)+"1"
dbUseArea(.T.,,cArqTemp,cArqTemp,.T.,.F.)
IndRegua(cArqTemp,cIndTemp1,"CODIGO+COMPONENTE+OP")

// Leitura para gravacao de dados no arquivo de trabalho
dbSelectArea("SC2")
dbSetOrder(1)

dbSelectArea("SD3")
SetRegua(LastRec())

// Query para filtragem de registros
#IFDEF TOP
	cAliasSD3 := GetNextAlias()
	cQuery := " SELECT SD3.*,SD3.R_E_C_N_O_ SD3RECNO FROM " + RetSqlName("SD3")
	cQuery += " SD3 WHERE D3_FILIAL  = '" + xFilial("SD3") + "' "
	cQuery += " AND D3_ESTORNO <> 'S' "
	cQuery += " AND D3_OP <> '" +cOpVazia+ "' "
	cQuery += " AND D3_CF <> 'PR0' AND D3_CF <> 'PR1' "
	cQuery += " AND D3_EMISSAO BETWEEN '" + DtoS(mv_par01) + "' AND '" + DtoS(mv_par02) + "' "
	cQuery += " AND D_E_L_E_T_ = ' ' ORDER BY D3_FILIAL,D3_OP,D3_COD,D3_EMISSAO"
	cQuery := ChangeQuery( cQuery )
	dbUseArea( .T., "TOPCONN", TcGenQry( , , cQuery ), cAliasSD3, .F., .T. )
	aEval(SD3->(dbStruct()),{|x| If(x[2]!="C",TcSetField(cAliasSD3,AllTrim(x[1]),x[2],x[3],x[4]),Nil)})
#ELSE
	cArqIndD3:= CriaTrab(,.F.)
	cQuery := " D3_FILIAL == '" + xFilial("SD3") + "' "
	cQuery += " .And. D3_ESTORNO <> 'S' "
	cQuery += " .And. D3_OP <> '" + cOpVazia+ "' "
	cQuery += " .And. D3_CF <> 'PR0' .And. D3_CF <> 'PR1' "
	cQuery += " .And. DtoS(D3_EMISSAO) >= '" + DtoS(mv_par01) + "'"
	cQuery += " .And. DtoS(D3_EMISSAO) <= '" + DtoS(mv_par02) + "'"
	IndRegua("SD3",cArqIndD3,"D3_FILIAL+D3_OP+D3_COD+DTOS(D3_EMISSAO)",,cQuery)
	nInd := RetIndex("SD3")
	dbSetIndex(cArqIndD3+OrdBagExt())
	dbSetOrder(nInd+1)
	(cAliasSD3)->(DbGotop())
#ENDIF

// Grava no arquivo de trabalho
While !lEnd .And. (cAliasSD3)->(!Eof())
	// Checa interrupcao
	If lEnd
		@ Prow()+1,001 PSAY STR0009 //"CANCELADO PELO OPERADOR"
		Exit
	EndIf     
	// Movimenta regua
	IncRegua()
	#IFDEFTOP
		nRegSD3:= (cAliasSD3)->SD3RECNO
	#ELSE
		nRegSD3:= (cAliasSD3)->(Recno())
	#ENDIF
	// Posiciona na ordem de producao
	If SC2->(dbSeek(xFilial("SC2")+(cAliasSD3)->D3_OP))
		// Grava relacionamento no arquivo de trabalho
		dbSelectArea(cArqTemp)
		If !dbSeek(SC2->C2_PRODUTO+(cAliasSD3)->D3_COD+(cAliasSD3)->D3_OP)
			RecLock(cArqTemp,.T.)
			Replace CODIGO		With SC2->C2_PRODUTO
			Replace COMPONENTE  With (cAliasSD3)->D3_COD
			Replace OP			With (cAliasSD3)->D3_OP
			Replace ARMAZEM     With (cAliasSD3)->D3_LOCAL
			Replace MOVIMENTO   With (cAliasSD3)->D3_TM 
			Replace EMISSAO     With (cAliasSD3)->D3_EMISSAO
			Replace DOCUMENTO   With (cAliasSD3)->D3_DOC 
			Replace REGISTRO    With nRegSD3
			Replace G1NIVEL     With "01"
			Replace G1NIVINV    With "99"
			MsUnLock()
		EndIf
	EndIf
	dbSelectArea(cAliasSD3)
	dbSkip()
End

// Varre com recursividade o arquivo de trabalho
dbSelectArea(cArqTemp)
SetRegua(LastRec())
dbGotop()
While !lEnd .And. (cArqTemp)->(!Eof())
	// Checa interrupcao
	If lEnd
		@ Prow()+1,001 PSAY STR0009 //"CANCELADO PELO OPERADOR"
		Exit
	EndIf     
	// Movimenta regua
	IncRegua()
	// Checa recursividade
	IF G1NIVEL == "01"
		aListaReg:={}
		lRet := MR331Nivel(COMPONENTE,G1NIVEL,cArqTemp,aListaReg)
		IF !lRet
			nRegSD3:=Recno()
			// Imprime caso exista problema
			For nx:=1 to Len(aListaReg)
				// Checa impressao do cabecalho
				If ( li > 58 )
					li := cabec(Titulo,cCabec1,cCabec2,nomeprog,Tamanho,If(aReturn[4]==1,15,18))
					li++
				Endif			
				// Checa impressao do separador
				If nx == 1 .And. lImp
					@ li,000 PSAY __PrtThinLine()
					li++							
				EndIf
				// Posiciona o registro
				(cArqTemp)->(dbGoto(aListaReg[nx]))			
				// Imprime a informacao desejada
				@ li,000 PSAY Substr(COMPONENTE,1,15)
				@ li,019 PSAY Substr(ARMAZEM,1,2)
				@ li,024 PSAY Substr(MOVIMENTO,1,3)
				@ li,028 PSAY Substr(DOCUMENTO,1,20)
				@ li,050 PSAY EMISSAO 
				@ li,061 PSAY Substr(OP,1,13)			
				@ li,076 PSAY Substr(CODIGO,1,15)
				li++
				lImp := .T.
			Next nx
			dbGoto(nRegSD3)
		Endif
	EndIf
	dbSkip()
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apaga Arquivos temporarios                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFDEF TOP
	dbSelectArea(cAliasSD3)
	dbCloseArea()
#ELSE
	dbSelectArea("SD3")
	RetIndex("SD3")
	FERASE(cArqIndD3+OrdBagExt())
#ENDIF
dbSelectArea(cArqTemp)
dbCloseArea()
Ferase(cArqTemp+GetDBExtension())
Ferase(cIndTemp1+OrdBagExt())

If ( lImp )
	Roda(cbCont,cbText,Tamanho)
EndIf

Set Device To Screen
Set Printer To
If ( aReturn[5] = 1 )
	dbCommitAll()
	OurSpool(wnrel)
Endif
MS_FLUSH()
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³AjustaSX1 ³ Autor ³ Rodrigo de A Sartorio ³ Data ³06.04.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria as perguntas necesarias para o programa                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AjustaSX1()
Local aHelpPor :={} 
Local aHelpEng :={} 
Local aHelpSpa :={} 
/*-----------------------MV_PAR01--------------------------*/
aHelpPor := {"Data de emissao inicial a ser ",	"considerada na filtragem do cadastro."}
aHelpEng := {"Initial issue date to ","consider in the filtering of","file." }
aHelpSpa := {"Fecha de emision inicial a ser ",	"considerado en filtro del archivo."}
PutSx1( "MTR331","01","De data de emissao ?","De la Fecha de Emision ?","Of Issue date ?","mv_ch1","D",8,0,0,"G","","","","","mv_par01","","","","'01/01/01'","","","","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)
/*-----------------------MV_PAR02--------------------------*/
aHelpPor := {"Data de emissao final a ser ",	"considerada na filtragem do cadastro."}
aHelpEng := {"Final issue date to ","consider in the filtering of","file." }
aHelpSpa := {"Fecha de emision final a ser ",	"considerado en filtro del archivo."}
PutSx1( "MTR331","02","Ate a data de emissao ?","A fecha de Emision ?","To Issue date ?","mv_ch2","D",8,0,0,"G","","","","","mv_par02","","","","31/12/06","","","","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MR331Nivel³ Autor ³Rodrigo de A Sartorio  ³ Data ³ 25/04/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Acerta os niveis das estruturas no temporario              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR331                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MR331Nivel(cComp,cNivel,cAliasPr,aListaReg)
Local nRec   := Recno()
Local nSalRec:= 0
Local lRet   := .T.
Local lEof   := .F.
Local nAcho  := 0
Local cSeek  := ""

If dbSeek(cComp)
	While !Eof() .and. cComp==CODIGO
		nSalRec:=Recno()
		cSeek  := COMPONENTE
		dbSeek(cSeek)	
		lEof := Eof()
		dbGoto(nSalRec)

		IF Val(cNivel) >= 98  // Testa Erro de estrutura
			lRet := .F.
		Endif

		If Val(cNivel)+1 > Val(G1NIVEL) .and. lRet
			RecLock(cAliasPr,.F.)
			Replace G1NIVEL  With Strzero(Val(cNivel)+1,2)
			Replace G1NIVINV With Strzero(100-Val(G1NIVEL),2,0)
			MsUnLock()
			If !lEof
				lRet := MR331NIVEL(COMPONENTE,G1NIVEL,cAliasPr,aListaReg)
			Endif
		Endif	
		IF !lRet
			IF Val(cNivel) < 98  // Houve erro (no nivel posterior)
				nAcho  := ASCAN(aListaReg,nSalRec)
				// Adiciona, na lista, o registro que originou o erro
				If nAcho == 0
					AADD(aListaReg,nSalRec)
				EndIf
			EndIf		
			Exit
		Endif
		dbSkip()
	End
EndIf
(cAliasPr)->(dbGoto(nRec))
Return(lRet)