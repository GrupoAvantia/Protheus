#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\MATR425.CH"
#line 2 "d:\totvs 11\microsiga\protheus\my projects\materiais\matr425.prx"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Dialog.ch"
#line 28 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Font.ch"
#line 29 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\PTMenu.ch"
#line 31 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Print.ch"
#line 33 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Colors.ch"
#line 35 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\Folder.ch"
#line 37 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\msobject.ch"
#line 38 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\VKey.ch"
#line 42 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\WinApi.ch"
#line 44 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\FWCommand.ch"
#line 47 "PROTHEUS.CH"
#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\FWCSS.CH"
#line 50 "PROTHEUS.CH"
#line 18 "d:\totvs 11\microsiga\protheus\my projects\materiais\matr425.prx"
Function Matr425()

Local oReport

If FindFunction("TRepInUse") .And.  TRepInUse()



	oReport:= ReportDef()
	oReport:PrintDialog()
Else
	MATR425R3()
EndIf

Return














Static Function ReportDef()

Local aOrdem      := {" Por Produto",If( cPaisLoc $ "ANG|PTG", " Por Lote/sub-lote", " Por Lote/Sub-Lote" ),If( cPaisLoc $ "ANG|PTG", " Por Armazém", " Por Armazem" )}
Local cTitle      := If( cPaisLoc $ "ANG|PTG", "Posição De Stock Por Lote/sub-lote", "Posicao de Estoque por Lote/Sub-Lote" )
Local cPicSaldo   := PesqPict("SB8","B8_SALDO"  ,18)
Local cPicEmpenho := PesqPict("SB8","B8_EMPENHO",18)
Local lVersao     := (VAL(GetVersao( .F. )) == 11 .And.  GetRpoRelease() >= "R6" .Or.  VAL(GetVersao( .F. ))  > 11)
Local oReport
Local oSection1
Local oSection2


	Local cAliasSB8 := GetNextAlias()
























AjustaSX1()
Pergunte("MR425A", .F. )











oReport:= TReport():New("MTR425",cTitle,"MR425A", {|oReport| ReportPrint(oReport,aOrdem,cAliasSB8)},If( cPaisLoc $ "ANG|PTG", "ESte programa emitirá uma relação com a posição de", "Este programa emitirá uma relacao com a posiçäo de " )+" "+If( cPaisLoc $ "ANG|PTG", "Stock Por Lote/sub-lote.", "estoque por Lote/Sub-Lote." ))
oReport:SetLandscape()


































oSection1:= TRSection():New(oReport,If( cPaisLoc $ "ANG|PTG", "Saldos Por Lote", "Saldos por Lote" ),{"SB8","SB1","SB2","NNR"},aOrdem)
oSection1:SetTotalInLine( .F. )
oSection1:SetHeaderPage()

TRCell():New(oSection1,"B8_NUMLOTE","SB8",,,,,)
TRCell():New(oSection1,"B8_LOTECTL","SB8",,,,,)
TRCell():New(oSection1,"B8_PRODUTO","SB8",,,,,)
TRCell():New(oSection1,"B1_DESC"   ,"SB1",,,,,)
TRCell():New(oSection1,"SUBLOTE"   ,"   ",,,,,)
TRCell():New(oSection1,"LOTE"      ,"   ",,,,,)
TRCell():New(oSection1,"B8_LOCAL"  ,"SB8",,,,,)
TRCell():New(oSection1,"SALDO1"    ,"   ","Saldo"+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "1a.u.m.", "1a.U.M." ),cPicSaldo  ,18,,,,,"RIGHT")
TRCell():New(oSection1,"EMPENHO1"  ,"   ","Empenho"+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "1a.u.m.", "1a.U.M." ),cPicEmpenho,18,,,,,"RIGHT")
TRCell():New(oSection1,"SALDO2"    ,"   ","Saldo"+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "2a.u.m.", "2a.U.M." ),cPicSaldo  ,18,,,,,"RIGHT")
TRCell():New(oSection1,"EMPENHO2"  ,"   ","Empenho"+Chr(13)+Chr(10)+If( cPaisLoc $ "ANG|PTG", "2a.u.m.", "2a.U.M." ),cPicEmpenho,18,,,,,"RIGHT")
TRCell():New(oSection1,"B8_DATA"   ,"SB8",,,,,)
TRCell():New(oSection1,"B8_DTVALID","SB8",,,,,)
If lVersao
	TRCell():New(oSection1,"NNR_DESCRI","NNR",,,,,)
Else
	TRCell():New(oSection1,"B2_LOCALIZ","SB2",,,,,)
EndIf
oSection1:Cell("SUBLOTE"):GetFieldInfo("B8_NUMLOTE")
oSection1:Cell("LOTE"):GetFieldInfo("B8_LOTECTL")

Return(oReport)
















Static Function ReportPrint(oReport,aOrdem,cAliasSB8)

Local oSection1  := oReport:Section(1)
Local oSection2  := oReport:Section(1):Section(1)
Local nOrdem     := oReport:Section(1):GetOrder()
Local cOrdem     := ""
Local cIndexKey  := ""
Local cCondicao  := ""
Local cLoteAnt   := ""
Local cProdAnt   := ""
Local cDescAnt   := ""
Local cSLotAnt   := ""
Local cAlmoAnt   := ""
Local cSeekSB8   := ""
Local cCondSB8   := ""
Local cDescArm   := ""
Local dDataAnt   := CtoD("  /  /  ")
Local dValiAnt   := CtoD("  /  /  ")
Local nSaldo     := 0
Local nEmpenho   := 0
Local nSaldo2    := 0
Local nEmpenho2  := 0
Local lPrinted   := .F. 
Local lSubLote   := .F. 
Local lEmpPrev   := If(SuperGetMV("MV_QTDPREV")== "S", .T. , .F. )
Local lVersao    := (VAL(GetVersao( .F. )) == 11 .And.  GetRpoRelease() >= "R6" .Or.  VAL(GetVersao( .F. ))  > 11)




oReport:SetTitle(oReport:Title() + " ("+AllTrim(aOrdem[nOrdem])+") ")

dbSelectArea("SB1")
dbSetOrder(1)

dbSelectArea("SB8")





 	MakeSqlExpr(oReport:uParam)

 	oReport:Section(1):BeginQuery()

	If nOrdem == 1
		cOrdem := "% B8_FILIAL,B8_PRODUTO,B8_LOCAL,B8_LOTECTL,B8_NUMLOTE %"
	ElseIf nOrdem == 2
		cOrdem := "% B8_FILIAL,B8_LOTECTL,B8_NUMLOTE,B8_PRODUTO,B8_LOCAL %"
	ElseIf nOrdem == 3
		cOrdem := "% B8_FILIAL,B8_LOCAL,B8_LOTECTL,B8_NUMLOTE,B8_PRODUTO %"
	EndIf






















__execSql(cAliasSB8," SELECT SB8.*,SB8.R_E_C_N_O_ AS SB8Recno FROM  "+RetSqlName('SB8')+" SB8 WHERE B8_FILIAL =  '" +xFilial('SB8')+"'  AND B8_PRODUTO >=  "+___SQLGetValue(MV_PAR01)+" AND B8_PRODUTO <=  "+___SQLGetValue(MV_PAR02)+" AND B8_LOTECTL >=  "+___SQLGetValue(MV_PAR03)+" AND B8_LOTECTL <=  "+___SQLGetValue(MV_PAR04)+" AND B8_NUMLOTE >=  "+___SQLGetValue(MV_PAR05)+" AND B8_NUMLOTE <=  "+___SQLGetValue(MV_PAR06)+" AND B8_LOCAL >=  "+___SQLGetValue(MV_PAR07)+" AND B8_LOCAL <=  "+___SQLGetValue(MV_PAR08)+" AND B8_DTVALID >=  "+___SQLGetValue(DTOS(MV_PAR16))+" AND B8_DTVALID <=  "+___SQLGetValue(DTOS(MV_PAR17))+" AND SB8.D_E_L_E_T_= ' ' ORDER BY  "+___SQLGetValue(CORDEM),{},.F.)

    oReport:Section(1):EndQuery()






























If nOrdem == 1 .Or.  nOrdem == 3
	 oSection1:Cell("B8_NUMLOTE"):Disable()
	 oSection1:Cell("B8_LOTECTL"):Disable()
ElseIf nOrdem == 2
	 oSection1:Cell("SUBLOTE"):Disable()
	 oSection1:Cell("LOTE"):Disable()
EndIf

If mv_par15 == 2
	 If(lVersao,oSection1:Cell("NNR_DESCRI"):Disable(),oSection1:Cell("B2_LOCALIZ"):Disable())
EndIf

If mv_par14 == 2
	 oSection1:Cell("SALDO2"):Disable()
	 oSection1:Cell("EMPENHO2"):Disable()
Else
	TRFunction():New(oSection1:Cell("SALDO2"  ),NIL,"SUM",,,,, .T. , .F. ,,oSection1)
	TRFunction():New(oSection1:Cell("EMPENHO2"),NIL,"SUM",,,,, .T. , .F. ,,oSection1)
EndIf

TRFunction():New(oSection1:Cell("SALDO1"  ),NIL,"SUM",,,,, .T. , .F. ,,oSection1)
TRFunction():New(oSection1:Cell("EMPENHO1"),NIL,"SUM",,,,, .T. , .F. ,,oSection1)


oReport:SetMeter(SB8->(LastRec()))
dbSelectArea(cAliasSB8)

While !oReport:Cancel() .And.  !(cAliasSB8)->(Eof())

	oReport:IncMeter()
	If oReport:Cancel()
		Exit
	EndIf

	lSubLote := Rastro(B8_PRODUTO,"S")




	If nOrdem == 1
		cSeekSB8 := B8_FILIAL+B8_PRODUTO+B8_LOCAL
		cCondSB8 := "B8_FILIAL+B8_PRODUTO+B8_LOCAL"
	ElseIf nOrdem == 2
		cSeekSB8 := B8_FILIAL+B8_LOTECTL+If(lSubLote,B8_NUMLOTE,"")+B8_PRODUTO+B8_LOCAL
		cCondSB8 := "B8_FILIAL+B8_LOTECTL+"+If(lSubLote,"B8_NUMLOTE+","")+"B8_PRODUTO+B8_LOCAL"
	ElseIf nOrdem == 3
		cSeekSB8 := B8_FILIAL+B8_LOCAL+B8_PRODUTO
		cCondSB8 := "B8_FILIAL+B8_LOCAL+B8_PRODUTO"
	EndIf

	nSaldo    := 0
	nEmpenho  := 0
	nSaldo2   := 0
	nEmpenho2 := 0

	oSection1:Init()

	While !oReport:Cancel() .And.  !(cAliasSB8)->(Eof()) .And.  cSeekSB8 == &(cCondSB8)

		oReport:IncMeter()
		If oReport:Cancel()
			Exit
		EndIf




		If !(cProdAnt==B8_PRODUTO)
			SB1->(dbSeek(xFilial("SB1") + (cAliasSB8)->B8_PRODUTO, .F. ))
		EndIf

		If SB1->B1_TIPO < mv_par10 .Or.  SB1->B1_TIPO > mv_par11 .Or.  SB1->B1_GRUPO < mv_par12 .Or.  SB1->B1_GRUPO > mv_par13
			dbSkip()
			Loop
		EndIf




		nSaldo   += SB8SALDO(,,,,cAliasSB8,lEmpPrev,,, .T. )
		nEmpenho += SB8SALDO( .T. ,,,,cAliasSB8,lEmpPrev,,, .T. )
		nSaldo2  += SB8SALDO(,,, .T. ,cAliasSB8,lEmpPrev,,, .T. )
		nEmpenho2+= SB8SALDO( .T. ,,, .T. ,cAliasSB8,lEmpPrev,,, .T. )




		cProdAnt := B8_PRODUTO
		cDescAnt := SB1->B1_DESC
		cSLotAnt := If(lSubLote,B8_NUMLOTE,Space(Len(B8_NUMLOTE)))
		cLoteAnt := B8_LOTECTL
		cAlmoAnt := B8_LOCAL
		dDataAnt := B8_DATA
		dValiAnt := B8_DTVALID

		If mv_par15 == 1
			cDescArm := ""
			If lVersao
				NNR->(dbSetOrder(1))
				If NNR->(MsSeek(xFilial("NNR")+cAlmoAnt)) .And.  !Empty(NNR->NNR_DESCRI)
					cDescArm := NNR->NNR_DESCRI
				EndIf
			Else
				If SB2->(MsSeek(xFilial("SB2")+cProdAnt+cAlmoAnt)) .And.  !Empty(SB2->B2_LOCALIZ)
					cDescArm := SB2->B2_LOCALIZ
				EndIf
			EndIf
		EndIf


			nRecno := (cAliasSB8)->SB8Recno




		dbSkip()




		If !(cSeekSB8 == &(cCondSB8)) .Or.  lSubLote .Or.  !(cLoteAnt == B8_LOTECTL)




            If mv_par14 == 2
				If mv_par09 == 2 .And.  QtdComp(nSaldo) == QtdComp(0)
					Loop
				EndIf
			Else
				If mv_par09 == 1 .And.  QtdComp(nSaldo2) == QtdComp(0)
					Loop
				EndIf
			EndIf
			lPrinted := .T. 

			oSection1:Cell("B8_NUMLOTE"):SetValue(cSLotAnt)
			oSection1:Cell("B8_LOTECTL"):SetValue(cLoteAnt)
			oSection1:Cell("B8_PRODUTO"):SetValue(cProdAnt)
			oSection1:Cell("B1_DESC"):SetValue(cDescAnt)
			oSection1:Cell("SUBLOTE"):SetValue(cSLotAnt)
			oSection1:Cell("LOTE"):SetValue(cLoteAnt)
			oSection1:Cell("B8_LOCAL"):SetValue(cAlmoAnt)
			oSection1:Cell("SALDO1"):SetValue(nSaldo)
			oSection1:Cell("EMPENHO1"):SetValue(nEmpenho)
			oSection1:Cell("SALDO2"):SetValue(nSaldo2)
			oSection1:Cell("EMPENHO2"):SetValue(nEmpenho2)
			oSection1:Cell("B8_DATA"):SetValue(dDataAnt)
			oSection1:Cell("B8_DTVALID"):SetValue(dValiAnt)
			If(lVersao,oSection1:Cell("NNR_DESCRI"):SetValue(cDescArm),oSection1:Cell("B2_LOCALIZ"):SetValue(cDescArm))

        	SB8->(dbGoTo(nRecno))
			oSection1:CALIAS:="SB8"
			oSection1:PrintLine()
			oSection1:CALIAS:=cAliasSB8

			nSaldo   := 0
			nEmpenho := 0
			nSaldo2  := 0
			nEmpenho2:= 0





		EndIf

	EndDo




	If lPrinted
		oSection1 :SetTotalText(If(nOrdem == 1, If( cPaisLoc $ "ANG|PTG", "Total do produto ->", "Total do Produto ->" ) , If(lSubLote , If( cPaisLoc $ "ANG|PTG", "Total do lote/sublote ->", "Total do Lote/SubLote ->" ) , If( cPaisLoc $ "ANG|PTG", "Total do lote ->", "Total do Lote ->" ) )))
		oSection1:Finish()
		lPrinted := .F. 
	EndIf

EndDo

Return Nil















































Function MATR425R3()




Local cDesc1     := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "ESte programa emitirá uma relação com a posição de", "Este programa emitirá uma relacao com a posiçäo de " ))
Local cDesc2     := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Stock Por Lote/sub-lote.", "estoque por Lote/Sub-Lote." ))
Local cDesc3     := ""
Local cString    := "SB8"
Local Titulo	  := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Posição De Stock Por Lote/sub-lote", "Posicao de Estoque por Lote/Sub-Lote" ))
Local Tamanho    := "M"
Local wnRel      := "MATR425"




Private aOrd       := {OemToAnsi(" Por Produto"),OemToAnsi(If( cPaisLoc $ "ANG|PTG", " Por Lote/sub-lote", " Por Lote/Sub-Lote" )),OemToAnsi(If( cPaisLoc $ "ANG|PTG", " Por Armazém", " Por Armazem" ))}
Private aReturn    := {OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Código de barras", "Zebrado" )),1,OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Administração", "Administracao" )), 1, 2, 1, "",1 }
Private cPerg      := "MR425A"
Private nLastKey   := 0
Private nTipo      := 0




AjustaSX1()




Pergunte("MR425A", .F. )
























wnRel := SetPrint(cString,wnRel,cPerg,@Titulo,cDesc1,cDesc2,cDesc3, .F. ,aOrd,,Tamanho)
nTipo := If(aReturn[4]==1,GetMv("MV_COMP"),GetMv("MV_NORM"))

If mv_par14==1 .Or.  mv_par15==1
    Tamanho :="G"
EndIf

If nLastKey == 27
	dbClearFilter()
	Return Nil
EndIf
SetDefault(aReturn,cString)
If nLastKey == 27
	dbClearFilter()
	Return Nil
EndIf

RptStatus({|lEnd| C425Imp(@lEnd,wnRel,Tamanho,Titulo)},Titulo)

Return Nil













Static Function C425Imp(lEnd, wnRel, Tamanho, Titulo)




Local cIndex     := ""
Local cCond      := ""
Local cLoteAnt   := ""
Local cProdAnt   := ""
Local cDescAnt   := ""
Local cSLotAnt   := ""
Local cAlmoAnt   := ""
Local cSeekSB8   := ""
Local cCondSB8   := ""
Local cNomArq    := ""
Local cDescArm   := ""
Local cPicSld    := PesqPict("SB8", "B8_SALDO",18)
Local cPicEmp    := PesqPict("SB8", "B8_EMPENHO",18)
Local dDataAnt   := CtoD("  /  /  ")
Local dValiAnt   := CtoD("  /  /  ")
Local nSaldo     := 0
Local nEmpenho   := 0
Local nSaldoT    := 0
Local nEmpenhoT  := 0
Local nSaldo2    := 0
Local nEmpenho2  := 0
Local nSaldoT2   := 0
Local nEmpenhoT2 := 0
Local nCntImpr   := 0
Local nIndSB8    := 0
Local lSubLote   := .F. 
Local lEmpPrev   := If(SuperGetMV("MV_QTDPREV")== "S", .T. , .F. )
Local lVersao    := (VAL(GetVersao( .F. )) == 11 .And.  GetRpoRelease() >= "R6" .Or.  VAL(GetVersao( .F. ))  > 11)




Private aLinha    := {}
Private Cabec1    := ""
Private Cabec2    := ""
Private cBTxt     := Space(10)
Private cBCont    := 0
Private Li        := 80
Private M_PAG     := 01


cCond := 'B8_FILIAL=="'+xFilial("SB8")+'".And.'
cCond += 'B8_PRODUTO>="'+mv_par01+'".And.B8_PRODUTO<="'+mv_par02+'".And.'
cCond += 'B8_LOTECTL>="'+mv_par03+'".And.B8_LOTECTL<="'+mv_par04+'".And.'
cCond += 'B8_NUMLOTE>="'+mv_par05+'".And.B8_NUMLOTE<="'+mv_par06+'".And.'
cCond += 'B8_LOCAL>="'+mv_par07+'".And.B8_LOCAL<="'+mv_par08+'".And.'
cCond += 'DTOS(B8_DTVALID)>= "'+DTOS(mv_par16)+'".And. DTOS(B8_DTVALID)<= "'+DTOS(mv_par17)+'"'

If aReturn[8]==1
	cIndex := "B8_FILIAL+B8_PRODUTO+B8_LOCAL+B8_LOTECTL+B8_NUMLOTE"
	Titulo := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Posição De Stock Por Lote/sublote (por Produto)", "POSICAO DE ESTOQUE POR LOTE/SUBLOTE (POR PRODUTO)" ))
    If mv_par14==1
       Cabec1 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Artigo         Descrição                      Sub-lote Lote       Armz              Saldo             Alocação               Saldo             Alocação    Data      Data", "PRODUTO         DESCRICAO                      SUB-LOTE LOTE       ARMZ              SALDO             EMPENHO               SALDO             EMPENHO    DATA      DATA" ))
       Cabec2 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "                                                                                   1ª.u.m.             1ª.u.m.             2ª.u.m.             2ª.u.m.            validade ", "                                                                                   1a.U.M.             1a.U.M.             2a.U.M.             2a.U.M.            VALIDADE " ))
    Else
	   Cabec1 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Produto         Descrição                      Sub-lote Lote       Armz              Saldo             Alocação    Data      Data", "PRODUTO         DESCRICAO                      SUB-LOTE LOTE       ARMZ              SALDO             EMPENHO    DATA      DATA" ))
       Cabec2 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "                                                                                                                          validade ", "                                                                                                                          VALIDADE " ))
    EndIf
ElseIf aReturn[8] == 2
	cIndex := "B8_FILIAL+B8_LOTECTL+B8_NUMLOTE+B8_PRODUTO+B8_LOCAL"
	Titulo := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Posição De Stock Por Lote/sub-lote (por Lote)", "POSICAO DE ESTOQUE POR LOTE/SUB-LOTE (POR LOTE)" ))
    If mv_par14 == 1
	   Cabec1 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Sub-lote   Lote   Artigo         Descrição                        Armz              Saldo             Alocação               Saldo             Alocação    Data      Data", "SUB-LOTE   LOTE   PRODUTO         DESCRICAO                        ARMZ              SALDO             EMPENHO               SALDO             EMPENHO    DATA      DATA" ))
	   Cabec2 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "                                                                                   1ª.u.m.             1ª.u.m.             2ª.u.m.             2ª.u.m.            validade ", "                                                                                   1a.U.M.             1a.U.M.             2a.U.M.             2a.U.M.            VALIDADE " ))
    Else
	   Cabec1 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Sub-lote   Lote   Produto         Descrição                        Armz              Saldo             Alocação    Data      Data", "SUB-LOTE   LOTE   PRODUTO         DESCRICAO                        ARMZ              SALDO             EMPENHO    DATA      DATA" ))
	   Cabec2 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "                                                                                                                          validade ", "                                                                                                                          VALIDADE " ))
	Endif
ElseIf aReturn[8] == 3
	cIndex := "B8_FILIAL+B8_LOCAL+B8_LOTECTL+B8_NUMLOTE+B8_PRODUTO"
	Titulo := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Posição De Stock Por Lote/sub-lote (por Armazém)", "POSICAO DE ESTOQUE POR LOTE/SUB-LOTE (POR ARMAZEM)" ))
    If mv_par14 == 1
       Cabec1 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Artigo         Descrição                      Sub-lote Lote       Armz              Saldo             Alocação               Saldo             Alocação    Data      Data", "PRODUTO         DESCRICAO                      SUB-LOTE LOTE       ARMZ              SALDO             EMPENHO               SALDO             EMPENHO    DATA      DATA" ))
       Cabec2 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "                                                                                   1ª.u.m.             1ª.u.m.             2ª.u.m.             2ª.u.m.            validade ", "                                                                                   1a.U.M.             1a.U.M.             2a.U.M.             2a.U.M.            VALIDADE " ))
    Else
	   Cabec1 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Produto         Descrição                      Sub-lote Lote       Armz              Saldo             Alocação    Data      Data", "PRODUTO         DESCRICAO                      SUB-LOTE LOTE       ARMZ              SALDO             EMPENHO    DATA      DATA" ))
	   Cabec2 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "                                                                                                                          validade ", "                                                                                                                          VALIDADE " ))
	Endif
EndIf
If mv_par15 == 1
	Cabec1 += OemToAnsi(If( cPaisLoc $ "ANG|PTG", "    Descr. Armaz.", "    DESCR. ARMAZ." ))
EndIf



cNomArq := CriaTrab("", .F. )


dbSelectArea("SB1")
dbSetOrder(1)




dbSelectArea("SB8")
IndRegua("SB8", cNomArq, cIndex,, cCond, If( cPaisLoc $ "ANG|PTG", "A Seleccionar Registos...", "Selecionando Registros..." ))



dbGoTop()
SetRegua(LastRec())




while !Eof()




	If lEnd
		PrintOut(_PROW()+1,001,OemToAnsi(If(cPaisLoc$"ANG|PTG","Cancelado Pelo Operador","CANCELADO PELO OPERADOR")),,)
		Exit
	EndIf
	lSubLote := Rastro(B8_PRODUTO,"S")


	If aReturn[8] == 1
		cSeekSB8 := B8_FILIAL+B8_PRODUTO+B8_LOCAL
		cCondSB8 := "B8_FILIAL+B8_PRODUTO+B8_LOCAL"
	ElseIf aReturn[8] == 2
		cSeekSB8 := B8_FILIAL+B8_LOTECTL+If(lSubLote,B8_NUMLOTE,"")+B8_PRODUTO+B8_LOCAL
		cCondSB8 := "B8_FILIAL+B8_LOTECTL+"+If(lSubLote,"B8_NUMLOTE+","")+"B8_PRODUTO+B8_LOCAL"
	ElseIf aReturn[8] == 3
		cSeekSB8 := B8_FILIAL+B8_LOCAL+B8_PRODUTO
		cCondSB8 := "B8_FILIAL+B8_LOCAL+B8_PRODUTO"
	EndIf

	nSaldo    := 0
	nEmpenho  := 0
	nSaldoT   := 0
	nEmpenhoT := 0
	nSaldo2   := 0
	nEmpenho2 := 0
	nSaldoT2  := 0
	nEmpenhoT2:= 0


	while !Eof() .And. cSeekSB8==&(cCondSB8)


		IncRegua()




		If lEnd
			PrintOut(_PROW()+1,001,OemToAnsi(If(cPaisLoc$"ANG|PTG","Cancelado Pelo Operador","CANCELADO PELO OPERADOR")),,)
			Exit
		EndIf


		If !(cProdAnt==B8_PRODUTO)
			SB1->(dbSeek(xFilial("SB1")+SB8->B8_PRODUTO, .F. ))
		EndIf

		If SB1->B1_TIPO < mv_par10 .Or.  SB1->B1_TIPO > mv_par11
			dbSkip()
			Loop
		EndIf

		If SB1->B1_GRUPO < mv_par12 .Or.  SB1->B1_GRUPO > mv_par13
			dbSkip()
			Loop
		EndIf


		nSaldo   += SB8SALDO(,,,,,lEmpPrev,,, .T. )
		nEmpenho += SB8SALDO( .T. ,,,,,lEmpPrev,,, .T. )
		nSaldo2  += SB8SALDO(,,, .T. ,,lEmpPrev,,, .T. )
		nEmpenho2+= SB8SALDO( .T. ,,, .T. ,,lEmpPrev,,, .T. )


		nSaldoT   += SB8SALDO(,,,,,lEmpPrev,,, .T. )
		nEmpenhoT += SB8SALDO( .T. ,,,,,lEmpPrev,,, .T. )
		nSaldoT2  += SB8SALDO(,,, .T. ,,lEmpPrev,,, .T. )
		nEmpenhoT2+= SB8SALDO( .T. ,,, .T. ,,lEmpPrev,,, .T. )


		cProdAnt := B8_PRODUTO
		cDescAnt := SubS(SB1->B1_DESC,1,30)
		cSLotAnt := If(lSubLote,B8_NUMLOTE,Space(Len(B8_NUMLOTE)))
		cLoteAnt := B8_LOTECTL
		cAlmoAnt := B8_LOCAL
		dDataAnt := B8_DATA
		dValiAnt := B8_DTVALID

		If mv_par15 == 1
			cDescArm := ""
			If lVersao
				NNR->(dbSetOrder(1))
				If NNR->(MsSeek(xFilial("NNR")+cAlmoAnt)) .And.  !Empty(NNR->NNR_DESCRI)
					cDescArm := NNR->NNR_DESCRI
				EndIf
			Else
				If SB2->(MsSeek(xFilial("SB2")+cProdAnt+cAlmoAnt)) .And.  !Empty(SB2->B2_LOCALIZ)
					cDescArm := SB2->B2_LOCALIZ
				EndIf
			EndIf
		EndIf
		dbSkip()


		If !(cSeekSB8==&(cCondSB8)) .Or.  lSubLote .Or.  !(cLoteAnt==B8_LOTECTL)


			If mv_par09==2 .And.  QtdComp(nSaldo)==QtdComp(0)
				Loop
			EndIf
			If Li > 58
				Cabec(Titulo,Cabec1,Cabec2,wnRel,Tamanho,nTipo)
			EndIf
			nCntImpr ++
			If aReturn[8] == 1 .Or.  aReturn[8] == 3
				PrintOut(Li,000,cProdAnt,,)
				PrintOut(Li,016,cDescAnt,,)
				PrintOut(Li,049,cSLotAnt,,)
				PrintOut(Li,056,cLoteAnt,,)
			ElseIf aReturn[8] == 2
				PrintOut(Li,000,cSLotAnt,,)
				PrintOut(Li,007,cLoteAnt,,)
				PrintOut(Li,018,cProdAnt,,)
				PrintOut(Li,034,cDescAnt,,)
			EndIf
			PrintOut(Li,068,cAlmoAnt,,)
			PrintOut(Li,072,nSaldo,cPicSld,)
			PrintOut(Li,092,nEmpenho,cPicEmp,)

			If mv_par14==1
			   PrintOut(Li,112,nSaldo2,cPicSld,)
			   PrintOut(Li,132,nEmpenho2,cPicEmp,)
  			   PrintOut(Li,152,dDataAnt,,)
			   PrintOut(Li,162,dValiAnt,,)
			   If mv_par15==1
			       PrintOut(Li,172,cDescArm,,)
			   EndIf
			Else
			   PrintOut(Li,112,dDataAnt,,)
			   PrintOut(Li,122,dValiAnt,,)
  			   If mv_par15==1
			       PrintOut(Li,132,cDescArm,,)
			   EndIf
			EndIf
			Li ++
			nSaldo   := 0
			nEmpenho := 0
			nSaldo2  := 0
			nEmpenho2:= 0
		EndIf
	EndDo


	If nCntImpr > 0
		If Li > 58
			Cabec(Titulo,Cabec1,Cabec2,wnRel,Tamanho,nTipo)
		EndIf
		PrintOut(Li,000,If(aReturn[8]==1,If(cPaisLoc$"ANG|PTG","Total do produto ->","Total do Produto ->"),If(lSubLote,If(cPaisLoc$"ANG|PTG","Total do lote/sublote ->","Total do Lote/SubLote ->"),If(cPaisLoc$"ANG|PTG","Total do lote ->","Total do Lote ->"))),,)
		PrintOut(Li,072,nSaldoT,cPicSld,)
		PrintOut(Li,092,nEmpenhoT,cPicEmp,)

		If mv_par14==1
           PrintOut(Li,112,nSaldoT2,cPicSld,)
		   PrintOut(Li,132,nEmpenhoT2,cPicEmp,)
		EndIf

		Li++
		PrintOut(Li,000,__PrtThinLine(),,)
		Li++
		nCntImpr  := 0
		nSaldoT   := 0
		nEmpenhoT := 0
		nSaldoT2  := 0
		nEmpenhoT2:= 0
	EndIf
EndDo

If !(Li==80)
	Roda(cBCont,cBTxt,Tamanho)
EndIf


dbSelectArea("SB8")
RetIndex("SB8")
dbClearFilter()
If File(cNomArq+OrdBagExt())
	fErase(cNomArq+OrdBagExt())
EndIf

If aReturn[5] == 1
	Set( 24, "" )
	dbCommitAll()
	OurSpool(wnRel)
EndIf
MS_Flush()

Return Nil














Static Function AjustaSX1()

Local aHelpPor :={}
Local aHelpEng :={}
Local aHelpSpa :={}


PutSx1("MR425A","14","QTDE. na 2a. U.M. ?","CTD. EN 2a. U.M. ?","QTTY. in 2a. U.M. ?", "mv_che", "N", 1, 0, 2,"C", "", "", "", "","MV_PAR14","Sim","Si","Yes", "","Nao","No","No", "", "", "", "", "", "", "", "", "", "", "", "", "")


Aadd( aHelpPor, "Imprime descricao do Armazem. Sim ou Nao" )
Aadd( aHelpEng, "Print warehouse description. Yes or No  " )
Aadd( aHelpSpa, "Imprime descripcion del almacen. Si o No" )

PutSx1( "MR425A","15","Imprime descricao do Armazem ?","Imprime descripc. del almacen?","Print warehouse description ?","mv_chf","N",1,0,2,"C","","","","","mv_par15","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)


aHelpPor := {"Data de Validade inicial a ser ",	"considerada na filtragem do cadastro","de saldos por lote (SB8)." }
aHelpEng := {"Initial Validity date to ",	"consider in the filtering of","Balances by Lot file (SB8)." }
aHelpSpa := {"Fecha de Validez inicial a ser ",	"considerado en filtro del archivo","de Saldos por Lote   (SB8)." }

PutSx1( "MR425A","16","Da Data de Validade ?","De la Fecha de Validez ?","Of Validity date ?","mv_chg","D",8,0,0,"G","","","","","mv_par16","","","","'01/01/01'","","","","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)


aHelpPor := {"Data de Validade final a ser ",	"considerada na filtragem do cadastro","de saldos por lote (SB8)." }
aHelpEng := {"Final Validity date to ",	"consider in the filtering of","Balances by Lot file (SB8)." }
aHelpSpa := {"Fecha de Validez final a ser ",	"considerado en filtro del archivo","de Saldos por Lote   (SB8)." }

PutSx1( "MR425A","17","Ate a Data de Validade ?","A fecha de Validez ?","To Validity date ?","mv_chh","D",8,0,0,"G","","","","","mv_par17","","","","31/12/06","","","","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)

Return