#include "rwmake.ch"

#IFNDEF WINDOWS
	#DEFINE PSAY SAY
#ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿

//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
User Function NFISCALSRV()        //
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis utilizadas no programa atraves da funcao    ³
//³ SetPrvt, que criara somente as variaveis definidas pelo usuario,    ³
//³ identificando as variaveis publicas do sistema utilizadas no codigo ³
//³ Incluido pelo assistente de conversao do AP5 IDE                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


SetPrvt("M,cCalcIRF,cCalcINS,cCalcCSL,cCalcCOF,cCalcPIS,nPercIRF,nPercINS")
SetPrvt("TAMANHO,LIMITE,TITULO,CDESC1,CDESC2,CDESC3,nPercCOF,nPercPIS,nPercCSL,nDup")
SetPrvt("CNATUREZA,ARETURN,NOMEPROG,CPERG,NLASTKEY,LCONTINUA,nPos")
SetPrvt("NLIN,WNREL,CSTRING,NLININI")
SetPrvt("XNUM_NF,XSERIE,XEMISSAO,XTOT_FAT,XLOJA,XFRETE")
SetPrvt("XSEGURO,XBASE_ICMS,XBASE_IPI,XVALOR_ICMS,XICMS_RET,XVALOR_IPI")
SetPrvt("XVALOR_MERC,XNUM_DUPLIC,XCOND_PAG,XPBRUTO,XPLIQUI,XTIPO")
SetPrvt("XESPECIE,XVOLUME,XPED_VEND,XITEM_PED")
SetPrvt("XNUM_NFDV,XPREF_DV,XICMS,XCOD_PRO,XQTD_PRO,XPRE_UNI")
SetPrvt("XPRE_TAB,XIPI,XVAL_IPI,XDESC,XVAL_DESC,XVAL_MERC")
SetPrvt("XTES,XCF,XICMSOL,XICM_PROD,XPESO_PRO,XPESO_UNIT")
SetPrvt("XDESCRICAO,XUNID_PRO,XCOD_TRIB,XMEN_TRIB,XCOD_FIS,XCLAS_FIS")
SetPrvt("XMEN_POS,XISS,XTIPO_PRO,XLUCRO,XCLFISCAL,XPESO_LIQ")
SetPrvt("I,NPELEM,_CLASFIS,NPTESTE,XPESO_LIQUID,XPED")
SetPrvt("XPESO_BRUTO,XP_LIQ_PED,XCLIENTE,XTIPO_CLI,XCOD_MENS,XMENSAGEM","XNOME_FNT")
SetPrvt("XCONDPAG,XCOD_VEND,XDESC_NF,XDESC_PAG,XPED_CLI")
SetPrvt("XDESC_PRO,J,XCOD_CLI,XNOME_CLI,XEND_CLI,XBAIRRO")
SetPrvt("XCEP_CLI,XCOB_CLI,XREC_CLI,XMUN_CLI,XEST_CLI,XCGC_CLI")
SetPrvt("XINSC_CLI,XINMUN_CLI,XTRAN_CLI,XTEL_CLI,XFAX_CLI,XSUFRAMA,XCALCSUF")
SetPrvt("ZFRANCA,XVENDEDOR,XBSICMRET,XNOME_TRANSP,XEND_TRANSP,XMUN_TRANSP")
SetPrvt("XEST_TRANSP,XVIA_TRANSP,XCGC_TRANSP,XTEL_TRANSP,XPARC_DUP,XVENC_DUP")
SetPrvt("XVALOR_DUP,XDUPLICATAS,XNATUREZA,XFORNECE,XNFORI,XPEDIDO")
SetPrvt("XPESOPROD,XFAX,NOPC,CCOR,XB_ICMS_SOL")
SetPrvt("XV_ICMS_SOL,NCONT,NCOL,NTAMOBS,NAJUSTE,BB,xVALORSUB,xNATUR")
SetPrvt("xMSG_RETENSAO","xValor_COFINS")   

/*/
____________________________________________________________________________
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||+-----------------------------------------------------------------------+||
|||Programa  |  Nfiscal | Autor |   Josue Izidio        | Data | 04/06/08 |||
||+----------+------------------------------------------------------------|||
|||Descriçào | Nota Fiscal de Servico                                     |||
||+----------+------------------------------------------------------------|||
|||Uso       | NFISCAL                                                    |||
||+----------+------------------------------------------------------------|||
|||Cliente   | ARAGÃO ENGENHARIA      								      |||
|||-----------------------------------------------------------------------+||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/
//+--------------------------------------------------------------+
//¦ Define Variaveis Ambientais                                  ¦
//+--------------------------------------------------------------+
//+--------------------------------------------------------------+
//¦ Variaveis utilizadas para parametros                         ¦
//¦ mv_par01             // Da Nota Fiscal                       ¦
//¦ mv_par02             // Ate a Nota Fiscal                    ¦
//¦ mv_par03             // Da Serie                             ¦
//¦ mv_par04             // Nota Fiscal de Entrada/Saida         ¦
//¦ mv_par05             // numero do Selo Fiscal                ¦
//+--------------------------------------------------------------+

Z:=0
M:=0
tamanho:="P"
limite:=80
titulo :=PADC("Nota Fiscal - Nfiscal",74)
cDesc1 :=PADC("Este programa ira emitir a Nota Fiscal de Entrada/Saida para a Nordeste",74)
cDesc2 := ""
cDesc3 := "" 
cNatureza:=""
aReturn := { "Zebrado", 1, "Administracao", 2, 2, 1, "", 1}
nomeprog:="NFDST"
cPerg:="NFSIGW"
nLastKey:= 0
lContinua := .T.
nLin:=0

Pergunte(cPerg,.F.)  
//If Pergunte(cPerg)               // Pergunta no SX1
	
	cString:="SF2"
	
	//+--------------------------------------------------------------+
	//¦ Envia controle para a funcao SETPRINT                        ¦
	//+--------------------------------------------------------------+
	wnrel:= SetPrint(cString,nomeprog,cPerg,Titulo,cDesc1,cDesc2,cDesc3,.T.,,,Tamanho,,.F.)
	If nLastKey == 27
		Return
	Endif
	
	//+--------------------------------------------------------------+
	//¦ Verifica Posicao do Formulario na Impressora                 ¦
	//+--------------------------------------------------------------+
	SetDefault(aReturn,cString)
	
	If nLastKey == 27
		Return
	Endif
	
	VerImp()
	
	//+--------------------------------------------------------------+
	//¦                                                              ¦
	//¦ Inicio do Processamento da Nota Fiscal                       ¦
	//¦                                                              ¦
	//+--------------------------------------------------------------+
	RptStatus({|| RptDetail()})// Substituido pelo assistente de conversao do AP5 IDE em 19/11/99 ==> 	RptStatus({|| Execute(RptDetail)})
//EndIf
Return


Static Function RptDetail()

dbSelectArea("SF2")                // * Cabecalho da Nota Fiscal Saida
dbSetOrder(1)
dbSeek(xFilial()+mv_par01+mv_par03,.t.)
	
dbSelectArea("SD2")                // * Itens de Venda da Nota Fiscal
dbSetOrder(3)
dbSeek(xFilial()+mv_par01+mv_par03)



//+-----------------------------------------------------------+
//¦ Inicializa  regua de impressao                            ¦
//+-----------------------------------------------------------+
SetRegua(Val(mv_par02)-Val(mv_par01))
If mv_par04 == 2
	dbSelectArea("SF2")
	While !eof() .and. SF2->F2_DOC    <= mv_par02 .and. lContinua
		
		If SF2->F2_SERIE # mv_par03    // Se a Serie do Arquivo for Diferente
			DbSkip()                    // do Parametro Informado !!!
			Loop
		Endif
		
		#IFNDEF WINDOWS
			IF LastKey()==286
				@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
				lContinua := .F.
				Exit
			Endif
		#ELSE
			IF lAbortPrint
				@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
				lContinua := .F.
				Exit
			Endif
		#ENDIF
		
		nLinIni:=nLin                         // Linha Inicial da Impressao
		
		
		//+--------------------------------------------------------------+
		//¦ Inicio de Levantamento dos Dados da Nota Fiscal              ¦
		//+--------------------------------------------------------------+
		
		// * Cabecalho da Nota Fiscal
		
		xNUM_NF     :=SF2->F2_DOC             // Numero
		xSERIE      :=SF2->F2_SERIE           // Serie
		xEMISSAO    :=SF2->F2_EMISSAO         // Data de Emissao
		xTOT_FAT    :=SF2->F2_VALFAT          // Valor Total da Fatura
		if xTOT_FAT == 0
			xTOT_FAT := SF2->F2_VALMERC+SF2->F2_VALIPI+SF2->F2_SEGURO+SF2->F2_FRETE
		endif
		xLOJA       :=SF2->F2_LOJA            // Loja do Cliente
		xFRETE      :=SF2->F2_FRETE           // Frete
		xSEGURO     :=SF2->F2_SEGURO          // Seguro
		xBASE_ICMS  :=SF2->F2_BASEICM         // Base   do ICMS
		xBASE_ISS   :=SF2->F2_BASIMP2        // Base ISS
		xVALOR_ISS  :=SF2->F2_VALISS          // Valor ISS
		xBASE_IPI   :=SF2->F2_BASEIPI         // Base   do IPI
		xVALOR_ICMS :=SF2->F2_VALICM          // Valor  do ICMS
		xICMS_RET   :=SF2->F2_ICMSRET         // Valor  do ICMS Retido
		xVALOR_IPI  :=SF2->F2_VALIPI          // Valor  do IPI
		xVALOR_MERC :=SF2->F2_VALMERC         // Valor  da Mercadoria
		xNUM_DUPLIC :=SF2->F2_DUPL            // Numero da Duplicata
		xCOND_PAG   :=SF2->F2_COND            // Condicao de Pagamento
		xPBRUTO     :=SF2->F2_PBRUTO          // Peso Bruto
		xPLIQUI     :=SF2->F2_PLIQUI          // Peso Liquido
		xTIPO       :=SF2->F2_TIPO            // Tipo do Cliente
		xESPECIE    :=SF2->F2_ESPECI1         // Especie 1 no Pedido
		xVOLUME     :=SF2->F2_VOLUME1         // Volume 1 no Pedido
		xVALOR_INSS :=Sf2->F2_VALINSS         // Valor do INSS
		xVALOR_COF  :=SF2->F2_VALCOFI         // Valor do COFINs
		xVALOR_PIS  :=SF2->F2_VALPIS         //SF2->F2_VALIMP6   Valor do PIS
		xVALOR_IRRF :=SF2->F2_VALIRRF        // Valor IRRF
		xVALOR_CSLL :=SF2->F2_VALCSLL        // Valor do CSLL
                xValor_COFINS:=SF2->F2_VALCOFI       //SF2->F2_VALIMP5 valor do cofis  

                /* Usado para teste de impressao 
		   xVALOR_INSS :=6.6
		    xVALOR_COF  :=1.8
		xVALOR_PIS  :=0.39
		xVALOR_IRRF :=0.9
		xVALOR_CSLL :=0.6
        */


		dbSelectArea("SD2")                   // * Itens de Venda da N.F.
		dbSetOrder(3)
		dbSeek(xFilial()+xNUM_NF+xSERIE)
		
		
		xPED_VEND:={}                         // Numero do Pedido de Venda
		xITEM_PED:={}                         // Numero do Item do Pedido de Venda
		xNUM_NFDV:={}                         // nUMERO QUANDO HOUVER DEVOLUCAO
		xPREF_DV :={}                         // Serie  quando houver devolucao
		xICMS    :={}                         // Porcentagem do ICMS
		xCOD_PRO :={}                         // Codigo  do Produto
		xQTD_PRO :={}                         // Peso/Quantidade do Produto
		xPRE_UNI :={}                         // Preco Unitario de Venda
		xPRE_TAB :={}                         // Preco Unitario de Tabela
		xIPI     :={}                         // Porcentagem do IPI
		xVAL_IPI :={}                         // Valor do IPI
		xDESC    :={}                         // Desconto por Item
		xVAL_DESC:={}                         // Valor do Desconto
		xVAL_MERC:={}                         // Valor da Mercadoria
		xTES     :={}                         // TES
		xCF      :={}                         // Classificacao quanto natureza da Operacao
		xICMSOL  :={}                         // Base do ICMS Solidario
		xICM_PROD:={}                         // ICMS do Produto
		
		while !eof() .and. SD2->D2_DOC==xNUM_NF .and. SD2->D2_SERIE==xSERIE
			If SD2->D2_SERIE #mv_par03        // Se a Serie do Arquivo for Diferente
				DbSkip()                   // do Parametro Informado !!!
				Loop
			Endif
			AADD(xPED_VEND ,SD2->D2_PEDIDO)
			AADD(xITEM_PED ,SD2->D2_ITEMPV)
			AADD(xNUM_NFDV ,IIF(Empty(SD2->D2_NFORI),"",SD2->D2_NFORI))
			AADD(xPREF_DV  ,SD2->D2_SERIORI)
			AADD(xICMS     ,IIf(Empty(SD2->D2_PICM),0,SD2->D2_PICM))
			AADD(xCOD_PRO  ,SD2->D2_COD)
			AADD(xQTD_PRO  ,SD2->D2_QUANT)     // Guarda as quant. da NF
			AADD(xPRE_UNI  ,SD2->D2_PRCVEN)
			AADD(xPRE_TAB  ,SD2->D2_PRUNIT)
			AADD(xIPI      ,IIF(Empty(SD2->D2_IPI),0,SD2->D2_IPI))
			AADD(xVAL_IPI  ,SD2->D2_VALIPI)
			AADD(xDESC     ,SD2->D2_DESC)
			AADD(xVAL_MERC ,SD2->D2_TOTAL)
			AADD(xTES      ,SD2->D2_TES)
			AADD(xCF       ,SD2->D2_CF)
			AADD(xICM_PROD ,IIf(Empty(SD2->D2_PICM),0,SD2->D2_PICM))
			dbskip()
		End
		
		dbSelectArea("SB1")                     // * Desc. Generica do Produto
		dbSetOrder(1)
		xPESO_PRO:={}                           // Peso Liquido
		xPESO_UNIT :={}                         // Peso Unitario do Produto
		xDESCRICAO :={}                         // Descricao do Produto
		xUNID_PRO:={}                           // Unidade do Produto
		xCOD_TRIB:={}                           // Codigo de Tributacao
		xMEN_TRIB:={}                           // Mensagens de Tributacao
		xCOD_FIS :={}                           // Cogigo Fiscal
		xCLAS_FIS:={}                           // Classificacao Fiscal
		xMEN_POS :={}                           // Mensagem da Posicao IPI
		xISS     :={}                           // Aliquota de ISS
		xTIPO_PRO:={}                           // Tipo do Produto
		xLUCRO   :={}                           // Margem de Lucro p/ ICMS Solidario
		xCLFISCAL   :={}
		xPESO_LIQ := 0
		I:=1
		
		For I:=1 to Len(xCOD_PRO)
			
			dbSeek(xFilial()+xCOD_PRO[I])
			AADD(xPESO_PRO ,SB1->B1_PESO * xQTD_PRO[I])
			xPESO_LIQ  := xPESO_LIQ + xPESO_PRO[I]
			AADD(xPESO_UNIT , SB1->B1_PESO)
			AADD(xUNID_PRO ,SB1->B1_UM)
			AADD(xDESCRICAO ,SB1->B1_DESC)
			AADD(xCOD_TRIB ,SB1->B1_ORIGEM)
			If Ascan(xMEN_TRIB, SB1->B1_ORIGEM)==0
				AADD(xMEN_TRIB ,SB1->B1_ORIGEM)
			Endif
		
			//If SB1->B1_ALIQISS > 0
				AADD(xISS ,SB1->B1_ALIQISS)
			//Endif
			AADD(xTIPO_PRO ,SB1->B1_TIPO)
			AADD(xLUCRO    ,SB1->B1_PICMRET)					
		
		Next I
		
		dbSelectArea("SC5")                            // * Pedidos de Venda
		dbSetOrder(1)
		
		xPED        := {}
		xPESO_BRUTO := 0
		xP_LIQ_PED  := 0
		
		For I:=1 to Len(xPED_VEND)
			
			dbSeek(xFilial()+xPED_VEND[I])
			
			If ASCAN(xPED,xPED_VEND[I])==0
				dbSeek(xFilial()+xPED_VEND[I])
				xCLIENTE    :=SC5->C5_CLIENTE            // Codigo do Cliente
				xTIPO_CLI   :=SC5->C5_TIPOCLI            // Tipo de Cliente
				xCOD_MENS   :=SC5->C5_MENPAD             // Codigo da Mensagem Padrao
				xMENSAGEM   :=SC5->C5_MENNOTA            // Mensagem para a Nota Fiscal
				xCONDPAG    :=SC5->C5_CONDPAG            // Condicao de Pagamento
				xPESO_BRUTO :=SC5->C5_PBRUTO             // Peso Bruto
				xP_LIQ_PED  :=xP_LIQ_PED + SC5->C5_PESOL // Peso Liquido
				xALIQISS	:=  xISS[I]                  //SC5->C5_ISS
				xCOD_VEND:= {SC5->C5_VEND1,;             // Codigo do Vendedor 1
				SC5->C5_VEND2,;             // Codigo do Vendedor 2
				SC5->C5_VEND3,;             // Codigo do Vendedor 3
				SC5->C5_VEND4,;             // Codigo do Vendedor 4
				SC5->C5_VEND5}              // Codigo do Vendedor 5
				xDESC_NF := {SC5->C5_DESC1,;             // Desconto Global 1
				SC5->C5_DESC2,;             // Desconto Global 2
				SC5->C5_DESC3,;             // Desconto Global 3
				SC5->C5_DESC4}              // Desconto Global 4
				AADD(xPED,xPED_VEND[I])
			Endif			
		
		Next I		
	
		//+---------------------------------------------+
		//¦ Pesquisa da Condicao de Pagto               ¦
		//+---------------------------------------------+
		
		dbSelectArea("SE4")                    // Condicao de Pagamento
		dbSetOrder(1)
		dbSeek(xFilial("SE4")+xCONDPAG)
		xDESC_PAG := SE4->E4_DESCRI
		
		dbSelectArea("SC6")                    // * Itens de Pedido de Venda
		dbSetOrder(1)
		xPED_CLI :={}                          // Numero de Pedido
		xDESC_PRO:={}                          // Descricao aux do produto
		J:=Len(xPED_VEND)
		For I:=1 to J
			dbSeek(xFilial()+xPED_VEND[I]+xITEM_PED[I])
			AADD(xPED_CLI ,SC6->C6_PEDCLI)
			AADD(xDESC_PRO,SC6->C6_DESCRI)
			AADD(xVAL_DESC,SC6->C6_VALDESC)
		Next j
		
		If xTIPO $ "NCPISTO" // N=Normal;C=Compl.Preco;I=Compl.ICMS;P=Compl.IPI;D=Devolucao;B=Utiliza Fornecedor
			
			dbSelectArea("SA1")                // * Cadastro de Clientes
			dbSetOrder(1)
			dbSeek(xFilial()+xCLIENTE+xLOJA)
			xCOD_CLI :=SA1->A1_COD             // Codigo do Cliente
			xNOME_CLI:=SA1->A1_NOME            // Nome
			xNOME_FNT:=SA1->A1_NREDUZ       // Nome fantasia
			xEND_CLI :=SA1->A1_END             // Endereco
			xBAIRRO  :=SA1->A1_BAIRRO          // Bairro
			xCEP_CLI :=SA1->A1_CEP             // CEP
			xCOB_CLI :=SA1->A1_ENDCOB          // Endereco de Cobranca
			xREC_CLI :=SA1->A1_ENDENT          // Endereco de Entrega
			xMUN_CLI :=SA1->A1_MUN             // Municipio
			xEST_CLI :=SA1->A1_EST             // Estado
			xCGC_CLI :=SA1->A1_CGC             // CGC
			xINSC_CLI:=SA1->A1_INSCR           // Inscricao estadual
			xINMUN_CLI:=SA1->A1_INSCRM          // Inscricao Municipal
			xTRAN_CLI:=SA1->A1_TRANSP          // Transportadora
			xTEL_CLI :=SA1->A1_TEL             // Telefone
			xFAX_CLI :=SA1->A1_FAX             // Fax
			xSUFRAMA :=SA1->A1_SUFRAMA            // Codigo Suframa
			xCALCSUF :=SA1->A1_CALCSUF            // Calcula Suframa
			// Alteracao p/ Calculo de Suframa
			if !empty(xSUFRAMA) .and. xCALCSUF =="S"
				IF XTIPO == 'D' .OR. XTIPO == 'B'
					zFranca := .F.
				else
					zFranca := .T.
				endif
			Else
				zfranca:= .F.
			endif
			
		Else
			zFranca:=.F.
			dbSelectArea("SA2")                // * Cadastro de Fornecedores
			dbSetOrder(1)
			dbSeek(xFilial()+xCLIENTE+xLOJA)
			xCOD_CLI :=SA2->A2_COD             // Codigo do Fornecedor
			xNOME_CLI:=SA2->A2_NOME            // Nome Fornecedor
			xEND_CLI :=SA2->A2_END             // Endereco
			xBAIRRO  :=SA2->A2_BAIRRO          // Bairro
			xCEP_CLI :=SA2->A2_CEP             // CEP
			xCOB_CLI :=""                      // Endereco de Cobranca
			xREC_CLI :=""                      // Endereco de Entrega
			xMUN_CLI :=SA2->A2_MUN             // Municipio
			xEST_CLI :=SA2->A2_EST             // Estado
			xCGC_CLI :=SA2->A2_CGC             // CGC
			xINSC_CLI:=SA2->A2_INSCR           // Inscricao estadual
			xTRAN_CLI:=SA2->A2_TRANSP          // Transportadora
			xTEL_CLI :=SA2->A2_TEL             // Telefone
			xFAX_CLI :=SA2->A2_FAX             // Fax
		Endif
		dbSelectArea("SA3")                   // * Cadastro de Vendedores
		dbSetOrder(1)
		xVENDEDOR:={}                         // Nome do Vendedor
		I:=1
		J:=Len(xCOD_VEND)
		For I:=1 to J
			dbSeek(xFilial()+xCOD_VEND[I])
			Aadd(xVENDEDOR,SA3->A3_NREDUZ)
		Next j
		
		If xICMS_RET >0                          // Apenas se ICMS Retido > 0
			dbSelectArea("SF3")                   // * Cadastro de Livros Fiscais
			dbSetOrder(4)
			dbSeek(xFilial()+SA1->A1_COD+SA1->A1_LOJA+SF2->F2_DOC+SF2->F2_SERIE)
			If Found()
				xBSICMRET:=F3_VALOBSE
			Else
				xBSICMRET:=0
			Endif
		Else
			xBSICMRET:=0
		Endif
		dbSelectArea("SA4")                   // * Transportadoras
		dbSetOrder(1)
		dbSeek(xFilial()+SF2->F2_TRANSP)
		xNOME_TRANSP :=SA4->A4_NOME           // Nome Transportadora
		xEND_TRANSP  :=SA4->A4_END            // Endereco
		xMUN_TRANSP  :=SA4->A4_MUN            // Municipio
		xEST_TRANSP  :=SA4->A4_EST            // Estado
		xVIA_TRANSP  :=SA4->A4_VIA            // Via de Transporte
		xCGC_TRANSP  :=SA4->A4_CGC            // CGC
		xTEL_TRANSP  :=SA4->A4_TEL            // Fone
		
		dbSelectArea("SE1")                   // * Contas a Receber
		dbSetOrder(1)
		xPARC_DUP  :={}                       // Parcela
		xVENC_DUP  :={}                       // Vencimento
		xVALOR_DUP :={}                       // Valor
		xNATUR     :={}                       // Natureza
		xDUPLICATAS:=IIF(dbSeek(xFilial()+xSERIE+xNUM_DUPLIC,.T.),.T.,.F.) // Flag p/Impressao de Duplicatas
		
		xVALORSUB := 0
		while !eof() .and. SE1->E1_NUM==xNUM_DUPLIC .and. xDUPLICATAS==.T.
			If !("NF" $ SE1->E1_TIPO)
				xVALORSUB += SE1->E1_VALOR
				dbSkip()
				Loop
			Endif
			AADD(xPARC_DUP ,SE1->E1_PARCELA)
			AADD(xVENC_DUP ,SE1->E1_VENCREA)
			AADD(xVALOR_DUP,(SE1->E1_VALOR - xVALORSUB))
			AADD(xNATUR    ,SE1->E1_NATUREZ)
			dbSkip()
		EndDo
		
		dbSelectArea("SED")  
		DbSetOrder(1)
		If Len(xNATUR)<>0
			If dbSeek(xFilial("SED")+xNATUR[1])
				cCalcIRF := SED->ED_CALCIRF
				cCalcISS := SED->ED_CALCISS
				cCalcINS := SED->ED_CALCINS
				cCalcCSL := SED->ED_CALCCSL
				cCalcCOF := SED->ED_CALCCOF
				cCalcPIS := SED->ED_CALCPIS
				nPercIRF := SED->ED_PERCIRF
				nPercINS := SED->ED_PERCINS
				nPercCOF := SED->ED_PERCCOF
				nPercPIS := SED->ED_PERCPIS
				nPercCSL := SED->ED_PERCCSL
			EndIf
		EndIf
		
		dbSelectArea("SF4")                   // * Tipos de Entrada e Saida
		DbSetOrder(1)
		If Len(xTES)<>0
		   dbSeek(xFilial()+xTES[1])
		   xNATUREZA     :=SF4->F4_TEXTO              // Natureza da Operacao
           xMSG_RETENSAO :=Formula(SF4->F4_FORMULA)
		Endif   
		
		Imprime()
		
		//--------------------------------------------------+
		// Atualiza Numero do Selo no arquivo de perguntas  |
		//--------------------------------------------------+
		
		dBSelectArea("SX1")
		If dBSeek("NFSIGW"+"05")	// Chave do arquivo de perguntas
			Reclock("SX1",.F.)   	// Trava o arquivo para Alterao (.F.)
			Replace X1_CNT01 With MV_PAR05 //strzero(Val(MV_PAR05)+1,9)
			MSunlock("SX1")
		Endif
		
		
		dBSelectArea(cString)
		
		
		
		//+--------------------------------------------------------------+
		//¦ Termino da Impressao da Nota Fiscal                          ¦
		//+--------------------------------------------------------------+
		
		IncRegua()                    // Termometro de Impressao
		
		nLin:=0
		dbSelectArea("SF2")
		dbSkip()                      // passa para a proxima Nota Fiscal
		
	EndDo
Endif
//+--------------------------------------------------------------+
//¦                                                              ¦
//¦                      FIM DA IMPRESSAO                        ¦
//¦                                                              ¦
//+--------------------------------------------------------------+

//+--------------------------------------------------------------+
//¦ Fechamento do Programa da Nota Fiscal                        ¦
//+--------------------------------------------------------------+

dbSelectArea("SF2")
Retindex("SF2")
dbSelectArea("SD2")
Retindex("SD2")
Set Device To Screen

If aReturn[5] == 1
	Set Printer TO
	dbcommitAll()
	ourspool(wnrel)
Endif

MS_FLUSH()

//+--------------------------------------------------------------+
//¦ Fim do Programa                                              ¦
//+--------------------------------------------------------------+


/*/
_____________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Funçào    ¦ VERIMP   ¦ Autor ¦   Marcos Simidu       ¦ Data ¦ 20/12/95 ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Descriçào ¦ Verifica posicionamento de papel na Impressora             ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ Nfiscal                                                    ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/

Return

Static Function VerImp()

nLin:= 0                // Contador de Linhas
nLinIni:=0
If aReturn[5]==2
	
	nOpc       := 1
	#IFNDEF WINDOWS
		cCor       := "B/BG"
	#ENDIF
	While .T.
		
		SetPrc(0,0)
		dbCommitAll()
		
		@ nLin ,000 PSAY " "
		@ nLin ,004 PSAY "*"
		@ nLin ,022 PSAY "."
		#IFNDEF WINDOWS
			Set Device to Screen
			DrawAdvWindow(" Formulario ",10,25,14,56)
			SetColor(cCor)
			@ 12,27 Say "Formulario esta posicionado?"
			nOpc:=Menuh({"Sim","Nao","Cancela Impressao"},14,26,"b/w,w+/n,r/w","SNC","",1)
			Set Device to Print
		#ELSE
			IF MsgYesNo("Fomulario esta posicionado ? ")
				nOpc := 1
			ElseIF MsgYesNo("Tenta Novamente ? ")
				nOpc := 2
			Else
				nOpc := 3
			Endif
		#ENDIF
		
		Do Case
			Case nOpc==1
				lContinua:=.T.
				Exit
			Case nOpc==2
				Loop
			Case nOpc==3
				lContinua:=.F.
				Return
		EndCase
	End
Endif

Return


/*/
_____________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Funçào    ¦ IMPDET   ¦ Autor ¦   Marcos Simidu       ¦ Data ¦ 20/12/95 ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Descriçào ¦ Impressao de Linhas de Detalhe da Nota Fiscal              ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ Nfiscal                                                    ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/
Static Function IMPDET()

Local I:=0
Local nLineLength := 60, nTabSize := 3, lWrap := .T.
Local nCurrentLine
Local nLines := MLCOUNT(SC5->C5_DESCSRV, nLineLength, nTabSize, lWrap)
//Local cTexto := MEMOREAD(SC5->C5_DESCSRV)

For I:=1 to len(xCOD_PRO)  	
	@ nLin, 004  PSAY xUNID_PRO[I]            				  	// Unidade de Medida
	@ nLin, 012  PSAY xQTD_PRO[I]  Picture "@E 999,99"       	// Quantidade
	@ nLin, 025  PSAY Substr(xDESC_PRO[I],1,40)				   // Descricao do Produto 
	@ nLin, 090  PSAY xPRE_UNI[I]  Picture "@E 999,999.99" 		// Preco unitario
	@ nLin, 105  PSAY xVAL_MERC[I] Picture "@E 99,999,999.99" 	// Valor Mercadoria
	nLin ++
        If I == 1 .And. !Empty(SC5->C5_DESCSRV)      
           For nCurrentLine := 1 TO nLines
               @ nlin,025 Psay MEMOLINE(SC5->C5_DESCSRV, nLineLength, nCurrentLine, nTabSize, lWrap)
                 nlin++
                If nlin = 053
                   U_Rodape()
                   U_Cabec()
                   nLIn := 033
                Endif 
           Next  
        Endif 
Next


If !Empty(xMENSAGEM)
   nNewPosicao := 1
   While !Empty(Substr(xMENSAGEM,nNewPosicao,40)) 
 	     @ nLin, 025  PSAY Substr(xMENSAGEM,nNewPosicao,40)
         nLin++
         nNewPosicao:=nNewPosicao+40
   Enddo

Endif
Return


/*/
_____________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Funçào    ¦ DUPLIC   ¦ Autor ¦   Marcos Simidu       ¦ Data ¦ 20/12/95 ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Descriçào ¦ Impressao do Parcelamento das Duplicacatas                 ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ Nfiscal                                                    ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/
Static Function DUPLIC()

If xDUPLICATAS==.T. 
   @ 012,013  PSAY xVALOR_DUP[01] Picture("@E 9,999,999.99")
   @ 012,032  PSAY Alltrim(xNUM_DUPLIC) + "/A" 
   @ 012,045  PSAY xVALOR_DUP[01] Picture("@E 9,999,999.99")
   @ 012,065  PSAY Alltrim(xNUM_DUPLIC) + "/A" 
   @ 012,087 PSAY   SubStr(dTOs(xVENC_DUP[01]),7,2)+'/'+SubStr(dTOs(xVENC_DUP[01]),5,2)+'/'+SubStr(dTOs(xVENC_DUP[01]),1,4)
Endif

Return



/*/
_____________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Funçào    ¦ IMPRIME  ¦ Autor ¦   Marcos Simidu       ¦ Data ¦ 20/12/95 ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Descriçào ¦ Imprime a Nota Fiscal de Entrada e de Saida                ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ Generico RDMAKE                                            ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/
Static Function Imprime()
	
//+-------------------------------------+
//¦ Impressao do Cabecalho da N.F.      ¦
//+-------------------------------------+
nLin := 0
SetPrc(0,0)
//------------------------------- alinhamento Horizontal (entre os caracteres)
//@ 001,001 PSAY Chr(27)+Chr(15)    // Compressao de Impressao( Chr(18)=NORMAL / Chr(18)=COMPRIMIDO )(Espaçamento)
//@ 001,010 PSAY Chr(27)+'0'
@ 001,100 PSAY xNUM_NF    // Numero da Nota Fiscal
@ 007,107 PSAY   SubStr(dTOs(xEMISSAO),7,2)+'/'+SubStr(dTOs(xEMISSAO),5,2)+'/'+SubStr(dTOs(xEMISSAO),1,4)

If mv_par04 == 2
	DUPLIC()    //  duplicatas
Endif


nVlr_Desconto := 0 //Totalizar o desconto da nota fiscal
For i:= 1 To Len(xDESC)
	nVlr_Desconto:=nVlr_Desconto+xDESC[i]
Next

@ 015,040 PSAY  nVlr_Desconto Picture "@E@Z 999,999,999.99"  // Valor do Desconto
@ 016,040 PSAY  xDESC_PAG


//+-------------------------------------+
//¦ Impressao dos Dados do Cliente      ¦
//+-------------------------------------+

@ 018, 027 PSAY Alltrim(Upper(xNOME_CLI))+ " - " +Alltrim(Upper(xNOME_FNT))	         // Cliente + Nome Fantasia
@ 019, 027 PSAY xEND_CLI                             // Endereco
@ 020, 027 PSAY xBAIRRO                              // Bairro
@ 020, 070 PSAY xMUN_CLI	                         // Municipio
@ 020, 098 PSAY xEST_CLI   		                     // U.F.
@ 021, 040 PSAY xCOB_CLI   		                     // Praça de pagamento



If !EMPTY(xCGC_CLI)
	If Len(xCGC_CLI)==14              				// Se o C.G.C. do Cli/Forn nao for Vazio
		@ 022, 028 PSAY xCGC_CLI Picture "@R 99.999.999/9999-99"
	ElseIf Len(xCGC_CLI)==11
		@ 022, 028 PSAY xCGC_CLI Picture "@E 999.999.999-99"
	EndIf
Else
	@ 022, 028 PSAY " "                				// Caso seja vazio
Endif

/*Usado para teste de imprssao
xINSC_CLI  := "111111111"
xINMUN_CLI := "222222222"
*/
@ 022, 070 PSAY xINSC_CLI       	                 // Insc. Estadual
@ 022, 110 PSAY xINMUN_CLI       	                 // Insc. Municipal


//+-------------------------------------+
//| Extenso                             |
//+-------------------------------------+
@024,035 PSAY Extenso( xVALOR_DUP[01], .F., 1 )


//+-------------------------------------+
//| Dados dos Produtos Vendidos         |
//+-------------------------------------+

nLin := 033
ImpDet()                 // Detalhe da NF

//+-------------------------------------+
//| Impressão dos Impostos Retidos      |
//+-------------------------------------+
   
aImp := {"IRRF "   +IIF(cCalcIRF=="S",Transf(nPercIRF,"@E 99.99")+"% "," "),;
         "INSS "  +IIF(cCalcINS=="S",Transf(nPercINS,"@E 99.99")+"% "," "),;
         "ISS RETENCAO "   ,;
         "PIS "   +IIF(cCalcPIS=="S",Transf(nPercPIS,"@E 99.99")+"% "," "),;
         "COFINS "+IIF(cCalcCOF=="S",Transf(nPercCOF,"@E 99.99")+"% "," "),;
         "CSLL "  +IIF(cCalcCSL=="S",Transf(nPercCSL,"@E 99.99")+"% "," ")}
	
nLin++
@ nLin, 025 PSAY xMSG_RETENSAO
nLin++

If !EMPTY(xValor_PIS)  //SF2->F2_VALIMP6
	@ nLin, 025 PSAY aImp[4]+"R$ "+AllTrim(Transf(xValor_PIS    ,"@E 99,999.99"))
	nlin++
Endif

If !EMPTY(xValor_COFINS) //SF2->F2_VALIMP5
	@ nLin, 025 PSAY aImp[5]+"R$ "+AllTrim(Transf(xValor_COFINS ,"@E 99,999.99"))
	nlin++
Endif

If  !EMPTY(xValor_CSLL)//SF2->F2_VALCSLL
	@ nLin, 025 PSAY aImp[6]+"R$ "+AllTrim(Transf(xValor_CSLL   ,"@E 99,999.99"))
	nlin++
Endif

If !EMPTY(xVALOR_IRRF)//SF2->F2_VALIRRF
	@ nLin, 025 PSAY aImp[1]+"R$ "+AllTrim(Transf(xVALOR_IRRF   ,"@E 99,999.99"))
	nlin++
Endif

If !EMPTY(xValor_INSS) //SF2->F2_VALINS
	@ nLin, 025 PSAY aImp[2]+"R$ "+AllTrim(Transf(xValor_INSS   ,"@E 99,999.99"))
	nlin++
Endif
	    
   
If (!Empty(SF4->F4_BASEISS) )
	nLin := nLin + 2
	@ nLin++,025 Psay Formula("002")
	@ nLin++,025 Psay Formula("003")
	@ nLin++,025 Psay Formula("004")+" "+AllTrim(Transf(xBASE_ISS  ,"@E@Z 999,999,999.99"))
Endif
    

//+-------------------------------------+
//¦ Impressao dos Impostos              ¦
//+-------------------------------------+

	
@ 055, 035  PSAY xALIQISS	 Picture	"@E 99.99"		// Aliquota ISS
@ 055, 060  PSAY xVALOR_ISS	 Picture "@E 99,999.99"	// Valor ISS
@ 055, 103  PSAY xVALOR_MERC Picture "@E@Z 999,999,999.99"  // Valor Total NF
	
nLin++	


SetPrc(0,0)                              // (Zera o Formulario)

Return .t.



/*/
_____________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Funçào    ¦ CABEC   ¦ Autor ¦   Josue Izidio        ¦ Data ¦ 26/06/2008¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Descriçào ¦ Impressao dos cabeçalhos                                   ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ Nfiscal                                                    ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/
User Function Cabec()
nLin := 0
SetPrc(0,0)
@ 001,100 PSAY xNUM_NF    // Numero da Nota Fiscal
@ 007,107 PSAY   SubStr(dTOs(xEMISSAO),7,2)+'/'+SubStr(dTOs(xEMISSAO),5,2)+'/'+SubStr(dTOs(xEMISSAO),1,4)

If mv_par04 == 2
	DUPLIC()    //  duplicatas
Endif


nVlr_Desconto := 0 //Totalizar o desconto da nota fiscal
For i:= 1 To Len(xDESC)
	nVlr_Desconto:=nVlr_Desconto+xDESC[i]
Next

@ 015,040 PSAY  nVlr_Desconto Picture "@E@Z 999,999,999.99"  // Valor do Desconto
@ 016,040 PSAY  xDESC_PAG


//+-------------------------------------+
//¦ Impressao dos Dados do Cliente      ¦
//+-------------------------------------+

@ 018, 027 PSAY Alltrim(Upper(xNOME_CLI))+ " - " +Alltrim(Upper(xNOME_FNT))	         // Cliente + Nome Fantasia
@ 019, 027 PSAY xEND_CLI                             // Endereco
@ 020, 027 PSAY xBAIRRO                              // Bairro
@ 020, 070 PSAY xMUN_CLI	                         // Municipio
@ 020, 098 PSAY xEST_CLI   		                     // U.F.
@ 021, 040 PSAY xCOB_CLI   		                     // Praça de pagamento



If !EMPTY(xCGC_CLI)
	If Len(xCGC_CLI)==14              				// Se o C.G.C. do Cli/Forn nao for Vazio
		@ 022, 028 PSAY xCGC_CLI Picture "@R 99.999.999/9999-99"
	ElseIf Len(xCGC_CLI)==11
		@ 022, 028 PSAY xCGC_CLI Picture "@E 999.999.999-99"
	EndIf
Else
	@ 022, 028 PSAY " "                				// Caso seja vazio
Endif

@ 022, 070 PSAY xINSC_CLI       	                 // Insc. Estadual
@ 022, 110 PSAY xINMUN_CLI       	                 // Insc. Municipal


//+-------------------------------------+
//| Extenso                             |
//+-------------------------------------+
@024,035 PSAY Extenso( xVALOR_DUP[01], .F., 1 )


//+-------------------------------------+
//| Dados dos Produtos Vendidos         |
//+-------------------------------------+

nLin := 033

Return Nil



/*/
_____________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Funçào    ¦ RODAPE   ¦ Autor ¦   Josue Izidio        ¦ Data ¦ 20/12/95 ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Descriçào ¦ Impressao dos cabeçalho                                    ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ Nfiscal                                                    ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/
User Function RODAPE()

//+-------------------------------------+
//| Impressão dos Impostos Retidos      |
//+-------------------------------------+
/*   
aImp := {"IRRF "   +IIF(cCalcIRF=="S",Transf(nPercIRF,"@E 99.99")+"% "," "),;
         "INSS "  +IIF(cCalcINS=="S",Transf(nPercINS,"@E 99.99")+"% "," "),;
         "ISS RETENCAO "   ,;
         "PIS "   +IIF(cCalcPIS=="S",Transf(nPercPIS,"@E 99.99")+"% "," "),;
         "COFINS "+IIF(cCalcCOF=="S",Transf(nPercCOF,"@E 99.99")+"% "," "),;
         "CSLL "  +IIF(cCalcCSL=="S",Transf(nPercCSL,"@E 99.99")+"% "," ")}
	
nLin++
@ nLin, 025 PSAY xMSG_RETENSAO
nLin++

If !EMPTY(xValor_PIS)  //SF2->F2_VALIMP6
	@ nLin, 025 PSAY aImp[4]+"R$ "+AllTrim(Transf(xValor_PIS    ,"@E 99,999.99"))
	nlin++
Endif

If !EMPTY(xValor_COFINS) //SF2->F2_VALIMP5
	@ nLin, 025 PSAY aImp[5]+"R$ "+AllTrim(Transf(xValor_COFINS ,"@E 99,999.99"))
	nlin++
Endif

If  !EMPTY(xValor_CSLL)//SF2->F2_VALCSLL
	@ nLin, 025 PSAY aImp[6]+"R$ "+AllTrim(Transf(xValor_CSLL   ,"@E 99,999.99"))
	nlin++
Endif

If !EMPTY(xVALOR_IRRF)//SF2->F2_VALIRRF
	@ nLin, 025 PSAY aImp[1]+"R$ "+AllTrim(Transf(xVALOR_IRRF   ,"@E 99,999.99"))
	nlin++
Endif

If !EMPTY(xValor_INSS) //SF2->F2_VALINS
	@ nLin, 025 PSAY aImp[2]+"R$ "+AllTrim(Transf(xValor_INSS   ,"@E 99,999.99"))
	nlin++
Endif
	    
 */  
If (!Empty(SF4->F4_BASEISS) )
	nLin := nLin + 2
	@ nLin++,025 Psay Formula("002")
	@ nLin++,025 Psay Formula("003")
	@ nLin++,025 Psay Formula("004")+" "+AllTrim(Transf(xBASE_ISS  ,"@E@Z 999,999,999.99"))
Endif
    

//+-------------------------------------+
//¦ Impressao dos Impostos              ¦
//+-------------------------------------+

	
@ 055, 035  PSAY "*************" //xALIQISS	 Picture	"@E 99.99"		// Aliquota ISS
@ 055, 060  PSAY "*************" //xVALOR_ISS	 Picture "@E 99,999.99"	// Valor ISS
@ 055, 103  PSAY "*************" //xVALOR_MERC Picture "@E@Z 999,999,999.99"  // Valor Total NF
	
nLin++	


SetPrc(0,0)                              // (Zera o Formulario)

Return .t.



Return Nil




