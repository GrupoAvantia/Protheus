#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\MATR600.CH"
#line 2 "d:\totvs 11\microsiga\protheus\my projects\materiais\matr600.prx"
#line 1 ""
#line 15 "d:\totvs 11\microsiga\protheus\my projects\materiais\matr600.prx"
Function MATR600()

Local oReport

If FindFunction("TRepInUse") .And.  TRepInUse()

	oReport := ReportDef()
	oReport:PrintDialog()
Else
	MATR600R3()
EndIf

Return






















Static Function ReportDef()

Local oReport
Local oVendedor
Local oPedVC
Local oTotGer
Local cNome 	:= ""
Local cMun		:= ""
Local nTotPed1	:= 0
Local nTotGer	:= 0













oReport := TReport():New("MATR600",If( cPaisLoc $ "ANG|PTG", "Pedidos Por Vendedor/cliente", "Pedidos Por Vendedor/Cliente" ),"MTR600", {|oReport| ReportPrint(oReport,oPedVC,oVendedor,oTotGer)},If( cPaisLoc $ "ANG|PTG", "Este relatório irá emitir a relação de pedidos por", "Este relatorio ira emitir a relacao de Pedidos por" ) + " " + If( cPaisLoc $ "ANG|PTG", "Ordem De Vendedor/cliente.", "ordem de Vendedor/Cliente." ))
oReport:SetPortrait()
oReport:SetTotalInLine( .F. )




AjustaSX1()
Pergunte(oReport:uParam, .F. )



































oVendedor := TRSection():New(oReport,"Vendedores",{"TRB","SA3"},,,)
oVendedor:SetTotalInLine( .F. )
TRCell():New(oVendedor,"VENDEDOR"	,"TRB","Vendedor",PesqPict("SA3","A3_COD")	,TamSx3("A3_COD"	)[1],,	)
TRCell():New(oVendedor,"A3_NOME"		,		,RetTitle("A3_NOME")	,PesqPict("SA3","A3_NOME")	,TamSx3("A3_NOME"	)[1],,{|| SA3->A3_NOME }						)

oPedVC := TRSection():New(oVendedor,If( cPaisLoc $ "ANG|PTG", "Clientes/pedidos", "Clientes/Pedidos" ),{"TRB"},,,)
oPedVC:SetTotalInLine( .F. )
TRCell():New(oPedVC,"CLIENTE"	,"TRB","Cliente"	,PesqPict("SA1","A1_COD")	,TamSx3("A1_COD"		)[1],,	)
TRCell():New(oPedVC,"CNOME"		,		,RetTitle("A1_NOME")	,PesqPict("SA1","A1_NOME")	,TamSx3("A1_NOME"		)[1],,{|| cNome }								)
TRCell():New(oPedVC,"CMUN"		,		,RetTitle("A1_MUN")	,PesqPict("SA1","A1_MUN")	,TamSx3("A1_MUN"		)[1],,{|| cMun }									)
TRCell():New(oPedVC,"NUMPED"	,"TRB",RetTitle("C5_NUM")	,PesqPict("SC5","C5_NUM")	,TamSx3("C5_NUM"		)[1],,	)
TRCell():New(oPedVC,"NTOTPED1"	,		,"Total"					,TM(nTotPed1,18,2),TamSx3("C6_VALOR"	)[1],,{|| nTotPed1 },,,"RIGHT")






oTemp := TRSection():New(oReport,If( cPaisLoc $ "ANG|PTG", "Cabeçalho Do Pedido De Vendas", "Cabecalho do Pedido de Vendas" ),{"SC5","SA1"},,,)
oTemp:SetTotalInLine( .F. )

oTemp1 := TRSection():New(oReport,If( cPaisLoc $ "ANG|PTG", "Elem. Do Pedido De Vendas", "Itens do Pedido de Vendas" ),{"SC6"},,,)
oTemp1:SetTotalInLine( .F. )



oTotGer := TRSection():New(oReport,"",,,,)
oTotGer:SetTotalInLine( .F. )

TRCell():New(oTotGer,""	,,If( cPaisLoc $ "ANG|PTG", "T.Crial", "T.Geral" )	,PesqPict("SA1","A1_COD")	,TamSx3("A1_COD"		)[1],,	)
TRCell():New(oTotGer,""	,," ",PesqPict("SA1","A1_NOME")	,TamSx3("A1_NOME"		)[1],,								)
TRCell():New(oTotGer,""	,," ",PesqPict("SA1","A1_MUN")	,TamSx3("A1_MUN"		)[1],,									)
TRCell():New(oTotGer,""	,," ",PesqPict("SC5","C5_NUM")	,TamSx3("C5_NUM"		)[1],,	)
TRCell():New(oTotGer,"NTOTGER"	,," "					,TM(nTotGer,18,2),,,{|| nTotGer },,,"RIGHT")




oReport:Section(1):Section(1):SetHeaderPage()
oReport:Section(1):SetTotalText(If( cPaisLoc $ "ANG|PTG", "Total vendedor ---> ", "Total Vendedor ---> " ))

oReport:Section(2):SetEditCell( .F. )
oReport:Section(3):SetEditCell( .F. )

oReport:Section(1):Section(1):SetEdit( .F. )
oReport:Section(4):SetEdit( .F. )

Return(oReport)























Static Function ReportPrint(oReport,oPedVC,oVendedor,oTotGer)




Local cCli,cVend,nTotPed1,cLoja
Local aCampos 	:= {}
Local aTam		:= {}
Local cExt		:= ""
Local cVendCh	:= ""
Local j, Suf
Local nTotSC6 	:= 0
Local cEstoq 	:= If( (mv_par13 == 1),"S",If( (mv_par13 == 2),"N","SN" ) )
Local cDupli 	:= If( (mv_par14 == 1),"S",If( (mv_par14 == 2),"N","SN" ) )

Local cFilSA3 := ""





Local aPedido	:= {}
Local nCont		:= 0
Local nPos		:= 0
Local nTotGer   := 0

TRPosition():New(oReport:Section(1),"SA3",1,{|| xFilial("SA3")+TRB->VENDEDOR })
TRPosition():New(oReport:Section(1):Section(1),"SA1",1,{|| xFilial("SA1")+TRB->CLIENTE+TRB->LOJA })

If mv_par15 ==  1
	TRFunction():New(oPedVC:Cell("NTOTPED1"),,"SUM",,,TM(nTotPed1,18,2),, .T. , .F. ,)
	oReport:Section(1):Section(1):SetTotalText(If( cPaisLoc $ "ANG|PTG", "Total de cliente ---> ", "Total Cliente ---> " ))
EndIf






oReport:Section(1):Section(1):Cell("CNOME" 	):SetBlock({|| cNome	})
oReport:Section(1):Section(1):Cell("CMUN" 		):SetBlock({|| cMun		})
oReport:Section(1):Section(1):Cell("NTOTPED1" 	):SetBlock({|| nTotPed1	})
oReport:Section(4):Cell("NTOTGER" 	):SetBlock({|| nTotGer	})
cNome 	:= ""
cMun	:= ""
nTotPed1:= 0




aTam:=TamSX3("C5_VEND1")
AADD(aCampos,{ "VENDEDOR","C",aTam[1],aTam[2] } )
aTam:=TamSX3("C6_NUM")
AADD(aCampos,{ "NUMPED"  ,"C",aTam[1],aTam[2] } )
aTam:=TamSX3("C5_CLIENTE")
AADD(aCampos,{ "CLIENTE" ,"C",aTam[1],aTam[2] } )
aTam:=TamSX3("C5_EMISSAO")
AADD(aCampos,{ "EMISSAO" ,"D",aTam[1],aTam[2] } )
aTam:=TamSX3("C5_LOJACLI")
AADD(aCampos,{ "LOJA"    ,"C",aTam[1],aTam[2] } )
AADD(aCampos,{ "MOEDA"   ,"N",1,0 } )
aTam:=TamSX3("F1_VALBRUT")
AADD(aCampos,{ "TOTPED"    ,"N",aTam[1],aTam[2] } )
aTam:=TamSX3("A1_NOME")
AADD(aCampos,{ "CLINOME"   ,"C",aTam[1],aTam[2] } )
aTam:=TamSX3("A1_MUN")
AADD(aCampos,{ "CLIMUN"   ,"C",aTam[1],aTam[2] } )




If mv_par07 == 1
	oReport:Section(1):SetPageBreak( .T. )
EndIf
TRFunction():New(oPedVC:Cell("NTOTPED1"),,"SUM",,,TM(nTotPed1,18,2),, .T. , .F. ,,oVendedor)




cNomArq := CriaTrab(aCampos)
dbUseArea(.T.,,cNomArq ,"TRB" , if(.F. .or. .F., !.F., NIL),.F. )
IndRegua("TRB",cNomArq,"VENDEDOR+CLIENTE+NUMPED",,,If( cPaisLoc $ "ANG|PTG", "A Seleccionar Registos...", "Selecionando Registros..." ))

If len(oReport:Section(1):GetAdvplExp("SA3")) > 0
	cFilSA3 := oReport:Section(1):GetAdvplExp("SA3")
EndIf



	If ( TcSrvType()<>"AS/400" )
		GTrabTopR4(oReport)
	Else


	If len(oReport:Section(2):GetAdvplExp("SA1")) > 0
		cFilSA1 := oReport:Section(2):GetAdvplExp("SA1")
	EndIf
	If len(oReport:Section(2):GetAdvplExp("SC5")) > 0
		cFilSC5 := oReport:Section(2):GetAdvplExp("SC5")
	EndIf
	If len(oReport:Section(3):GetAdvplExp("SC6")) > 0
		cFilSC6 := oReport:Section(3):GetAdvplExp("SC6")
	EndIf

	dbSelectArea("SC5")
	dbSetOrder(2)
	dbSeek(xFilial()+DTOS(mv_par01), .T. )

	oReport:SetMeter(RecCount())
	While !Eof() .And.  C5_EMISSAO >= mv_par01 .And.  C5_EMISSAO <= mv_par02 .and.  C5_FILIAL == xFilial()


		If !Empty(cFilSC5) .And.  !(&cFilSC5)
			dbSelectArea("SC5")
			dbSkip()
			Loop
		EndIf






		dbSelectArea("SC6")
		dbSetOrder(1)
		dbSeek(xFilial()+SC5->C5_NUM)

		While !Eof() .And.  C6_FILIAL == xFilial("SC6") .And.  C6_NUM == SC5->C5_NUM

			If MV_PAR09 == 2 .And.  C6_BLQ == "R "
				dbSkip()
				Loop
			EndIf

			SF4->( dbSetOrder( 1 ) )
			SF4->( MsSeek( xFilial( "SF4" ) + SC6->C6_TES ) )
			If !AvalTes(SC6->C6_TES,cEstoq,cDupli)
				dbSkip()
				Loop
			Endif


			If AT(SC5->C5_TIPO,"DB") <> 0
				dbSelectArea("SC6")
				dbSkip()
				Loop
			EndIf


			If !Empty(cFilSC6) .And.  !(&cFilSC6)
				dbSelectArea("SC6")
				dbSkip()
				Loop
			EndIf

			oReport:IncMeter()




			For j:=1 TO 5
				suf := "C5_VEND"+Str(j,1)
				dbSelectArea("SC5")
				IF Empty(&suf)
					Exit
				EndIF
				cVendCh := &suf
				dbSelectArea("SA3")
				If (dbSeek(xFilial(Alias())+cVendCH))
					dbSelectArea("SC5")
					IF &suf >= mv_par03 .And.  &suf <= mv_par04
						If TRB->(!dbSeek(cVendCh+SC5->C5_CLIENTE+SC5->C5_NUM))
							GravTrabR4(j)
						EndIf
					EndIF
				Endif
			next

			dbSelectArea("SC6")
			dbSkip()

		EndDo
		dbSelectArea("SC5")
		dbSkip()
	EndDO

	EndIf





dbSelectArea("TRB")
dbGoTop()
oReport:Section(1):Init()
oReport:SetMeter(RecCount())
While !Eof()


	dbSelectArea("SA3")
	SA3->(dbSetOrder(1))
	SA3->(dbSeek( xFilial("SA3") + TRB->VENDEDOR ))
	dbSelectArea("SA3")
	If !Empty(cFilSA3) .And.  !(&cFilSA3)
		dbSelectArea("TRB")
		dbSkip()
		Loop
	EndIf












	dbSelectArea("TRB")
	cVend := TRB->VENDEDOR
	oReport:Section(1):PrintLine()

	dbSelectArea("TRB")
	While !Eof() .And.   TRB->VENDEDOR == cVend


			If ( TcSrvType()<>"AS/400" )
			Else

			IF TRB->CLIENTE < mv_par05 .Or.  TRB->CLIENTE > mv_par06 .Or.  TRB->LOJA < mv_par10 .Or.  TRB->LOJA > mv_par11
				dbSkip()
				Loop
			EndIF

			EndIf


		cCli 		:= TRB->CLIENTE
		cLoja		:= TRB->LOJA
		oReport:Section(1):Section(1):Init()
		While !Eof() .And.  TRB->VENDEDOR == cVend .And.  TRB->CLIENTE == cCli .And.  TRB->LOJA == cLoja

			oReport:IncMeter()

				If ( TcSrvType()<>"AS/400" )
					nTotPed1:=xMoeda( TRB->TOTPED, TRB->MOEDA, mv_par08, TRB->EMISSAO )
				Else

				dbSelectArea("SC6")
				dbSeek( xFilial()+TRB->NUMPED )
				nTotPed1 := 0

				While !Eof() .And.  TRB->NUMPED == SC6->C6_NUM
					IF MV_PAR09 == 2 .And.  C6_BLQ == "R "
						dbSkip()
					Else
				 		SF4->( dbSetOrder( 1 ) )
					 	SF4->( MsSeek( xFilial( "SF4" ) + SC6->C6_TES ) )

						If AvalTes(SC6->C6_TES,cEstoq,cDupli)
							If cPaisLoc=="BRA"
							 	nTotSC6 := If( SF4->F4_AGREG == "N" .And.  MV_PAR12 == 1, 0, C6_VALOR )
								nTotPed1 += xMoeda( nTotSC6,TRB->MOEDA,mv_par08,TRB->EMISSAO)
							Else
								nTotPed1 += xMoeda( C6_VALOR ,TRB->MOEDA,mv_par08,TRB->EMISSAO)
							Endif
						Endif
						dbSkip()
					EndIf
				Enddo

				EndIf


         	DbSelectArea("TRB")

				If ( TcSrvType()<>"AS/400" )
					cNome := TRB->CLINOME
					cMun  := TRB->CLIMUN
				Else

				SA1->(dbSetOrder(1))
				SA1->(dbSeek( xFilial("SA1") + TRB->CLIENTE+TRB->LOJA ))
				cNome := SA1->A1_NOME
				cMun  := SA1->A1_MUN

				EndIf


			oReport:Section(1):Section(1):PrintLine()

			If mv_par16 == 2
				nPos := AScan(aPedido,{|x| x[1]+x[2]+x[3] == cCli+cLoja+TRB->NUMPED})
				If nPos == 0
					AADD(aPedido,{cCli,cLoja,TRB->NUMPED})
					nTotGer += nTotPed1
				EndIf
			Else
				nTotGer += nTotPed1
			EndIf



			dbSkip()

		EndDo


		IF (mv_par15 == 1 .And.  TRB->CLIENTE+TRB->LOJA <> cCli+cLoja) .Or.  (mv_par15 == 1 .And.  TRB->VENDEDOR <> cVend)
			oReport:Section(1):Section(1):SetTotalText(If( cPaisLoc $ "ANG|PTG", "Total de cliente ---> ", "Total Cliente ---> " ) + cCli+cLoja)
			oReport:Section(1):Section(1):Finish()
			oReport:Section(1):Section(1):Init()
		EndIF

		dbSelectArea("TRB")
	End




	oReport:Section(1):SetTotalText(If( cPaisLoc $ "ANG|PTG", "Total vendedor ---> ", "Total Vendedor ---> " ) + cVend)
	oReport:section(1):Finish()
	oReport:section(1):Init()

	dbSelectArea("TRB")
EndDo




If mv_par07 == 2
	oReport:section(4):Init()
	oReport:section(4):Printline()
	oReport:section(4):Finish()
EndIf





dbSelectArea("TRB")
cExt := OrdBagExt()
dbCloseArea()
If File(cNomArq+GetDBExtension())
	FERASE(cNomArq+GetDBExtension())
Endif

If File(cNomArq + cExt)
	FERASE(cNomArq+cExt)
Endif

dbSelectArea("SC5")
dbSetOrder(1)

dbSelectArea("SA3")
dbClearFilter()
dbSetOrder(1)


Return


















Static FuncTion GravTrabR4(nEl)

Local suf := "SC5->C5_VEND" + Str(nEl,1)

RecLock("TRB", .t. )
_FIELD->VENDEDOR :=&suf
_FIELD->NUMPED := SC5->C5_NUM
_FIELD->CLIENTE := SC5->C5_CLIENTE
_FIELD->EMISSAO := SC5->C5_EMISSAO
_FIELD->LOJA := SC5->C5_LOJACLI
_FIELD->MOEDA := SC5->C5_MOEDA
MsUnlock()
dbSelectArea("SC5")

Return .T. 

















Static Function GTrabTopR4(oReport)

Local aArea		:= GetArea()
Local nJ      	:= 0
Local cSC5Tmp 	:= GetNextAlias()
Local cSC5Tmp2	:= GetNextAlias()
Local cCampos  	:= ""
Local cQuery2 	:= ""
Local cVendCh 	:= ""
Local cSuf    	:= ""
Local nVend	  	:= Fa440CntVen()
Local cVend   	:= ""
Local cWhere   	:= ""
Local cWhere2  	:= ""
Local cPedTemp 	:= ""
Local aVend   	:= {}




MakeSqlExpr(oReport:uParam)

cSuf:="0"
cWhere := "%("
For nJ:=1 to nVend
	cSuf := Soma1(cSuf)
	cVend := "C5_VEND"+cSuf
	If SC5->(FieldPos(cVend))>0
		Aadd(aVend,cVend)
		cCampos+=cVend+","
		If Len(cWhere) > 2
			cWhere+="or "
		Endif
		cWhere+="("+cVend+"<>'' and "+cVend+">='"+mv_par03+"' and "+cVend+"<='"+mv_par04+"') "
	Endif
Next
cWhere += ")%"

cCampos := "%,"
For nJ := 1 To SC5->(FCount())
	If nJ > 1
		cCampos += ", "
	EndIf
	cCampos += SC5->(FieldName(nJ))
Next
cCampos += "%"

cWhere2 := "% AND"
If cPaisLoc=="BRA"
	If MV_PAR12==1
		cWhere2 += " SF4.F4_AGREG <> 'N' AND "
	Endif
Endif
If mv_par13==1
	cWhere2 += " SF4.F4_ESTOQUE = 'S' AND "
ElseIf mv_par13==2
	cWhere2 += " SF4.F4_ESTOQUE = 'N' AND "
EndIf
If mv_par14==1
	cWhere2 += " SF4.F4_DUPLIC = 'S' AND "
ElseIf mv_par14==2
	cWhere2 += " SF4.F4_DUPLIC = 'N' AND "
EndIf
If MV_PAR09==2
	cWhere2 += " SC6.C6_BLQ <> 'R ' AND "
Endif
cWhere2 += "%"


If TcSrvType() <> "AS/400"

	oReport:Section(2):BeginQuery()

























__execSql(cSC5Tmp," SELECT A1_NOME,A1_MUN  "+___SQLGetValue(CCAMPOS)+" FROM  "+RetSqlName('SC5')+" SC5,  "+RetSqlName('SA1')+" SA1 WHERE SC5.C5_FILIAL =  '" +xFilial('SC5')+"'  AND SC5.D_E_L_E_T_= ' ' AND SC5.C5_CLIENTE >=  "+___SQLGetValue(MV_PAR05)+" AND SC5.C5_CLIENTE <=  "+___SQLGetValue(MV_PAR06)+" AND SC5.C5_LOJACLI >=  "+___SQLGetValue(MV_PAR10)+" AND SC5.C5_LOJACLI <=  "+___SQLGetValue(MV_PAR11)+" AND SC5.C5_EMISSAO >=  "+___SQLGetValue(DTOS(MV_PAR01))+" AND SC5.C5_EMISSAO <=  "+___SQLGetValue(DTOS(MV_PAR02))+" AND SC5.C5_TIPO NOT IN ('D','B') AND  "+___SQLGetValue(CWHERE)+" AND SA1.A1_FILIAL =  '" +xFilial('SA1')+"'  AND SA1.A1_COD = SC5.C5_CLIENTE AND SA1.A1_LOJA = SC5.C5_LOJACLI AND SA1.D_E_L_E_T_= ' ' AND (SELECT SUM(C6_VALOR) FROM  "+RetSqlName('SC6')+" SC6,  "+RetSqlName('SF4')+" SF4 WHERE SC6.C6_FILIAL =  '" +xFilial('SC6')+"'  AND SC6.C6_NUM = SC5.C5_NUM AND SF4.F4_FILIAL =  '" +xFilial('SF4')+"'  AND SF4.F4_CODIGO = SC6.C6_TES  "+___SQLGetValue(CWHERE2)+" SC6.D_E_L_E_T_= ' ' AND SF4.D_E_L_E_T_= ' ') > 0",{},.F.)
	oReport:Section(2):EndQuery()

Else

	oReport:Section(2):BeginQuery()

























__execSql(cSC5Tmp," SELECT A1_NOME,A1_MUN  "+___SQLGetValue(CCAMPOS)+" FROM  "+RetSqlName('SC5')+" SC5,  "+RetSqlName('SA1')+" SA1 WHERE SC5.C5_FILIAL =  '" +xFilial('SC5')+"'  AND SC5.D_E_L_E_T_= ' ' AND SC5.C5_CLIENTE >=  "+___SQLGetValue(MV_PAR05)+" AND SC5.C5_CLIENTE <=  "+___SQLGetValue(MV_PAR06)+" AND SC5.C5_LOJACLI >=  "+___SQLGetValue(MV_PAR10)+" AND SC5.C5_LOJACLI <=  "+___SQLGetValue(MV_PAR11)+" AND SC5.C5_EMISSAO >=  "+___SQLGetValue(DTOS(MV_PAR01))+" AND SC5.C5_EMISSAO <=  "+___SQLGetValue(DTOS(MV_PAR02))+" AND SC5.C5_TIPO NOT IN ('D','B') AND  "+___SQLGetValue(CWHERE)+" AND SA1.A1_FILIAL =  '" +xFilial('SA1')+"'  AND SA1.A1_COD = SC5.C5_CLIENTE AND SA1.A1_LOJA = SC5.C5_LOJACLI AND SA1.D_E_L_E_T_= ' ' AND 0 < (SELECT SUM(C6_VALOR) FROM  "+RetSqlName('SC6')+" SC6,  "+RetSqlName('SF4')+" SF4 WHERE SC6.C6_FILIAL =  '" +xFilial('SC6')+"'  AND SC6.C6_NUM = SC5.C5_NUM AND SF4.F4_FILIAL =  '" +xFilial('SF4')+"'  AND SF4.F4_CODIGO = SC6.C6_TES  "+___SQLGetValue(CWHERE2)+" AND SC6.D_E_L_E_T_= ' ' AND SF4.D_E_L_E_T_= ' ')",{},.F.)
	oReport:Section(2):EndQuery()

EndIf


oReport:SetMeter(SC6->(LastRec()))
DbSelectArea(cSC5Tmp)
While (cSC5Tmp)->(!Eof())

	cPedTemp := (cSC5Tmp)->C5_NUM
	oReport:Section(3):BeginQuery()










__execSql(cSC5Tmp2," SELECT SUM(C6_VALOR) nTotPed FROM  "+RetSqlName('SC6')+" SC6,  "+RetSqlName('SF4')+" SF4 WHERE SC6.C6_FILIAL =  '" +xFilial('SC6')+"'  AND SC6.C6_NUM =  "+___SQLGetValue(CPEDTEMP)+" AND SF4.F4_FILIAL =  '" +xFilial('SF4')+"'  AND SF4.F4_CODIGO = SC6.C6_TES  "+___SQLGetValue(CWHERE2)+" SC6.D_E_L_E_T_= ' ' AND SF4.D_E_L_E_T_= ' '",{},.F.)
	oReport:Section(3):EndQuery()


	If (cSC5Tmp2)->nTotPed > 0
		For nJ:=1 to nVend
			cVend := aVend[nJ]
			cVendCh := (cSC5Tmp)->&cVend

			If !Empty(cVendCH) .And.  cVendCh >= mv_par03 .And.  cVendCh <= mv_par04
				RecLock("TRB", .t. )
				_FIELD->TRB->VENDEDOR := cVendCH
				_FIELD->TRB->NUMPED := (cSC5Tmp)->C5_NUM
				_FIELD->TRB->CLIENTE := (cSC5Tmp)->C5_CLIENTE
				_FIELD->TRB->EMISSAO := (cSC5Tmp)->C5_EMISSAO
				_FIELD->TRB->LOJA := (cSC5Tmp)->C5_LOJACLI
				_FIELD->TRB->MOEDA := (cSC5Tmp)->C5_MOEDA
				_FIELD->TRB->TOTPED := (cSC5Tmp2)->nTotPed
				_FIELD->TRB->CLINOME := (cSC5Tmp)->A1_NOME
				_FIELD->TRB->CLIMUN := (cSC5Tmp)->A1_MUN
				TRB->(MsUnlock())
			Endif
		Next
	EndIf
	DbSelectArea(cSC5Tmp2)
	dbCloseArea()
	DbSelectArea(cSC5Tmp)
	oReport:IncMeter()
	(cSC5Tmp)->(DbSkip())
Enddo

DbSelectArea(cSC5Tmp)
DbCloseArea()

RestArea(aArea)

Return


















Function Matr600R3()



LOCAL CbTxt
LOCAL titulo := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Pedidos Por Vendedor/cliente", "Pedidos Por Vendedor/Cliente" ))
LOCAL cDesc1 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Este relatório irá emitir a relação de pedidos por", "Este relatorio ira emitir a relacao de Pedidos por" ))
LOCAL cDesc2 := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Ordem De Vendedor/cliente.", "ordem de Vendedor/Cliente." ))
LOCAL cDesc3 := ""
LOCAL CbCont,cabec1,cabec2,wnrel
LOCAL tamanho:="P"
LOCAL limite := 80
LOCAL cString:="SC5"
LOCAL lContinua := .T. 
LOCAL nTotCli1,nTotVend1,nTotGer1,nContCli
LOCAL cCli,cVend,nTotPed1,cLoja
LOCAL aCampos := {},cVencCh
LOCAL aTam    := {}

PRIVATE aReturn := { If( cPaisLoc $ "ANG|PTG", "Código de barras", "Zebrado" ), 1,If( cPaisLoc $ "ANG|PTG", "Administração", "Administracao" ), 1, 2, 1, "",1 }
PRIVATE nomeprog:="MATR600"
PRIVATE aLinha  := { },nLastKey := 0
PRIVATE cPerg   :="MTR600"




AjustaSX1()
pergunte("MTR600", .F. )

















wnrel:="MATR600"

wnrel:=SetPrint(cString,wnrel,cPerg,@titulo,cDesc1,cDesc2,cDesc3, .F. ,"",,Tamanho)

If  nLastKey==27
	dbClearFilter()
	Return
Endif

SetDefault(aReturn,cString)

If nLastKey==27
	dbClearFilter()
	Return
Endif

RptStatus({|lEnd| C600Imp(@lEnd,wnRel,cString)},Titulo)

Return














Static Function C600Imp(lEnd,WnRel,cString)
LOCAL CbTxt
LOCAL titulo := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Pedidos Por Vendedor/cliente", "Pedidos Por Vendedor/Cliente" ))
LOCAL CbCont,cabec1,cabec2
LOCAL tamanho:="P"
LOCAL lContinua := .T. 
LOCAL nTotCli1,nTotVend1,nTotGer1,nContCli
LOCAL cCli,cVend,nTotPed1,cLoja
LOCAL aCampos := {}
LOCAL aTam:={}, aTamSXG, aCoord, aTam2
Local cExt
LOCAL cVendCh
LOCAL j, Suf
LOCAL nTotSC6 := 0
LOCAL cEstoq := If( (mv_par13 == 1),"S",If( (mv_par13 == 2),"N","SN" ) )
LOCAL cDupli := If( (mv_par14 == 1),"S",If( (mv_par14 == 2),"N","SN" ) )
LOCAL nTotGerAux := 0
LOCAL aPedido := {}
LOCAL nPos    := 0




cbtxt    := SPACE(10)
cbcont   := 0
li       :=80
m_pag    :=1




aTam:=TamSX3("C5_VEND1")
AADD(aCampos,{ "VENDEDOR","C",aTam[1],aTam[2] } )
aTam:=TamSX3("C6_NUM")
AADD(aCampos,{ "NUMPED"  ,"C",aTam[1],aTam[2] } )
aTam:=TamSX3("C5_CLIENTE")
AADD(aCampos,{ "CLIENTE" ,"C",aTam[1],aTam[2] } )
aTam:=TamSX3("C5_EMISSAO")
AADD(aCampos,{ "EMISSAO" ,"D",aTam[1],aTam[2] } )
aTam:=TamSX3("C5_LOJACLI")
AADD(aCampos,{ "LOJA"    ,"C",aTam[1],aTam[2] } )
AADD(aCampos,{ "MOEDA"   ,"N",1,0 } )
aTam:=TamSX3("F1_VALBRUT")
AADD(aCampos,{ "TOTPED"    ,"N",aTam[1],aTam[2] } )
aTam:=TamSX3("A1_NOME")
AADD(aCampos,{ "CLINOME"   ,"C",aTam[1],aTam[2] } )
aTam:=TamSX3("A1_MUN")
AADD(aCampos,{ "CLIMUN"   ,"C",aTam[1],aTam[2] } )





aTamSXG := TamSXG("001")

titulo := If( cPaisLoc $ "ANG|PTG", "Ped.vendas P/vendedor/cliente", "PED.VENDAS P/VENDEDOR/CLIENTE" ) + " em "+GetMv("MV_MOEDA"+Str(MV_PAR08,1))
If aTamSXG[1] == aTamSXG[3]
	cabec1 := If( cPaisLoc $ "ANG|PTG", "Código  Razao Social             Praca                  Pedido            Total", "CODIGO RAZAO SOCIAL             PRACA                  PEDIDO            TOTAL" )

	aCoord := {07, 32, 55, 62}
	aTam2  := {22, 20}
Else
	cabec1 := If( cPaisLoc $ "ANG|PTG", "Código                Razao Social         Praca           Pedido           Total", "CODIGO               RAZAO SOCIAL         PRACA           PEDIDO           TOTAL" )



	aCoord := {21, 42, 58, 64}
	aTam2  := {20, 15}
EndIf
cabec2 := ""




cNomArq := CriaTrab(aCampos)
dbUseArea(.T.,,cNomArq ,"TRB" , if(.F. .or. .F., !.F., NIL),.F. )
IndRegua("TRB",cNomArq,"VENDEDOR+CLIENTE+NUMPED",,,If( cPaisLoc $ "ANG|PTG", "A Seleccionar Registos...", "Selecionando Registros..." ))


	If ( TcSrvType()<>"AS/400" )
		GerTrabTop()
	Else

	dbSelectArea("SC5")
	dbSetOrder(2)
	dbSeek(xFilial()+DTOS(mv_par01), .T. )

	SetRegua(RecCount())

	While !Eof() .And.  lContinua .And.  C5_EMISSAO >= mv_par01 .And.  C5_EMISSAO <= mv_par02 .and.  C5_FILIAL == xFilial()

		If !Empty(aReturn[7]) .And.  !&(aReturn[7])
			dbSkip()
			Loop
		EndIf







		dbSelectArea("SC6")
		dbSetOrder(1)
		dbSeek(xFilial()+SC5->C5_NUM)

		While !Eof() .And.  lContinua .And.  C6_NUM == SC5->C5_NUM

			If MV_PAR09 == 2 .And.  C6_BLQ == "R "
				dbSkip()
				Loop
			EndIf

			SF4->( dbSetOrder( 1 ) )
			SF4->( MsSeek( xFilial( "SF4" ) + SC6->C6_TES ) )
			If !AvalTes(SC6->C6_TES,cEstoq,cDupli)
				dbSkip()
				Loop
			Endif

			dbSelectArea("SC5")
			dbSetOrder(2)

			If AT(C5_TIPO,"DB") <> 0
				dbSelectArea("SC6")
				dbSkip()
				Loop
			EndIf
			IncRegua()




			FOR j:=1 TO 5
				suf := "C5_VEND"+Str(j,1)
				dbSelectArea("SC5")
				IF Empty(&suf)
					Exit
				EndIF
				cVendCh := &suf
				dbSelectArea("SA3")
				If (dbSeek(xFilial(Alias())+cVendCH))
					dbSelectArea("SC5")
					IF &suf >= mv_par03 .And.  &suf <= mv_par04
						If TRB->(!dbSeek(cVendCh+SC5->C5_CLIENTE+SC5->C5_NUM))
							GravaTrab(j)
						EndIf
					EndIF
				Endif
			next

			dbSelectArea("SC6")
			dbSkip()

		EndDo
		dbSelectArea("SC5")
		dbSkip()
	EndDO

	EndIf


dbSelectArea("TRB")
dbGoTop()
nTotGer1 := 0
nTotGerAux := 0

SetRegua(RecCount())

While !Eof() .And.  lContinua

	IF lEnd
		PrintOut(_PROW()+1,001,If(cPaisLoc$"ANG|PTG","Cancelado Pelo Operador","CANCELADO PELO OPERADOR"),,)
		lContinua := .F. 
		Exit
	Endif

	cVend := VENDEDOR
	dbSelectArea("SA3")
	dbSetOrder(1)
	dbSeek( xFilial() + cVend )

	IF li > 55
		cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_NORM"))
	EndIF
	PrintOut(li,0,If(cPaisLoc$"ANG|PTG","Vendedor : ","VENDEDOR : ")+cVend+"  "+SA3->A3_NOME,,)
	li++
	dbSelectArea("TRB")
	nTotVend1 := 0

	While !Eof() .And.  lContinua .And.  VENDEDOR == cVend

		IF lEnd
			PrintOut(_PROW()+1,001,If(cPaisLoc$"ANG|PTG","Cancelado Pelo Operador","CANCELADO PELO OPERADOR"),,)
			lContinua := .F. 
			Exit
		Endif

			If ( TcSrvType()<>"AS/400" )
			Else

			IF CLIENTE < mv_par05 .Or.  CLIENTE > mv_par06 .Or.  LOJA < mv_par10 .Or.  LOJA > mv_par11
				dbSkip()
				Loop
			EndIF

			EndIf

		nTotCli1 := 0
		cCli := CLIENTE
		cLoja:= LOJA
		nContCli := 0
		While !Eof() .And.  lContinua .And.  VENDEDOR == cVend .And.  CLIENTE == cCli .And.  LOJA == cLoja

			IF lEnd
				PrintOut(_PROW()+1,001,If(cPaisLoc$"ANG|PTG","Cancelado Pelo Operador","CANCELADO PELO OPERADOR"),,)
				lContinua := .F. 
				EXIT
			ENDIF

			IncRegua()

			IF li > 55
				cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_NORM"))
			EndIF


				If ( TcSrvType()<>"AS/400" )
					nTotPed1:=xMoeda( TRB->TOTPED, TRB->MOEDA, mv_par08, TRB->EMISSAO )
				Else

				dbSelectArea("SC6")
				dbSeek( xFilial()+TRB->NUMPED )
				nTotPed1 := 0

				While !Eof() .And.  TRB->NUMPED == SC6->C6_NUM
					IF MV_PAR09 == 2 .And.  C6_BLQ == "R "
						dbSkip()
					Else
				 		SF4->( dbSetOrder( 1 ) )
					 	SF4->( MsSeek( xFilial( "SF4" ) + SC6->C6_TES ) )

						If AvalTes(SC6->C6_TES,cEstoq,cDupli)
							If cPaisLoc=="BRA"
							 	nTotSC6 := If( SF4->F4_AGREG == "N" .And.  MV_PAR12 == 1, 0, C6_VALOR )
								nTotPed1 += xMoeda( nTotSC6,TRB->MOEDA,mv_par08,TRB->EMISSAO)
							Else
								nTotPed1 += xMoeda( C6_VALOR ,TRB->MOEDA,mv_par08,TRB->EMISSAO)
							Endif
						Endif
						dbSkip()
					EndIf
				Enddo

				EndIf


         	DbSelectArea("TRB")
			PrintOut(li,0,TRB->CLIENTE+" ",,)

				If ( TcSrvType()<>"AS/400" )
					PrintOut(li,aCoord[1],SubStr(CLINOME,1,aTam2[1]),,)
					PrintOut(li,aCoord[2],SubStr(CLIMUN,1,aTam2[2]),,)
				Else

				SA1->(dbSetOrder(1))
				SA1->(dbSeek( xFilial("SA1") + TRB->CLIENTE+TRB->LOJA ))
				PrintOut(li,aCoord[1],SubStr(SA1->A1_NOME,1,aTam2[1]),,)
				PrintOut(li,aCoord[2],SubStr(SA1->A1_MUN,1,aTam2[2]),,)

				EndIf

			PrintOut(li,aCoord[3],NUMPED,,)
			PrintOut(li,aCoord[4],nTotPed1,tm(nTotPed1,16),)
			li++
			nTotCli1 += nTotPed1
			nContCli++

			If mv_par16 == 2
				nPos := AScan(aPedido,{|x| x[1]+x[2]+x[3] == cCli+cLoja+TRB->NUMPED})
				If nPos == 0
					AADD(aPedido,{cCli,cLoja,TRB->NUMPED})
					nTotGerAux += nTotPed1
				EndIf
			EndIf

			dbSkip()

		EndDO
		IF li > 55
			cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_NORM"))
		EndIF


		IF mv_par15 == 1 .And.  CLIENTE+LOJA <> cCli+cLoja
			PrintOut(li,0,If(cPaisLoc$"ANG|PTG","Total cliente   ---> ","TOTAL CLIENTE   ---> ")+cCli+cLoja,,)
			PrintOut(li,aCoord[4],nTotCli1,tm(nTotCli1,16),)
		EndIF
		nTotVend1 += nTotCli1
		If mv_par15 == 1
			li++
		EndIf
		dbSelectArea("TRB")
	End

	PrintOut(li,0,If(cPaisLoc$"ANG|PTG","Total vendedor  ---> ","TOTAL VENDEDOR  ---> ")+cVend,,)
	PrintOut(li,aCoord[4],nTotVend1,tm(nTotVend1,16),)
	If mv_par07 == 1
		li:=90
	Else
		li++
		PrintOut(li,00,Repl("-",80),,)
		li++
	Endif

	If mv_par16 == 2
		nTotGer1 += nTotGerAux
		nTotGerAux := 0
	Else
		nTotGer1 += nTotVend1
	EndIf

	dbSelectArea("TRB")
EndDo

IF li <> 80
	If mv_par07 # 1
		PrintOut(li,0,If(cPaisLoc$"ANG|PTG","T O T A L  C R I A L : ","T O T A L  G E R A L : "),,)
		PrintOut(li,aCoord[4],nTotGer1,tm(nTotGer1,16),)
	Endif
	roda(cbcont,cbtxt,"P")
EndIF

dbSelectArea("TRB")
cExt := OrdBagExt()
dbCloseArea()
If File(cNomArq+GetDBExtension())
	FERASE(cNomArq+GetDBExtension())
Endif

If File(cNomArq + cExt)
	FERASE(cNomArq+cExt)
Endif

dbSelectArea("SC5")
dbSetOrder(1)

dbSelectArea("SA3")
dbClearFilter()
dbSetOrder(1)

If aReturn[5] == 1
	Set( 24, "" )
	dbCommitall()
	ourspool(wnrel)
Endif

MS_FLUSH()

Return
















Static FuncTion GravaTrab(nEl)
Local suf := "SC5->C5_VEND" + Str(nEl,1)
RecLock("TRB", .t. )
_FIELD->VENDEDOR :=&suf
_FIELD->NUMPED := SC5->C5_NUM
_FIELD->CLIENTE := SC5->C5_CLIENTE
_FIELD->EMISSAO := SC5->C5_EMISSAO
_FIELD->LOJA := SC5->C5_LOJACLI
_FIELD->MOEDA := SC5->C5_MOEDA
MsUnlock()
dbSelectArea("SC5")
Return .T. 

Static Function GerTrabTop()
Local aArea:=GetArea()
Local aStruSC5:= {}
Local nJ      := 0
Local nLoop   := 0
Local cSC5Tmp := GetNextAlias()
Local cSC5Tmp2:= GetNextAlias()
Local cQuerTmp := ""
Local cQuery  := ""
Local cQuery2 := ""
Local cVendCh := ""
Local cSuf    := ""
Local nVend	  := Fa440CntVen()
Local cVend   := ""
Local cCond   := ""
Local cPedido := ""
Local aVend   := {}

aStruSC5  := SC5->(dbStruct())

cQuery:="SELECT "
cSuf:="0"
For nJ:=1 to nVend
	cSuf := Soma1(cSuf)
	cVend := "C5_VEND"+cSuf
	If SC5->(FieldPos(cVend))>0
		Aadd(aVend,cVend)
		cQuery+=cVend+","
		If !Empty(cCond)
			cCond+="or "
		Endif
		cCond+="("+cVend+"<>'' and "+cVend+">='"+mv_par03+"' and "+cVend+"<='"+mv_par04+"') "
	Endif
Next
For nJ := 1 To SC5->(FCount())
	If nJ > 1
		cQuery += ", "
	EndIf
	cQuery += SC5->(FieldName(nJ))
Next
cQuery+=",A1_NOME,A1_MUN "
cQuery+="FROM "+RetSqlName("SC5")+" SC5, "+RetSqlName("SA1")+" SA1 "
cQuery+="WHERE "
cQuery+="SC5.C5_FILIAL='"+xFilial("SC5")+"' "
cQuery+="AND SC5.D_E_L_E_T_=' ' "
cQuery+="AND SC5.C5_CLIENTE>='"+MV_PAR05+"' AND SC5.C5_CLIENTE<='"+MV_PAR06+"' "
cQuery+="AND SC5.C5_LOJACLI>='"+MV_PAR10+"' AND SC5.C5_LOJACLI<='"+MV_PAR11+"' "
cQuery+="AND SC5.C5_EMISSAO>='"+Dtos(MV_PAR01)+"' AND SC5.C5_EMISSAO<='"+Dtos(MV_PAR02)+"' "
cQuery+="AND SC5.C5_TIPO NOT IN ('D','B') "
cQuery+="AND ("+cCond+") "
cQuery+="AND SA1.A1_FILIAL='"+xFilial("SA1")+"' "
cQuery+="AND SA1.A1_COD=SC5.C5_CLIENTE "
cQuery+="AND SA1.A1_LOJA=SC5.C5_LOJACLI "
cQuery+="AND SA1.D_E_L_E_T_=' ' "
If TcSrvType() <> "AS/400"
	cQuery+="AND ("
Else
	cQuery+="AND 0 < ("
EndIf
cQuery2:="SELECT SUM(C6_VALOR) nTotPed FROM "+RetSqlName("SC6")+" SC6,"+RetSqlName("SF4")+" SF4 "
cQuery2+="WHERE "
cQuery2+="SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
cQuery2+="SC6.C6_NUM=C5_NUM AND "
cQuery2+="SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
cQuery2+="SF4.F4_CODIGO=SC6.C6_TES  AND "
If cPaisLoc=="BRA"
	If MV_PAR12==1
		cQuery2+="SF4.F4_AGREG<>'N' AND "
	Endif
Endif
If mv_par13==1
	cQuery2 += "SF4.F4_ESTOQUE = 'S' AND "
ElseIf mv_par13==2
	cQuery2 += "SF4.F4_ESTOQUE = 'N' AND "
EndIf
If mv_par14==1
	cQuery2 += "SF4.F4_DUPLIC = 'S' AND "
ElseIf mv_par14==2
	cQuery2 += "SF4.F4_DUPLIC = 'N' AND "
EndIf
cQuery2+="SF4.D_E_L_E_T_=' ' AND "
If MV_PAR09==2
	cQuery2+="SC6.C6_BLQ<>'R ' AND "
Endif
cQuery2+="SC6.D_E_L_E_T_=' ' "

cQuerTmp := STRTRAN(cQuery2,"nTotPed","")
cQuerTmp := STRTRAN(cQuerTmp,"C5_NUM","SC5.C5_NUM")
If TcSrvType() <> "AS/400"
	cQuery += cQuerTmp + ") > 0 "
Else
	cQuery += cQuerTmp + ")"
EndIf
cQuery:=ChangeQuery(cQuery)
dbUseArea( .T. ,"TOPCONN",TCGenQry(,,cQuery),cSC5Tmp)

For nLoop := 1 To Len(aStruSC5)
	If aStruSC5[nLoop][2] <> "C" .and.  FieldPos(aStruSC5[nLoop][1]) > 0
		TcSetField(cSC5Tmp,aStruSC5[nLoop][1],aStruSC5[nLoop][2],aStruSC5[nLoop][3],aStruSC5[nLoop][4])
	EndIf
next

SetRegua(SC6->(LastRec()))
DbSelectArea(cSC5Tmp)
While (cSC5Tmp)->(!Eof())



	If !Empty(aReturn[7]) .And.  !&(aReturn[7])
		(cSC5Tmp)->(DbSkip())
		Loop
	EndIf
	dbUseArea( .T. ,"TOPCONN",TCGenQry(,,StrTran(cQuery2,"=C5_NUM","='"+(cSC5Tmp)->C5_NUM+"'")),cSC5Tmp2)
	If (cSC5Tmp2)->nTotPed>0
		For nJ:=1 to nVend
			cVend := aVend[nJ]
			cVendCh := (cSC5Tmp)->&cVend
			If !Empty(cVendCH) .And.  cVendCh >= mv_par03 .And.  cVendCh <= mv_par04
				RecLock("TRB", .t. )
				_FIELD->TRB->VENDEDOR := cVendCH
				_FIELD->TRB->NUMPED := (cSC5Tmp)->C5_NUM
				_FIELD->TRB->CLIENTE := (cSC5Tmp)->C5_CLIENTE
				_FIELD->TRB->EMISSAO := (cSC5Tmp)->C5_EMISSAO
				_FIELD->TRB->LOJA := (cSC5Tmp)->C5_LOJACLI
				_FIELD->TRB->MOEDA := (cSC5Tmp)->C5_MOEDA
				_FIELD->TRB->TOTPED := (cSC5Tmp2)->nTotPed
				_FIELD->TRB->CLINOME := (cSC5Tmp)->A1_NOME
				_FIELD->TRB->CLIMUN := (cSC5Tmp)->A1_MUN
				TRB->(MsUnlock())
			Endif
		Next
	EndIf
	DbSelectArea(cSC5Tmp2)
	dbCloseArea()
	DbSelectArea(cSC5Tmp)
	IncRegua()
	(cSC5Tmp)->(DbSkip())
Enddo

DbSelectArea(cSC5Tmp)
DbCloseArea()
RestArea(aArea)
Return













Static Function AjustaSX1()

Local aHelpPor	:= {}
Local aHelpEng	:= {}
Local aHelpSpa	:= {}
Local cCpo		:= ""
Local cValCpo	:= ""
Local lDel		:= .F. 
Local nG		:= 0
Local nX		:= 0

Aadd( aHelpPor, "Indica se exclui os movimentos cuja TES" )
Aadd( aHelpPor, "possua agrega valor = 'Nao' do calculo " )
Aadd( aHelpPor, "do valor total" )

Aadd( aHelpSpa, "Considerar solamente los itemes con TES" )
Aadd( aHelpSpa, "que adicionen el valor a factura.      " )
Aadd( aHelpSpa, "" )

Aadd( aHelpEng, "" )
Aadd( aHelpEng, "" )
Aadd( aHelpEng, "" )

If cPaisLoc<>"BRA"
	SX1->(dbSetOrder(1))
	If SX1->(DbSeek("MTR60012"))
		If Empty(SX1->X1_PERSPA) .Or.  Empty(SX1->X1_PERENG)
			RecLock("SX1", .F. )
			DbDelete()
			MsUnLock()
			DbCommit()
		Endif
	Endif
	If SX1->(DbSeek("MTR60001"))
		RecLock("SX1", .F. )
		_FIELD->SX1->X1_PERSPA := "¿De Fecha ?"
		_FIELD->SX1->X1_PERENG := "From Date ?"
		SX1->(MsUnLock())
		SX1->(DbCommit())
	Endif
	For nG := 13 to 15
		cCpo := Str(nG,2)
		If SX1->(DbSeek("MTR600"+cCpo))
			nX := 0
			lDel := .F. 
			While nX < 5 .And.  !lDel
				nX++
				cCpo := "X1_DEF"+StrZero(nX,2)
				cValCpo := SX1->(FieldGet(FieldPos(cCpo)))
				If !Empty(cValCpo)
					cCpo := "X1_DEFSPA" + Str(nX,1)
					cValCpo := SX1->(FieldGet(FieldPos(cCpo)))
					If Empty(cValCpo)
						lDel := .T. 
					Else
						cCpo := "X1_DEFENG" + Str(nX,1)
						cValCpo := SX1->(FieldGet(FieldPos(cCpo)))
						If Empty(cValCpo)
							lDel := .T. 
						Endif
					Endif
					If lDel
						RecLock("SX1", .F. )
						SX1->(DbDelete())
						SX1->(MsUnLock())
						SX1->(DbCommit())
					Endif
				Else
					nX := 5
				Endif
			Enddo
		Endif
	Next
Endif

PutSx1("MTR600","12","Considera agrega='Nao'","¿Solo TES que agreguen valor ?","Only TIO that add value?","mv_chc","N",1,0,2,"C","","","","","mv_par12","Sim","Si","Si","","Nao","No","No","","","","","","","","","")
PutSX1Help("P.MTR60012.",aHelpPor,aHelpEng,aHelpSpa)


aHelpPor := {}
aHelpEng := {}
aHelpSpa := {}
Aadd(aHelpPor,"Sera considerado a TES de movimentacao ")
Aadd(aHelpPor,"do estoque no cadastro de itens do     ")
Aadd(aHelpPor,"pedido de venda (SD2).                 ")

Aadd(aHelpSpa,"Sera considerado el TES de movimiento  ")
Aadd(aHelpSpa,"del stock en el archivo de Items del   ")
Aadd(aHelpSpa,"Pedido de Venta (SD2).                 ")

Aadd(aHelpEng,"The inventory transaction TIO in the   ")
Aadd(aHelpEng,"sales order items file (SD2) will be   ")
Aadd(aHelpEng,"considered.                            ")
PutSX1("MTR600","13","TES qto estoque     ?","¿TES del estoque   ?","Inventory relat.TIO?","mv_chd","N",1,0,3,"C","","","","S","mv_par13","Movta.Estoque   ","Afecta Stock  ","Invent.Movement","","Nao Movimenta","No hace Movim.","Do not move   ","Considera Ambas","Considera Ambas","Consider both","","","","","","",aHelpPor,aHelpEng,aHelpSpa)

aHelpPor := {}
aHelpEng := {}
aHelpSpa := {}
Aadd(aHelpPor,"Sera considerado o TES de geracao da   ")
Aadd(aHelpPor,"duplicata no cadastro de itens do      ")
Aadd(aHelpPor,"pedido  de venda (SD2).                ")

Aadd(aHelpSpa,"Sera considerado el TES de generacion  ")
Aadd(aHelpSpa,"del titulo en el archivo de Items del  ")
Aadd(aHelpSpa,"Pedido de Venta (SD2).                 ")

Aadd(aHelpEng,"The trade note generation TIO in the   ")
Aadd(aHelpEng,"sales order items file (SD2) will be   ")
Aadd(aHelpEng,"considered.                            ")
PutSX1("MTR600","14","TES qto faturamento ?","¿TES de faturamento?","Invoicing relat.TIO?","mv_che","N",1,0,3,"C","","","","S","mv_par14","Gera finaneceiro","Genera financ.","Gener. financ. ","","Nao gera     ","No genera     ","Do not generate","Considera Ambas","Considera Ambas","Consider both","","","","","","",aHelpPor,aHelpEng,aHelpSpa)


aHelpPor := {}
aHelpEng := {}
aHelpSpa := {}
Aadd(aHelpPor,"Sera considerado o Total por Clientes  ")

Aadd(aHelpSpa,"Sera considerado el Total por Clientes ")

Aadd(aHelpEng,"The Total will be considered by Customers")
PutSx1("MTR600","15","Total por Clientes ?","Total por Clientes ?","Customer Total     ?","mv_chf","N",1,0,0,"C","","","","","mv_par15","Sim","Si","Yes",""  ,"Nao","No","No","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)



aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}
AADD(aHelpPor,"Por vendedor: Soma os totais dos vende- ")
AADD(aHelpPor,"dores.")
AADD(aHelpPor,"Por pedido: Caso dois vendedores sejam")
AADD(aHelpPor,"informados no mesmo pedido, valor do ")
AADD(aHelpPor,"pedido sera somado apenas 1 vez.")

AADD(aHelpSpa,"Para el vendedor: la suma total de " )
AADD(aHelpSpa,"los vendedores." )
AADD(aHelpSpa,"Por pedido: el caso de que dos proveedo-" )
AADD(aHelpSpa,"res se les informa a el mismo pedido, el" )
AADD(aHelpSpa,"valor del pedido debe ser añadido sólo " )
AADD(aHelpSpa,"1 vez." )

AADD(aHelpEng,"For seller: the sum total of sellers.")
AADD(aHelpEng,"By sales order: If two vendors are in-")
AADD(aHelpEng,"formed in the same sales order, the re-")
AADD(aHelpEng,"quest would be value added only 1 time.")
PutSx1("MTR600", "16", "Total Geral por?", "Total General por", "Grand Total for", "mv_che", "N", 1, 0, 1, "C", "", "", "", "", "mv_par16", "Vendedor","Vendedor","Seller", "", "Pedido","Pedido","Sales Order","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)
PutSX1Help("P.MTR61016.",aHelpPor,aHelpEng,aHelpSpa)

Return