#line 1 "D:\TOTVS 11\MICROSIGA\PROTHEUS\INCLUDE\MATR880.CH"
#line 2 "d:\totvs 11\microsiga\protheus\my projects\materiais\matr880.prx"
#line 1 ""
#line 19 "d:\totvs 11\microsiga\protheus\my projects\materiais\matr880.prx"
Function MATR880(lUsed)
Local   oReport

Default lUsed      := .F. 







If !(FindFunction("SIGACUS_V") .and.  SIGACUS_V() >= 20050512)
	Final("Atualizar SIGACUS.PRW !!!")
EndIf
If !(FindFunction("SIGACUSA_V") .and.  SIGACUSA_V() >= 20050512)
	Final("Atualizar SIGACUSA.PRX !!!")
EndIf
If !(FindFunction("SIGACUSB_V") .and.  SIGACUSB_V() >= 20050512)
	Final("Atualizar SIGACUSB.PRX !!!")
EndIf




AjustaSX1()

If FindFunction("TRepInUse") .And.  TRepInUse()



	oReport:= ReportDef(lUsed)
	oReport:PrintDialog()
Else
	MATR880R3(lUsed)
EndIf

Return NIL

















Static Function ReportDef(lUsed)
Local oReport
Local oSection1
Local cTitle    := OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Mrp", "MRP" ))












oReport:= TReport():New("MATR880",cTitle,"MTR880", {|oReport| ReportPrint(oReport,cTitle,lUsed)},OemToAnsi(If( cPaisLoc $ "ANG|PTG", "Este programa irá imprimir a Relação do MRP", "Este programa ira imprimir a Relaçäo do MRP" )))
oReport:SetPortrait()



















oSection1 := TRSection():New(oReport,If( cPaisLoc $ "ANG|PTG", "Artigos", "Produtos" ),{"SB1"},)
oSection1:SetHeaderPage()

TRCell():New(oSection1,"B1_COD"    	,"SB1",,,,,)
TRCell():New(oSection1,"B1_DESC" 	,"SB1",,,,,)
TRCell():New(oSection1,"B1_UM"   	,"SB1",,,,,)
TRCell():New(oSection1,"B1_LE"   	,"SB1",,,,,  {|| RetFldProd(SB1->B1_COD,"B1_LE") })
TRCell():New(oSection1,"B1_ESTSEG" 	,"SB1",,,,,  {|| RetFldProd(SB1->B1_COD,"B1_ESTSEG") })
TRCell():New(oSection1,"B1_EMIN" 	,"SB1",,,,,  {|| RetFldProd(SB1->B1_COD,"B1_EMIN") })
TRCell():New(oSection1,"B1_TIPO" 	,"SB1",,,,,)

Return(oReport)



















Static Function ReportPrint(oReport,cTitle,lUsed)
Local oSection1   := oReport:Section(1)
Local oSection2
Local oSection3
Local oSection4
Local oSection5
Local oBreak
Local oFunction

Local lContinua   := .T. 
Local aPeriodos   := {}
Local aPerOri     := {}
Local cDrvSHA     := ""
Local nTipo       := 0
Local aListaNec   := {}
Local cNecEstrAtu := ""
Local j           := 0
Local nCusto      := 0
Local nRec		  := 0
Local cCondSH5    := "H5_PRODUTO != '"+Criavar("B1_COD", .F. )+"'"
Local aTam        := TamSX3("B2_QFIM")
Local nTotValor   := 0
Local lLogMrp
Local nParRel
Local cArquivo, cArquivo2
Local cSeekLog
Local i
Local cCampo
Local nQtdPer
Local lVNecesEst
Local lLista
Local lAchou     := .T. 
Local cField
Local cFilUsrSB1 := ""
Local nH5_Quant:=0


Private aPerQuebra  := {}
Private cPerg       := "MTR880"
Private nPeriodos   := 0
Private nTipoCusto  := 1
Private lQuebraPer
Private nNumPer






	cDrvSHA := "DBFCDX"






















PutSx1("MTR880","05","Custo Produto   "             ,"Costo Producto"			,"Product Cost"   		,"mv_ch5","N", 1,0,1,"C","",""   ,"","","mv_par05","Custo Standard","Costo Estandar","Standard Cost","","Custo Medio","Costo Promedio","Average Cost","Preco Compra","Precio Compra","Average Cost","","","","","", "", {"1) Custo Standard " , "2) Custo Medio "   , "3) Preco Compra" }, {"1) Costo Estandar", "2) Costo Promedio", "3) Precio Compra"}, {"1) Standard Cost" , "2) Average Cost"  , "3) Average Cost" })
PutSx1("MTR880","06","Aglutina Periodos"            ,"Agrupa Periodos ?"       	,"Group periods ?" 		,"mv_ch6","N", 1,0,2,"C","",""   ,"","","mv_par06","Sim"           ,"Si"            ,"Yes"          ,"","Nao"        ,"No"            ,"No"           ,""            ,""             ,""            ,"","","","","", "", {"Se informado Sim soma mais de um "        , "periodo na mesma coluna"}, {}, {})
PutSx1("MTR880","07","Periodos para aglutinar"      ,"Periodos para agrupar ?" 	,"Periods to group ?" 	,"mv_ch7","N", 3,0,8,"G","",""   ,"","","mv_par07",""              ,""              ,""             ,"",""           ,""              ,""            ,""            ,""             ,""            ,"","","","","", "", {"Numero de periodos a serem somados e "    , "exibidos em cada coluna"}, {}, {})
PutSx1("MTR880","08","Lista a Necess. da Estrutura?","Lista a Necess. da Estrutura?"              ,"Lista a Necess. da Estrutura?"               ,"mv_ch8","N", 1,0,2,"C","",""   ,"","","mv_par08","Sim"           ,"Si"              ,"Yes"             ,"","Nao"        ,"No"              ,"No"            ,""            ,""             ,""            ,"","","","","", "", {"Permite listar a necessidade da estru-" , "tura do produto caso exista"}, {}, {})

Pergunte(oReport:GetParam(), .F. )

nParRel     := mv_par01
nTipoCusto  := mv_par05
lLogMrp     := mv_par04==1
lQuebraPer  := mv_par06 == 1
nNumPer     := mv_par07
lVNecesEst  := mv_par08 ==1




If lUsed <> .t. 
	lContinua := A710OpenFMRP( .T. )
EndIf

If lContinua
	dbSelectArea("SH5")
	If !Empty(dbFilter())
		dbClearFilter()
	EndIf
	dbSetOrder(1)
	dbGotop()




	oReport:SetTitle(cTitle+" - "+If( cPaisLoc $ "ANG|PTG", "Programação", "Programacao" )+" "+SH5->H5_NUMMRP)

	aPeriodos:=R880PER(@nTipo)

	If lQuebraPer
		aPerOri    := aClone(aPeriodos)
		aPerQuebra := R880DivPeriodo(aPeriodos, .T. )
		aPeriodos  := R880DivPeriodo(aPeriodos)
	EndIf

	dbSelectArea("SH5")
	if ( Empty(cCondSH5) );    dbClearFilter(); else;    dbSetFilter({|| &cCondSH5},cCondSH5 ); end
EndIf




oSection2 := TRSection():New(oSection1,cTitle,{"SHA","SB1","SH5"},)
oSection2:SetHeaderPage()

TRCell():New(oSection2,"HA_TEXTO","SHA","Periodos","",25,,)
For i := 1 to Len(aPeriodos)
	cCampo := "HA_PER"+StrZero(i,3)
	TRCell():New(oSection2,cCampo,"SHA",DtoC(aPeriodos[i]),PesqPict("SB2","B2_QFIM"),,,)
	oSection2:Cell(cCampo):SetLineBreak()
next
TRCell():New(oSection2,"HA_PRODUTO","SHA","Produto","",,,)




oSection3 := TRSection():New(oSection2,cTitle,{"SHA","SB1","SH5"},)
oSection3:SetHeaderPage( .F. )
oSection3:SetHeaderSection( .F. )

TRCell():New(oSection3,"HA_TEXTO","SHA",If( cPaisLoc $ "ANG|PTG", "Períodos", "Periodos" ),"",25,,)
For i := 1 to Len(aPeriodos)
	cCampo := "HA_PER"+StrZero(i,3)
	TRCell():New(oSection3,cCampo,"SHA",DtoC(aPeriodos[i]),PesqPict("SB2","B2_QFIM"),,,)
	oSection2:Cell(cCampo):SetLineBreak()
next

If lVNecesEst



	oSection4 := TRSection():New(oSection2,cTitle,{"SHA","SB1","SH5"},)
	oSection4:SetHeaderPage( .F. )
	oSection4:SetHeaderSection( .F. )

	TRCell():New(oSection4,"H5_DOC","SH5",If( cPaisLoc $ "ANG|PTG", "Períodos", "Periodos" ),"",25,,)
	For i := 1 to Len(aPeriodos)
		cCampo := "H5_PER"+StrZero(i,3)
		TRCell():New(oSection4,cCampo,"SH5",DtoC(aPeriodos[i]),PesqPict("SB2","B2_QFIM"),,,)
		oSection4:Cell(cCampo):SetLineBreak()
	next
EndIf

If lLogMRP



	oSection5 := TRSection():New(oSection3,cTitle,{"SHA","SHG"},)
	oSection5:SetHeaderPage( .F. )
	oSection5:SetHeaderSection( .F. )

	TRCell():New(oSection5,"HG_LOGMRP","SHG",,,,,)
	oSection5:Cell("HG_LOGMRP"):SetLineBreak()
EndIf




oBreak := TRBreak():New(oSection2,oSection2:Cell("HA_PRODUTO"),NIL, .F. )

If lContinua
	dbSelectArea("SHA")



	dbSetFilter({||  HA_PRODUTO>=MV_PAR02 .And. HA_PRODUTO<=MV_PAR03},"HA_PRODUTO>=MV_PAR02 .And. HA_PRODUTO<=MV_PAR03" )
	dbGotop()




	MakeAdvplExpr(oReport:GetParam())




	TRPosition():New(oSection1,"SB1",1,{||xFilial("SB1")+SHA->HA_PRODUTO })




	oSection2:Cell("HA_PRODUTO"):Hide()
	oSection2:Cell("HA_PRODUTO"):HideHeader()




	oReport:SetMeter( SHA->(LastRec()) )
	oSection1:Init()
	oSection2:Init()
	oSection3:Init()

	cFilUsrSB1:= oSection1:GetAdvplExp()

	While !oReport:Cancel() .And.  !SHA->(Eof())
		If !Empty(cFilUsrSB1)
		    SB1->(MsSeek(xFilial("SB1")+SHA->HA_PRODUTO))
		    If !(&("SB1->"+cFilUsrSB1))
		       SHA->(dbSkip())
	    	   Loop
	    	EndIf
		EndIf
		lLista := R880FILTRO(nParRel,nTipo)
		If lLista
			oSection1:PrintLine()
			oReport:SkipLine()
	        cProdAnt := SHA->HA_PRODUTO
	        cSeekLog := SHA->HA_NUMMRP+SHA->HA_PRODUTO
    	   	nPerIni  := 1
	        While SHA->HA_PRODUTO == cProdAnt
    	        If lQuebraPer
					For i := 1 to 6
						For j := 1 to 6
							If j > Len(aPeriodos)
								Exit
							EndIf
							nQtdPer := R880ValField(j)
							cCampo  := "HA_PER"+StrZero(j,3)
							oSection2:Cell(cCampo):SetValue( nQtdPer )
						Next
						oReport:IncMeter()
						oSection2:PrintLine()
						nRec := Recno()
						SHA->(dbSkip())
					Next
				Else
					oReport:IncMeter()
					oSection2:PrintLine()
					nRec := Recno()
					SHA->(dbSkip())
				EndIf
			EndDo




			nTotValor := 0
			SHA->(DbGoto(nRec))
		   	oSection3:Cell("HA_TEXTO"):SetValue("Valor")
			For i:= 1 To Len(aPeriodos)
	  			nCusto	:= R880Custo(SHA->HA_PRODUTO)
	  			dbSelectArea("SHA")
	  			nQtdPer := R880ValField(i)
	  			cCampo  := "HA_PER"+StrZero(i,3)
				oSection3:Cell(cCampo):SetValue( nQtdPer * nCusto )
				nTotValor += oSection3:Cell(cCampo):GetValue()
	       next
			oSection3:PrintLine()
			SHA->(dbSkip())





			If lVNecesEst
				oSection4:Init()
				SH5->(dbSetOrder(3))
				If (lAchou:=SH5->(dbSeek(cProdAnt+"SHA")))
					oReport:SkipLine()
					oReport:PrintText(If( cPaisLoc $ "ANG|PTG", "Necessidade Da Estrutura", "Necessidade da Estrutura" ))
				EndIf
				nH5_Quant:=0
				While SH5->(!Eof() .AND.  H5_PRODUTO+H5_ALIAS==cProdAnt+"SHA")
					oSection4:Cell("H5_DOC"):SetValue( SH5->H5_DOC )
					For i:= 1 To Len(aPeriodos)
						cCampo  := "H5_PER"+StrZero(i,3)
						If SH5->H5_DATAORI <= aPeriodos[i]
							if !lQuebraPer
						 		oSection4:Cell(cCampo):SetValue( SH5->H5_QUANT )
						 	else
						 		nH5_Quant+=SH5->H5_QUANT
							Endif
							If SH5->(!Eof())
								SH5->(dbSkip())
							Endif
						Elseif !lQuebraPer
							oSection4:Cell(cCampo):SetValue( 0 )
						EndIf
					next
					if !lQuebraPer
						oSection4:PrintLine()
					EndIf
				EndDo
				if lQuebraPer .And.  lAchou
					oSection4:Cell(cCampo):SetValue( nH5_Quant )
					oSection4:PrintLine()
				EndIf

				oSection4:Finish()
			EndIf
   			oReport:SkipLine()



		    oReport:PrintText("Tot Vl. Produto:"+"          "+Str(nTotValor,aTam[1],aTam[2]))


			If lLogMrp
				oSection5:Init()
				dbSelectArea("SHG")
				If dbSeek(xFilial("SHG")+cSeekLog)
					oReport:PrintText(If( cPaisLoc $ "ANG|PTG", "Eventos relacionados com o produto", "Eventos relacionados ao produto" ))
					While !EOF() .AND.  xFilial("SHG")+cSeekLog == HG_FILIAL+HG_SEQMRP+HG_COD
						oSection5:PrintLine()
						SHG->(dbSkip())
					EndDo
				EndIf
				oSection5:Finish()
				oReport:SkipLine()
				dbSelectArea("SHA")
			EndIf
			oReport:ThinLine()
		Else
	    	SHA->(dbSkip(6))
	    EndIf
	EndDo
	oSection3:Finish()
	oSection2:Finish()
	oSection1:Finish()

EndIf
If lContinua .And.  lUsed <> .t. 
	dbSelectArea("SHA")
	dbCloseArea()
	dbSelectArea("SH5")
	dbCloseArea()
ElseIf lContinua
	SHA->(dbClearFilter())
	SH5->(dbClearFilter())
EndIF

dbSelectArea("SB1")
dbClearFilter()
dbSetOrder(1)

Return Nil
































Function MATR880R3(lUsed)
Local titulo   := If( cPaisLoc $ "ANG|PTG", "Mrp", "MRP" )
LOCAL cString  := "SB1"
Local wnrel    := "MATR880"
Local cDesc    := If( cPaisLoc $ "ANG|PTG", "Este programa irá imprimir a Relação do MRP", "Este programa ira imprimir a Relaçäo do MRP" )
Local tamanho  := "M"
Local aArea    := GetArea()
Local aAreaSHA := {}
Local aAreaSH5 := {}
Local nParRel,cProdIni,cProdFim,lLogMrp,lVNecesEst
Local lContinua:= .T. 
DEFAULT lUsed       := .F. 
PRIVATE aReturn     := {If( cPaisLoc $ "ANG|PTG", "Código de barras", "Zebrado" ),1,If( cPaisLoc $ "ANG|PTG", "Administração", "Administracao" ), 1, 2, 1, "",1 }
PRIVATE nLastKey    := 0
PRIVATE cPerg       := "MTR880"
Private nTipoCusto  := 1
Private nPeriodos   := 0







If !(FindFunction("SIGACUS_V") .and.  SIGACUS_V() >= 20050512)
	Final("Atualizar SIGACUS.PRW !!!")
EndIf
If !(FindFunction("SIGACUSA_V") .and.  SIGACUSA_V() >= 20050512)
	Final("Atualizar SIGACUSA.PRX !!!")
EndIf
If !(FindFunction("SIGACUSB_V") .and.  SIGACUSB_V() >= 20050512)
	Final("Atualizar SIGACUSB.PRX !!!")
EndIf



















PutSx1("MTR880","05","Custo Produto   "             ,"Costo Producto"			,"Product Cost"   		,"mv_ch5","N", 1,0,1,"C","",""   ,"","","mv_par05","Custo Standard","Costo Estandar","Standard Cost","","Custo Medio","Costo Promedio","Average Cost","Preco Compra","Precio Compra","Average Cost","","","","","", "", {"1) Custo Standard " , "2) Custo Medio "   , "3) Preco Compra" }, {"1) Costo Estandar", "2) Costo Promedio", "3) Precio Compra"}, {"1) Standard Cost" , "2) Average Cost"  , "3) Average Cost" })
PutSx1("MTR880","06","Aglutina Periodos"            ,"Agrupa Periodos ?"       	,"Group periods ?" 		,"mv_ch6","N", 1,0,2,"C","",""   ,"","","mv_par06","Sim"           ,"Si"            ,"Yes"          ,"","Nao"        ,"No"            ,"No"           ,""            ,""             ,""            ,"","","","","", "", {"Se informado Sim soma mais de um "        , "periodo na mesma coluna"}, {}, {})
PutSx1("MTR880","07","Periodos para aglutinar"      ,"Periodos para agrupar ?" 	,"Periods to group ?" 	,"mv_ch7","N", 3,0,8,"G","",""   ,"","","mv_par07",""              ,""              ,""             ,"",""           ,""              ,""            ,""            ,""             ,""            ,"","","","","", "", {"Numero de periodos a serem somados e "    , "exibidos em cada coluna"}, {}, {})
PutSx1("MTR880","08","Lista a Necess. da Estrutura?","Lista a Necess. da Estrutura?"              ,"Lista a Necess. da Estrutura?"               ,"mv_ch8","N", 1,0,2,"C","",""   ,"","","mv_par08","Sim"           ,"Si"              ,"Yes"             ,"","Nao"        ,"No"              ,"No"            ,""            ,""             ,""            ,"","","","","", "", {"Permite listar a necessidade da estru-" , "tura do produto caso exista"}, {}, {})

Pergunte(cPerg, .F. )

wnrel       := SetPrint(cString,wnrel,cPerg,@titulo,cDesc,"","", .F. ,"",,Tamanho)
nParRel     := mv_par01
cProdIni    := mv_par02
cProdFim    := mv_par03
lLogMrp     := mv_par04==1
nTipoCusto  := mv_par05
lQuebraPer  := mv_par06 == 1
nNumPer     := mv_par07
lVNecesEst  := mv_par08 ==1

If nLastKey = 27
	dbClearFilter()
	lContinua := .F. 
EndIf

If lContinua
	SetDefault(aReturn,cString)
EndIf

If lContinua .And.  nLastKey = 27
	dbClearFilter()
	lContinua := .F. 
EndIf

If lContinua
	If lUsed
		aAreaSHA:=SHA->(GetArea()) ;aAreaSH5:=SH5->(GetArea())
	EndIf
	RptStatus({|lEnd| R880Imp(@lEnd,wnRel,titulo,tamanho,lUsed,nParRel,cProdIni,cProdFim,lLogMrp,lVNecesEst)},titulo)
	If lUsed
		RestArea(aAreaSHA)
		RestArea(aAreaSH5)
	EndIf
EndIf

RestArea(aArea)
Return NIL














Static Function R880Imp(lEnd,wnRel,titulo,tamanho,lUsed,nParRel,cProdIni,cProdFim,lLogMrp,lVNecesEst)



LOCAL CbTxt,j
LOCAL CbCont,cabec1,cabec2,i
LOCAL limite    := 132
LOCAL nomeprog  := "MATR880"
LOCAL cArquivo,cArquivo2,nTotLin,cSeekLog:="",cNecEstrAtu := ""
LOCAL aOrdem    := Array(6), lLista, lImprimiu
LOCAL cCondSH5  := "H5_PRODUTO != '"+Criavar("B1_COD", .F. )+"'"
LOCAL aPeriodos := {}
Local aPerOri   := {}
LOCAL nTotProd  := 0
LOCAL nTotal    := 0
LOCAL cDrvSHA   := ""
LOCAL nTipo     := 0
Local aNeces    := {}
Local nNecEstr  := 0
Local nCusto    := 0
Local nQtdPer   := 0
Local aListaNec := {}
Local nC        := 0
Local lContinua	:= .T. 

Private aPerQuebra := {}





	cDrvSHA := "DBFCDX"





aOrdem[1] := If( cPaisLoc $ "ANG|PTG", "Saldo Em Stock", "Saldo em Estoque" )
aOrdem[2] := "Entradas   "
aOrdem[3] := "Saidas     "
aOrdem[4] := If( cPaisLoc $ "ANG|PTG", "Saídas Estrutura", "Saidas Estrutura" )
aOrdem[5] := "Saldo      "
aOrdem[6] := "Necessidade"




cbtxt    := SPACE(10)
cbcont   := 0
li       := 80
m_pag    := 1



If lUsed <> .t. 
	lContinua := A710OpenFMRP( .T. )
EndIf

If lContinua
	dbSelectArea("SH5")
	If !Empty(dbFilter())
		dbClearFilter()
	EndIf
	dbSetOrder(1)
	dbGotop()

	dbSelectArea("SHG")
	dbSetOrder(1)

	aPeriodos:=R880PER(@nTipo)

	If lQuebraPer
		aPerOri    := aClone(aPeriodos)
		aPerQuebra := R880DivPeriodo(aPeriodos, .T. )
		aPeriodos  := R880DivPeriodo(aPeriodos)
	EndIf

	dbSelectArea("SH5")
	if ( Empty(cCondSH5) );    dbClearFilter(); else;    dbSetFilter({|| &cCondSH5},cCondSH5 ); end
EndIf

If lContinua
	dbSelectArea("SHA")
	dbGotop()
	SetRegua(LastRec())
	Titulo  := Titulo+" - "+If( cPaisLoc $ "ANG|PTG", "Programação", "Programacao" )+" "+SHA->HA_NUMMRP
	NTotLin := Len(aPeriodos) / 5
	nTotLin := If(Len(aPeriodos) % 6 > 0,++nTotLin,nTotLin)
	While !Eof()
		If lEnd
			PrintOut(_PROW()+1,001,If(cPaisLoc$"ANG|PTG","Cancelado Pelo Operador","CANCELADO PELO OPERADOR"),,)
			Exit
		EndIf
		IncRegua()
		nRec := Recno()
		cSeekLog  := SHA->HA_NUMMRP+SHA->HA_PRODUTO
		lImprimiu := .F. 
		If SHA->HA_PRODUTO >= cProdIni .And.  SHA->HA_PRODUTO <= cProdFim .And.  SB1->(dbSeek(xFilial("SB1")+SHA->HA_PRODUTO))
			If li > 50
				cabec(titulo,"","",nomeprog,tamanho,18)
				PrintOut(li,00,__PrtFatLine(),,)
				li++
			EndIf
			lLista		:= R880FILTRO(nParRel,nTipo)
			lImprimiu	:= .f. 
			If lLista
				nTotProd	:= 0
				lImprimiu	:= .t. 
				nCusto		:= R880Custo(SB1->B1_COD)

				PrintOut(li,00,If(cPaisLoc$"ANG|PTG","Artigo: ","PRODUTO: ")+SB1->B1_COD+SPACE(3)+Substr(SB1->B1_DESC,1,30)+SPACE(3)+If(cPaisLoc$"ANG|PTG","Um:","UM:")+SB1->B1_UM+SPACE(3)+If(cPaisLoc$"ANG|PTG","Lote econ: ","LOTE ECON: ")+Str(RetFldProd(SB1->B1_COD,"B1_LE"),Posicione("SX3",2,"B1_LE","X3_TAMANHO"),Posicione("SX3",2,"B1_LE","X3_DECIMAL"))+SPACE(3)+Upper(AllTrim(RetTitle("B1_ESTSEG")))+": "+Str(RetFldProd(SB1->B1_COD,"B1_ESTSEG"),Posicione("SX3",2,"B1_ESTSEG","X3_TAMANHO"),Posicione("SX3",2,"B1_ESTSEG","X3_DECIMAL"))+SPACE(3)+Upper(AllTrim(RetTitle("B1_EMIN")))+": "+Str(RetFldProd(SB1->B1_COD,"B1_EMIN"),Posicione("SX3",2,"B1_EMIN","X3_TAMANHO"),Posicione("SX3",2,"B1_EMIN","X3_DECIMAL"))+Space(3)+If(cPaisLoc$"ANG|PTG","Tipo: ","TIPO: ")+SB1->B1_TIPO,,)
				li++
				dbSelectArea("SHA")
				nPerIni := 1
				While .t. 
					dbGoto(nRec)
					nCol := 23
					li++

					PrintOut(li,00,If(cPaisLoc$"ANG|PTG","Períodos","Periodos"),,)
					If lQuebraPer .And.  nNumPer > 1
						PrintOut(li,10,"(inicial)",,)
					EndIf
					For i:= nPerIni to nPerIni+5
						If i > Len(aPeriodos)
							Exit
						EndIf
						PrintOut(li,nCol,DtoC(aPeriodos[i]),,)
						nCol += 15
					next

					If lQuebraPer .And.  nNumPer > 1
						nCol := 23
						li++
						PrintOut(li,10,"(final)",,)
						For i:= nPerIni to nPerIni+5
							If i > Len(aPeriodos)
								Exit
							EndIf


							nC := (i-1)*nNumPer+Len(aPerQuebra[i,2])
							PrintOut(li,nCol,DtoC(aPerOri[nC]),,)
							nCol += 15
						next
					EndIf

					li += 2
					aNeces := {}
					For i := 1 to 6
						nCol := 16
						PrintOut(li,00,aOrdem[i],,)
						For j := nPerIni to nPerIni+5
							If j > Len(aPeriodos)
								Exit
							EndIf

							PrintOut(li,nCol,nQtdPer:=R880ValField(j),"999999999999.99",)
							nCol+=15
							If i == 6
								aAdd(aNeces, nQtdPer)
								nTotProd+=nQtdPer
							EndIf
						Next
						SHA->(dbSkip())
						li++
					Next

					nCol := 16
					PrintOut(li,00,"Valor",,)
					For j := 1 to Len(aNeces)
						PrintOut(li,nCol,aNeces[j]*nCusto,"999999999999.99",)
						nCol+=15
					Next





					If lVNecesEst

						DbSelectArea("SHA")
						DbGoto(nRec)
						aListaNec := R880LstNec(SHA->HA_PRODUTO+"SHA",aPeriodos,nPerIni)
						If !Empty(aListaNec)
							li+=2
							PrintOut(li,00,If(cPaisLoc$"ANG|PTG","Necessidade Da Estrutura","Necessidade da Estrutura"),,)
							cNecEstrAtu := ""
							For i:=1 To Len(aListaNec)
								If cNecEstrAtu<>aListaNec[i,1] .Or.  !lQuebraPer
									cNecEstrAtu := aListaNec[i,1]
									li++
								EndIf
								PrintOut(li,000,aListaNec[i,1],,)
								nCol := 16
								For j := nPerIni to nPerIni+5
									If j > Len(aPeriodos)
										Exit
									EndIf
									nNecEstr := 0
									If aPeriodos[j]==aListaNec[i,3]
										nNecEstr := aListaNec[i,2]
									EndIf
									PrintOut(li,nCol,nNecEstr,"999999999999.99",)
									nCol+=15
								Next

								If li > 60
									cabec(titulo,"","",nomeprog,tamanho,18)
									PrintOut(li,00,__PrtFatLine(),,)
									li++
								EndIf
							Next
							li++
						EndIf
					EndIf
					nPerIni+=6
					If nPerIni > Len(aPeriodos)
						Exit
					EndIf
					If li > 50
						cabec(titulo,"","",nomeprog,tamanho,18)
						PrintOut(li,00,__PrtFatLine(),,)
						li++
					EndIf
					li++
				Enddo
				li+= 2

				nCol := 16
				PrintOut(li,00,"Tot Vl. Produto:",,)
				PrintOut(li,nCol,nTotProd*nCusto,"999999999999.99",)

				li+= 2
				nTotProd := 0
			EndIf


			If lLogMrp
				dbSelectArea("SHG")
				If dbSeek(xFilial("SHG")+cSeekLog)
					If li > 50
						cabec(titulo,"","",nomeprog,tamanho,18)
					EndIf
					PrintOut(li,00,OemToAnsi(If(cPaisLoc$"ANG|PTG","Eventos relacionados com o produto","Eventos relacionados ao produto")),,)
					li++
					li++
					While !EOF() .AND.  xFilial("SHG")+cSeekLog == HG_FILIAL+HG_SEQMRP+HG_COD
						If li > 50
							cabec(titulo,"","",nomeprog,tamanho,18)
						EndIf
						PrintOut(li,00,HG_LOGMRP,,)
						li++
						dbSkip()
					End
					li++
				EndIf
			EndIf
			dbSelectArea("SHA")
		EndIf
		DbGoto(nRec)
		DbSkip(6)
		If lImprimiu
			PrintOut(li,00,__PrtThinLine(),,)
			li++
		EndIf
	End

	If li <> 80
		roda(cbcont,cbtxt)
	EndIf

EndIf
If lContinua .And.  lUsed <> .t. 
	dbSelectArea("SHA")
	dbCloseArea()
	dbSelectArea("SH5")
	dbCloseArea()
EndIf
dbSelectArea("SB1")
dbClearFilter()
dbSetOrder(1)
If aReturn[5] = 1
	Set( 24, "" )
	dbCommitAll()
	ourspool(wnrel)
EndIf
MS_FLUSH()
Return NIL













Static Function R880PER(nTipo)
Local i, dInicio
Local aRet:={}
Local nPosAno, nTamAno, cForAno
Local lConsSabDom:=Nil
Pergunte("MTA712", .F. )
lConsSabDom:=mv_par12 == 1
Pergunte(cPerg, .F. )
If __SetCentury()
	nPosAno := 1
	nTamAno := 4
	cForAno := "ddmmyyyy"
Else
	nPosAno := 3
	nTamAno := 2
	cForAno := "ddmmyy"
EndIf



dbSelectArea("SH5")
dbSetOrder(1)
dbGotop()
While !Eof()





	If H5_ALIAS == "PAR"
		nTipo       := H5_RECNO
		dInicio     := H5_DATAORI
		nPeriodos   := H5_QUANT
		If nTipo == 7
			AADD(aRet,DTOS(CTOD(Alltrim(H5_OPC))))
		EndIf



		c711NumMRP:=H5_NUMMRP
	EndIf
	dbSkip()
End




If !Empty(aRet)
	ASort(aRet)
	For i:=1 To Len(aRet)
		aRet[i] := STOD(aRet[i])
	next
EndIf

If (nTipo == 2)
	While Dow(dInicio)<>2
		dInicio--
	EndDo
ElseIf (nTipo == 3) .or.  (nTipo=4)
		dInicio:= CtoD("01/"+Substr(DtoS(dInicio),5,2)+Substr(DtoC(dInicio),6),cForAno)
ElseIf (nTipo == 5)
	If Month(dInicio) < 4
		dInicio := CtoD("01/01/"+Substr(DtoC(dInicio),7),cForAno)
	ElseIf (Month(dInicio) >= 4) .and.  (Month(dInicio) < 7)
		dInicio := CtoD("01/04/"+Substr(DtoC(dInicio),7),cForAno)
	ElseIf (Month(dInicio) >= 7) .and.  (Month(dInicio) < 10)
		dInicio := CtoD("01/07/"+Substr(DtoC(dInicio),7),cForAno)
	ElseIf (Month(dInicio) >=10)
		dInicio := CtoD("01/10/"+Substr(DtoC(dInicio),7),cForAno)
	EndIf
ElseIf (nTipo == 6)
	If Month(dInicio) <= 6
		dInicio := CtoD("01/01/"+Substr(DtoC(dInicio),7),cForAno)
	Else
		dInicio := CtoD("01/07/"+Substr(DtoC(dInicio),7),cForAno)
	EndIf
EndIf
If nTipo <> 7
	For i := 1 to nPeriodos
		AADD(aRet,dInicio)
		If nTipo == 1
			dInicio ++
			While !lConsSabDom .And.  ( DOW(dInicio) == 1 .or.  DOW(dInicio) == 7 )
				dInicio++
			EndDo
		ElseIf nTipo == 2
			dInicio+=7
		ElseIf nTipo == 3


			dInicio := StoD(If(Substr(DtoS(dInicio),7,2)<"15",Substr(DtoS(dInicio),1,6)+"15", If(Month(dInicio)+1<=12,Str(Year(dInicio),4)+StrZero(Month(dInicio)+1,2)+"01", Str(Year(dInicio)+1,4)+"0101")),cForAno)
		ElseIf nTipo == 4

			dInicio := CtoD("01/"+If(Month(dInicio)+1<=12,StrZero(Month(dInicio)+1,2)+ "/"+Substr(Str(Year(dInicio),4),nPosAno,nTamAno),"01/"+Substr(Str(Year(dInicio)+1,4),nPosAno,nTamAno)),cForAno)
		ElseIf nTipo == 5

			dInicio := CtoD("01/"+If(Month(dInicio)+3<=12,StrZero(Month(dInicio)+3,2)+ "/"+Substr(Str(Year(dInicio),4),nPosAno,nTamAno),"01/"+Substr(Str(Year(dInicio)+1,4),nPosAno,nTamAno)),cForAno)
		ElseIf nTipo == 6

			dInicio := CtoD("01/"+If(Month(dInicio)+6<=12,StrZero(Month(dInicio)+6,2)+ "/"+Substr(Str(Year(dInicio),4),nPosAno,nTamAno),"01/"+Substr(Str(Year(dInicio)+1,4),nPosAno,nTamAno)),cForAno)
		EndIf
	next
EndIf
Return aRet

Static Function R880FILTRO(nParRel,nTipo)
Local ni,lRet := .f. ,cAlias := Alias(),nReg:=0
dbSelectArea("SHA")
nReg:=Recno()
If nParRel == 1
	lRet := .T. 
ElseIf nParRel == 2
	dbSkip(2)
	For ni := 1 to nPeriodos
		cCampo := "HA_PER"+StrZero(ni,3)
		If &(cCampo) <> 0
			lRet := .t. 
			Exit
		EndIf
	Next
	If !lRet
		dbSkip()
		For ni := 1 to nPeriodos
			cCampo := "HA_PER"+StrZero(ni,3)
			If &(cCampo) <> 0
				lRet := .t. 
				Exit
			EndIf
		Next
	EndIf
ElseIf nParRel == 3
	dbSkip(5)
	For ni := 1 to nPeriodos
		cCampo := "HA_PER"+StrZero(ni,3)
		If &(cCampo) <> 0
			lRet := .t. 
			Exit
		EndIf
	Next
EndIf
dbGoto(nReg)
dbSelectArea(cAlias)
Return (lRet)















Function R880Custo(cProd)
Local nCusto := 0







If !(FindFunction("SIGACUS_V") .and.  SIGACUS_V() >= 20050512)
	Final("Atualizar SIGACUS.PRW !!!")
EndIf
If !(FindFunction("SIGACUSA_V") .and.  SIGACUSA_V() >= 20050512)
	Final("Atualizar SIGACUSA.PRX !!!")
EndIf
If !(FindFunction("SIGACUSB_V") .and.  SIGACUSB_V() >= 20050512)
	Final("Atualizar SIGACUSB.PRX !!!")
EndIf

SB1->(MsSeek(xFilial("SB1") + cProd))
If nTipoCusto == 1
	nCusto := RetFldProd(SB1->B1_COD,"B1_CUSTD")
	cStr:="1"
ElseIf nTipoCusto == 2
	nCusto := PegaCmAtu(cProd, RetFldProd(SB1->B1_COD,"B1_LOCPAD"))[1]
	cStr:="2"
ElseIf nTipoCusto == 3
	nCusto := RetFldProd(SB1->B1_COD,"B1_UPRC")
	cStr:="3"
EndIf
Return(nCusto)

















Function R880DivPeriodo(aPeriodos, lRetQuebra)
Local nLenArr := Len(aPeriodos)
Local nLoop   := Nil
Local nAglut  := 1
Local aRetPer := {aPeriodos[1]}
Local aQuebra := {{1, {1}}}

Default lRetQuebra := .F. 

For nLoop := 2 to nLenArr
	If nAglut >= nNumPer
		Aadd(aRetPer, aPeriodos[nLoop])
		Aadd(aQuebra, {Len(aQuebra)+1, {}})
		nAglut := 1
	Else
		nAglut ++
	EndIf
	Aadd(aQuebra[Len(aQuebra), 2], nLoop)
Next

Return(If(lRetQuebra, aQuebra, aRetPer))















Function R880ValField(nPeriodo)
Local nRet  := 0
Local nLoop := 0
Local aPer  := Nil

If ! lQuebraPer
	nRet := SHA->(FieldGet(FieldPos("HA_PER" + StrZero(nPeriodo, 3))))
Else
	aPer := aPerQuebra[nPeriodo, 2]
	For nLoop := 1 to Len(aPer)
		nRet += SHA->(FieldGet(FieldPos("HA_PER" + StrZero(aPer[nLoop], 3))))
		If SHA->HA_TIPO == "1"
			Exit
		ElseIf SHA->HA_TIPO == "5"
			nRet := SHA->(FieldGet(FieldPos("HA_PER" + StrZero(aPer[nLoop], 3))))
		EndIf
	Next
EndIf
Return(nRet)


















Static Function R880LstNec(cChave,aPeriodos,nPerIni)
Local nPos,nI
Local nTamPer   := Len(aPeriodos)
Local lContinua := .F. 
Local aLista    := {}
Local cAlias    := Alias()
Local aAreaSH5  := SH5->(GetArea())

DbSelectArea("SH5")
SH5->(dbSetOrder(3))
SH5->(dbSeek(cChave))
While SH5->(!Eof() .AND.  H5_PRODUTO+H5_ALIAS==cChave)
	lContinua := .F. 
	For nI:=nPerIni To nPerIni+5
		If nI> nTamPer
			Exit
		EndIf
		If aPeriodos[nI]==SH5->H5_DATAORI
			lContinua := .T. 
			Exit
		EndIf
	Next

	If !lContinua
		SH5->(DbSkip())
		Loop
	EndIf

	nPos := AsCan(aLista,{|x|x[1]==SH5->H5_DOC .and.  x[3]==SH5->H5_DATAORI})
	If Empty(nPos) .Or.  !lQuebraPer
		SB1->(MsSeek(xFilial("SB1") + SH5->H5_DOC))
		Aadd(aLista,{SH5->H5_DOC,SH5->H5_QUANT,SH5->H5_DATAORI})
	Else
		aLista[nPos,2] += SH5->H5_QUANT
	EndIf
	SH5->(DbSkip())
EndDo

If !Empty(aLista)
	aLista := aSort(aLista,,,{|x,y|x[1]<y[1]})
EndIf

RestArea(aAreaSH5)
DbSelectArea(cAlias)
Return aClone(aLista)













Static Function AjustaSX1()

dbSelectArea("SX1")
dbSetOrder(1)
If dbSeek("MTR880    01") .And.  AllTrim(X1_DEF03) == "S¾ c/ Nec."
	RecLock("SX1", .F. )
	_FIELD->X1_DEF03 := "Só c/ Nec."
	MsUnLock()
EndIf

Return