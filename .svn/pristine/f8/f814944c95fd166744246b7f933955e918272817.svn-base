#INCLUDE "MATR690.CH" 
#INCLUDE "FIVEWIN.CH"

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ MATR690  ³ Autor ³ Marco Bianchi         ³ Data ³ 06/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Disponibilidade de Estoque para Vendas                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGAFAT - R4                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function MATR690()

Local oReport

Private nQAtu := 0
Private nQEmp := 0
Private nPed := 0
Private nBlo := 0
Private nRes := 0

If FindFunction("TRepInUse") .And. TRepInUse()
	//-- Interface de impressao
	oReport := ReportDef()
	oReport:PrintDialog()
Else
	MATR690R3()
EndIf

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³ Marco Bianchi         ³ Data ³ 06/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatório                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()

Local oReport
Local oDispEst
Local oTemp
Local oTemp2
Local oTemp3
Local oTotUM

#IFNDEF TOP
	Local cAliasSB1 := "SB1"
	Local cAliasSB2 := "SB2"
	Local cAliasSC6 := "SC6"
	Local cAliasSC9 := "SC9"
#ELSE
	Local cAliasSB1 := GetNextAlias()
	Local cAliasSB2 := GetNextAlias()
	Local cAliasSC6 := GetNextAlias()
	Local cAliasSC9 := GetNextAlias()
#ENDIF
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do componente de impressao                                      ³
//³                                                                        ³
//³TReport():New                                                           ³
//³ExpC1 : Nome do relatorio                                               ³
//³ExpC2 : Titulo                                                          ³
//³ExpC3 : Pergunte                                                        ³
//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
//³ExpC5 : Descricao                                                       ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport := TReport():New("MATR690",STR0018,"MTR690", {|oReport| ReportPrint(oReport,oDispEst,oTemp,oTotUM,oTemp2,oTemp3,cAliasSB1,cAliasSB2,cAliasSC6,cAliasSC9)},STR0019 + " " + STR0020)
oReport:SetPortrait()
oReport:SetTotalInLine(.F.)

Pergunte(oReport:uParam,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao da secao utilizada pelo relatorio                               ³
//³                                                                        ³
//³TRSection():New                                                         ³
//³ExpO1 : Objeto TReport que a secao pertence                             ³
//³ExpC2 : Descricao da seçao                                              ³
//³ExpA3 : Array com as tabelas utilizadas pela secao. A primeira tabela   ³
//³        sera considerada como principal para a seção.                   ³
//³ExpA4 : Array com as Ordens do relatório                                ³
//³ExpL5 : Carrega campos do SX3 como celulas                              ³
//³        Default : False                                                 ³
//³ExpL6 : Carrega ordens do Sindex                                        ³
//³        Default : False                                                 ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao Principal                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oDispEst := TRSection():New(oReport,STR0038,{"SB1","TRB"},{STR0028,STR0029,STR0030,STR0031},/*Campos do SX3*/,/*Campos do SIX*/)	// "Disponibilidade de Estoque para Vendas"###"Por Codigo"###"Por Tipo"###"Por Descricao"###"Por Armazem"
oDispEst:SetTotalInLine(.F.)

TRCell():New(oDispEst,"B1_COD"	,/*Tabela*/,RetTitle("B1_COD")	,PesqPict("SB1","B1_COD"		),TamSX3("B1_COD"		)[1],/*lPixel*/,{|| (cAliasSB1)->B1_COD 			})	// Codigo do Produto
TRCell():New(oDispEst,"B1_DESC"	,/*Tabela*/,RetTitle("B1_DESC")	,PesqPict("SB1","B1_DESC"		),TamSX3("B1_DESC"		)[1],/*lPixel*/,{|| (cAliasSB1)->B1_DESC			})	// Descricao do Produto
TRCell():New(oDispEst,"B1_UM"	,/*Tabela*/,STR0021				,PesqPict("SB1","B1_UM"			),TamSX3("B1_UM"		)[1],/*lPixel*/,{|| (cAliasSB1)->B1_UM				})	// "UM"
TRCell():New(oDispEst,"NQATU"	,/*Tabela*/,STR0022				,PesqPict("SB2","B2_QATU"		),TamSX3("B2_QATU"		)[1],/*lPixel*/,{|| nQAtu 							})	// "Saldo em Estoque"
TRCell():New(oDispEst,"NQEMP"	,/*Tabela*/,STR0023				,PesqPict("SB2","B2_QEMP"		),TamSX3("B2_QEMP"		)[1],/*lPixel*/,{|| nQEmp 							})	// "Saldo Empenhado"
TRCell():New(oDispEst,"NPED"	,/*Tabela*/,STR0024				,PesqPict("SC6","C6_QTDVEN"		),TamSX3("C6_QTDVEN"	)[1],/*lPixel*/,{|| nPed 							})	// "Pedidos Pendentes"
TRCell():New(oDispEst,"NBLO"	,/*Tabela*/,STR0025				,PesqPict("SC6","C6_QTDVEN"		),TamSX3("C6_QTDVEN"	)[1],/*lPixel*/,{|| nBlo 							})	// "Pedidos Bloqueados"
TRCell():New(oDispEst,"NRES"	,/*Tabela*/,STR0026				,PesqPict("SB2","B2_RESERVA"	),TamSX3("B2_RESERVA"	)[1],/*lPixel*/,{|| nRes 							})	// "Reserva"
TRCell():New(oDispEst,"NDISP"	,/*Tabela*/,STR0027				,PesqPict("SB2","B2_QATU"		),TamSX3("B2_QATU"		)[1],/*lPixel*/,{|| nQatu-nRes-nPed-nBlo-nQEmp  	})	// "Disponivel p/ Venda"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Esta Secao serve apenas para receber as Querys do SB2, SC6 e SC9       ³
//³ que nao sao as tabelas da Section Principal. A tabela para impressao   ³
//³ e a SB1. Se deixamos o filtro de SB1,SB2,SC6 e SC9 na section principal³
//³ no momento do filtro do SB2 o sistema fecha o filtro do SB1 nao        ³
//³ reconhecendo o alias.											                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oTemp := TRSection():New(oReport,STR0039,{"SB2","TRB"},{STR0028,STR0029,STR0030,STR0031},/*Campos do SX3*/,/*Campos do SIX*/) // "Disponibilidade de Estoque para Vendas"###"Por Codigo"###"Por Tipo"###"Por Descricao"###"Por Armazem"
oTemp:SetTotalInLine(.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Totalizadores por Unidade de Medida no final do Relatorio              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oTotUM := TRSection():New(oReport,STR0036,{"SB1","SB2","SC6","SF4","SC9","TRB"},{STR0028,STR0029,STR0030,STR0031},/*Campos do SX3*/,/*Campos do SIX*/)	// "Disponibilidade de Estoque para Vendas"###"Por Codigo"###"Por Tipo"###"Por Descricao"###"Por Armazem"
oTotUM:SetTotalInLine(.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Esta Secao serve apenas para receber a Query do SB2                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oTemp2 := TRSection():New(oReport,STR0040,{"SC6","SF4"},{STR0028,STR0029,STR0030,STR0031},/*Campos do SX3*/,/*Campos do SIX*/) // "Disponibilidade de Estoque para Vendas"###"Por Codigo"###"Por Tipo"###"Por Descricao"###"Por Armazem"
oTemp2:SetTotalInLine(.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Esta Secao serve apenas para receber a Query do SC9                    ³
//³ Como na Query do SC9 e referenciado o Alias da Query do SC6, devemos 	³
//³ gerar estas querys em secoes diferentes.											³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oTemp3 := TRSection():New(oReport,STR0041,{"SC9"},{STR0028,STR0029,STR0030,STR0031},/*Campos do SX3*/,/*Campos do SIX*/) // "Disponibilidade de Estoque para Vendas"###"Por Codigo"###"Por Tipo"###"Por Descricao"###"Por Armazem"
oTemp3:SetTotalInLine(.F.)


oReport:Section(2):SetEdit(.F.)
oReport:Section(3):SetEdit(.F.)

oReport:Section(2):SetEditCell(.F.)
oReport:Section(4):SetEditCell(.F.)
oReport:Section(5):SetEditCell(.F.)

Return(oReport)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrin³ Autor ³ Marco Bianchi         ³ Data ³06/07/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportPrint(oReport,oDispEst,oTemp,oTotUM,oTemp2,oTemp3,cAliasSB1,cAliasSB2,cAliasSC6,cAliasSC9)

Local lTotSec 	:= IIF(oReport:Section(1):GetOrder() == 2 .Or. oReport:Section(1):GetOrder() == 4,.T.,.F.)	// Imprime Sub-Total apenas se ordenado por Tipo ou Armazem
Local cKey    	:= ""
Local lArqProd  :=SuperGetMV("MV_ARQPROD",.F.,"SB1") == "SBZ"
Local lOk		:= .F.
Local cVar      := ""
Local cAnt      := ""
Local cCond     := ".T."
Local lQuery    := .F.
Local nX        := 0
Local aTotUM    := {}

#IFNDEF TOP
	Local cCondicao := ""
#ELSE
	Local cWhere	:= ""
#ENDIF

oReport:Section(1):Cell("NQATU" ):SetBlock({|| nQAtu })
oReport:Section(1):Cell("NQEMP" ):SetBlock({|| nQEmp })
oReport:Section(1):Cell("NPED"	 ):SetBlock({|| nPed })
oReport:Section(1):Cell("NBLO" ):SetBlock({|| nBlo })
oReport:Section(1):Cell("NRES" ):SetBlock({|| nRes })
nQAtu := 0
nQEmp := 0
nPed := 0
nBlo := 0
nRes := 0


TRFunction():New(oDispEst:Cell("NQATU"	),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,lTotSec/*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oDispEst:Cell("NQEMP"	),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,lTotSec/*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oDispEst:Cell("NPED"	),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,lTotSec/*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oDispEst:Cell("NBLO"	),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,lTotSec/*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oDispEst:Cell("NRES"	),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,lTotSec/*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oDispEst:Cell("NDISP"	),/* cID */,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*uFormula*/,lTotSec/*lEndSection*/,.T./*lEndReport*/,/*lEndPage*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Totalizadores por Unidade de Medida no final do Relatorio              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
TRCell():New(oTotUM,"B1_COD"	,/*Tabela*/,RetTitle("B1_COD")	,PesqPict("SB1","B1_COD"		),TamSX3("B1_COD"		)[1],/*lPixel*/,/*{|| code-block de impressao	}*/ 								 	 )	// Codigo do Produto
TRCell():New(oTotUM,"B1_DESC"	,/*Tabela*/,RetTitle("B1_DESC")	,PesqPict("SB1","B1_DESC"		),TamSX3("B1_DESC"		)[1],/*lPixel*/,/*{|| code-block de impressao	}*/  								 	 )	// Descricao do Produto
TRCell():New(oTotUM,"B1_UM"		,/*Tabela*/,STR0021				,PesqPict("SB1","B1_UM"			),TamSX3("B1_UM"		)[1],/*lPixel*/,{|| aTotUM[nX,1]														})	// "UM"
TRCell():New(oTotUM,"NQATU"		,/*Tabela*/,STR0022				,PesqPict("SB2","B2_QATU"		),TamSX3("B2_QATU"		)[1],/*lPixel*/,{|| aTotUM[nX,2] 														})	// "Saldo em Estoque"
TRCell():New(oTotUM,"NQEMP"		,/*Tabela*/,STR0023				,PesqPict("SB2","B2_QEMP"		),TamSX3("B2_QEMP"		)[1],/*lPixel*/,{|| aTotUM[nX,3] 														})	// "Saldo Empenhado"
TRCell():New(oTotUM,"NPED"		,/*Tabela*/,STR0024				,PesqPict("SC6","C6_QTDVEN"		),TamSX3("C6_QTDVEN"	)[1],/*lPixel*/,{|| aTotUM[nX,4] 														})	// "Pedidos Pendentes"
TRCell():New(oTotUM,"NBLO"		,/*Tabela*/,STR0025				,PesqPict("SC6","C6_QTDVEN"		),TamSX3("C6_QTDVEN"	)[1],/*lPixel*/,{|| aTotUM[nX,5] 														})	// "Pedidos Bloqueados"
TRCell():New(oTotUM,"NRES"		,/*Tabela*/,STR0026				,PesqPict("SB2","B2_RESERVA"	),TamSX3("B2_RESERVA"	)[1],/*lPixel*/,{|| aTotUM[nX,6] 												  		})	// "Reserva"
TRCell():New(oTotUM,"NDISP"		,/*Tabela*/,STR0027				,PesqPict("SB2","B2_QATU"		),TamSX3("B2_QATU"		)[1],/*lPixel*/,{|| aTotUM[nX,2]-aTotUM[nX,3]-aTotUM[nX,4]-aTotUM[nX,5]-aTotUM[nX,6]	})	// "Disponivel p/ Venda"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Nao Imprime o cabecalho da Secao 3                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:Section(3):SetHeaderSection(.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Altera o Titulo do Relatorio de acordo com parametros	 	           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:SetTitle(oReport:Title() + " (" +	IIF(oReport:Section(1):GetOrder() == 1,STR0028,	;		// "Disponibilidade de Estoque para Vendas"###"Por Codigo"
								  	IIF(oReport:Section(1):GetOrder()==2,STR0029,;				// "Por Tipo"
								   	IIF(oReport:Section(1):GetOrder()==3,STR0030,STR0031)));	// "Por Descricao"###"Por Armazem"
								   	+ ")")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Impressao do Cabecalho no top da pagina                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:Section(1):SetHeaderPage()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Transforma parametros Range em expressao SQL                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MakeSqlExpr(oReport:uParam)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Filtragem do relatório                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
#IFDEF TOP
	
	If oReport:Section(1):GetOrder() == 2
		cKey := "%B1_FILIAL,B1_TIPO,B1_COD%"
	ElseIf oReport:Section(1):GetOrder() == 3
		cKey := "%B1_FILIAL,B1_DESC,B1_COD%"
	ElseIf oReport:Section(1):GetOrder() == 4
		cKey    := "%B1_FILIAL,B1_LOCPAD,B1_COD%"
		lOk 	:= .T.
	Else
		cKey := "%B1_FILIAL,B1_COD%"
	EndIf
	
	lQuery    := .T.
	oReport:Section(1):BeginQuery()	
	BeginSql Alias cAliasSB1
	SELECT SB1.*
	FROM %Table:SB1% SB1
	WHERE B1_FILIAL = %xFilial:SB1% 
		AND B1_COD >= %Exp:mv_par01% AND B1_COD <= %Exp:mv_par02%
		AND B1_TIPO >= %Exp:mv_par05% AND B1_TIPO <= %Exp:mv_par06%
		AND SB1.%notdel%
	ORDER BY %Exp:cKey% 
	EndSql 
	oReport:Section(1):EndQuery(/*Array com os parametros do tipo Range*/)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ajuste utilizado para adequar o campo B1_LOCPAD para o novo conceito |
	//| de indicadores de Suprimentos (Tabela SBZ).							 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lOk
		cAliasSB1 := GeraTrab(cAliasSB1)
		dbSelectArea(cAliasSB1)
		dbSeek(xFilial()+mv_par03,.T.)
	Endif
	
#ELSE

	If oReport:Section(1):GetOrder() == 2
		dbSetOrder(2)								// Tipo
		dbSeek(xFilial()+mv_par05,.T.)
		cCond := "B1_TIPO <= mv_par06"
	ElseIf oReport:Section(1):GetOrder() == 3
		dbSetOrder(3)								// Descricao
		dbSeek(xFilial())
		cCond := ".T."
	ElseIf oReport:Section(1):GetOrder() == 4		// Por local
		If lArqProd
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ajuste utilizado para adequar o campo B1_LOCPAD para o novo conceito |
			//| de indicadores de Suprimentos (Tabela SBZ).							 |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cAliasSB1 := GeraTrab(cAliasSB1)
			dbSelectArea(cAliasSB1)
			dbSeek(xFilial()+mv_par03,.T.)
			cCond   := ".T."
			lOk		:= .T.
		Else
			cKey    := "B1_FILIAL+B1_LOCPAD+B1_COD"
			oReport:Section(1):SetFilter("",cKey)
			dbSeek(xFilial()+mv_par03,.T.)
			cCond   := ".T."
		Endif	
	Else
		dbSetOrder(1)								// Codigo
		dbSeek(xFilial()+mv_par01,.T.)
		cCond := "B1_COD <= mv_par02"
	EndIf
	
#ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Impressao do Relatorio                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:Section(1):Init()
dbSelectArea(cAliasSB1)
oReport:SetMeter(RecCount())
While !oReport:Cancel() .And. !(cAliasSB1)->(EOF()) .And. xFilial("SB1")==(cAliasSB1)->B1_FILIAL .And. &cCond
	
	If !lQuery
		If (cAliasSB1)->B1_COD < mv_par01 .Or. (cAliasSB1)->B1_COD > mv_par02
			dbSkip()
			Loop
		EndIf
		If (cAliasSB1)->B1_TIPO < mv_par05 .Or. (cAliasSB1)->B1_TIPO > mv_par06
			dbSkip()
			Loop
		EndIf
	EndIf
	
	//	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//	³ Valida o produto conforme a mascara         ³
	//	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lRet:=ValidMasc((cAliasSB1)->B1_COD,MV_PAR07)
	If !lRet
		dbSkip()
		Loop
	Endif
	
	If oReport:Section(1):GetOrder() == 2		//Tipo
		cAnt	:= "B1_TIPO"
		cVar  	:= B1_TIPO
	ElseIf oReport:Section(1):GetOrder() == 3	//Descricao
		cAnt	:= ".T."
		cVar	:= .T.
	ElseIf oReport:Section(1):GetOrder() == 4	//Por local
		cAnt	:= "B1_LOCPAD"
		cVar	:= B1_LOCPAD
	Else										//Codigo
		cAnt	:= "B1_COD"
		cVar	:= B1_COD
	EndIf
	
	While !oReport:Cancel() .And. !Eof() .And. xFilial("SB1") == (cAliasSB1)->B1_FILIAL .and. &(cAnt) == cVar
		
		If !lQuery
			IF (cAliasSB1)->B1_COD < mv_par01 .Or. (cAliasSB1)->B1_COD > mv_par02
				dbSkip()
				Loop
			EndIF
			If (cAliasSB1)->B1_TIPO < mv_par05 .Or. (cAliasSB1)->B1_TIPO > mv_par06
				dbSkip()
				Loop
			EndIf
		EndIf
		
		//	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//	³ Valida o produto conforme a mascara         ³
		//	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet:=ValidMasc((cAliasSB1)->B1_COD,MV_PAR07)
		If !lRet
			dbSkip()
			Loop
		Endif
		
		DbSelectArea("SB2")
		DbSetOrder(1)
			
		#IFDEF TOP
			lQuery    := .T.
				
			oReport:Section(2):BeginQuery()
			BeginSql Alias cAliasSB2
			SELECT SB2.*
			FROM %Table:SB2% SB2
			WHERE B2_FILIAL = %xFilial:SB2%
				AND SB2.B2_COD = %Exp:(cAliasSB1)->B1_COD%
				AND B2_LOCAL >= %Exp:mv_par03%
				AND B2_LOCAL <= %Exp:mv_par04%
				AND SB2.%notdel%
			ORDER BY B2_FILIAL,B2_COD,B2_LOCAL
			EndSql
			oReport:Section(2):EndQuery()
				
				
		#ELSE
			MsSeek ( xFilial("SB2") + (cAliasSB1)->B1_COD )
		#ENDIF
			
		nQatu := 0
		nQEmp := 0
		nRes  := 0
		While !EOF() .And. xFilial("SB2") == (cAliasSB2)->B2_FILIAL .And.;
			(cAliasSB1)->B1_COD == (cAliasSB2)->B2_COD
			If (cAliasSB2)->B2_LOCAL >= mv_par03 .and. (cAliasSB2)->B2_LOCAL <= mv_par04
				nQatu += (cAliasSB2)->B2_QATU + Iif(MV_PAR10 == 1,0,(cAliasSB2)->B2_SALPEDI)
				nQEmp += (cAliasSB2)->B2_QEMP
				nRes  += (cAliasSB2)->B2_RESERVA
			EndIf
			dbSelectArea(cAliasSB2)
			dbSkip()
		EndDo
		If lQuery
			dbSelectArea(cAliasSB2)
			dbCloseArea()
			dbSelectArea("SB2")
		EndIf
			
		dbSelectArea("SC6")
		dbSetOrder(2)
		#IFDEF TOP
			lQuery    := .T.
				
			oReport:Section(4):BeginQuery()
			BeginSql Alias cALiasSC6
			SELECT C6_FILIAL,C6_PRODUTO,C6_QTDVEN,C6_QTDEMP,C6_QTDENT,C6_QTDRESE,C6_BLQ,C6_NUM,C6_ITEM,C6_LOCAL
			FROM %Table:SC6% SC6, %Table:SF4% SF4
			WHERE C6_FILIAL = %xFilial:SC6%
				AND C6_PRODUTO = %Exp:(cAliasSB1)->B1_COD%
				AND C6_QTDVEN > C6_QTDENT
				AND SC6.%notdel%
				AND F4_FILIAL = %xFilial:SF4%
				AND F4_CODIGO = C6_TES
				AND SF4.F4_ESTOQUE ='S'
				AND SF4.%notdel%
				AND SC6.%notdel%
			ORDER BY C6_FILIAL,C6_PRODUTO,C6_NUM,C6_ITEM
			EndSql
			oReport:Section(4):EndQuery()
				
		#ELSE
			dbSeek( xFilial("SC6")+(cAliasSB1)->B1_COD )
		#ENDIF
		nPed := 0
		nBlo := 0
		While xFilial("SC6") == (cAliasSC6)->C6_FILIAL .And.;
			(cAliasSB1)->B1_COD = (cAliasSC6)->C6_PRODUTO .And. !(cAliasSC6)->(Eof())
				
			If !lQuery
				dbSelectArea("SF4")
				dbSetOrder(1)
				dbSeek( xFilial()+(cAliasSC6)->C6_TES )
				If !Eof()
					If SF4->F4_ESTOQUE # "S"
						dbSelectArea(cAliasSC6)
						dbSkip()
						Loop
					EndIf
				EndIf
			EndIf
			
			dbSelectArea(cAliasSC6)
				
			If (cAliasSC6)->C6_QTDVEN <= (cAliasSC6)->C6_QTDENT
				dbSkip()
				Loop
			EndIf
				
			If mv_par08 == 2 .And. Alltrim((cAliasSC6)->C6_BLQ) == "S"			// Bloqueado
				dbSkip()
				Loop
			EndIf
				
			If mv_par09 == 2 .And. Alltrim((cAliasSC6)->C6_BLQ) == "R"			// Residuo
				dbSkip()
				Loop
			EndIf
				
			If (cAliasSC6)->C6_LOCAL >= mv_par03 .And. (cAliasSC6)->C6_LOCAL <= mv_par04
				nPed := nPed + ((cAliasSC6)->C6_QTDVEN-(cAliasSC6)->C6_QTDENT-(cAliasSC6)->C6_QTDEMP-(cAliasSC6)->C6_QTDRESE)
					
				dbSelectArea("SC9")
				dbSetOrder(1)
				#IFDEF TOP
					lQuery    := .T.
					oReport:Section(5):BeginQuery()
					BeginSql Alias cAliasSC9
					SELECT C9_FILIAL,C9_PEDIDO,C9_ITEM,C9_BLCRED,C9_BLEST,C9_PRODUTO,C9_SEQUEN,C9_QTDLIB,C9_QTDRESE
					FROM %Table:SC9% SC9
					WHERE C9_FILIAL = %xFilial:SC9%
						AND C9_PEDIDO = %Exp:(cAliasSC6)->C6_NUM%
						AND C9_ITEM = %Exp:(cAliasSC6)->C6_ITEM%
						AND C9_PRODUTO = %Exp:(cAliasSC6)->C6_PRODUTO%
						AND SC9.%notdel%
					ORDER BY C9_FILIAL,C9_PEDIDO,C9_ITEM,C9_SEQUEN,C9_PRODUTO
					EndSql
					oReport:Section(5):endQuery()
						
				#ELSE
					MsSeek(xFilial("SC9")+(cAliasSC6)->C6_NUM+(cAliasSC6)->C6_ITEM)
				#ENDIF
				While ( !Eof() .And. (cAliasSC9)->C9_FILIAL == xFilial("SC9") .And.;
					(cAliasSC9)->C9_PEDIDO == (cAliasSC6)->C6_NUM    .And.;
					(cAliasSC9)->C9_ITEM   == (cAliasSC6)->C6_ITEM )
					If ( ( !Empty((cAliasSC9)->C9_BLCRED) .Or. !Empty((cAliasSC9)->C9_BLEST) ) .And.;
						( (cAliasSC9)->C9_BLCRED != "10" .And. (cAliasSC9)->C9_BLEST != "10" ) ).And.;
						(cAliasSC9)->C9_PRODUTO==(cAliasSC6)->C6_PRODUTO
						nBlo += (cAliasSC9)->C9_QTDLIB-(cAliasSC9)->C9_QTDRESE
					EndIf
					dbSelectArea(cAliasSC9)
					dbSkip()
				EndDo
				If lQuery
					dbSelectArea(cAliasSC9)
					dbCloseArea()
					dbSelectArea("SC9")
				EndIf
			EndIf
			dbSelectArea(cAliasSC6)
			dbSkip()
		EndDo
		If lQuery
			dbSelectArea(cAliasSC6)
			dbCloseArea()
			dbSelectArea("SC6")
		EndIf
			
		If nPed != 0 .OR. nQatu != 0 .Or. nBlo <> 0
			dbSelectArea(cAliasSB1)
			oReport:Section(1):PrintLine()
				
			//-- Armazena Total por unidade de medida
			If ( nPos := Ascan( aTotUM, { |x| x[1] == (cAliasSB1)->B1_UM } ) ) == 0
				Aadd( aTotUM, { (cAliasSB1)->B1_UM, nQatu, nQEmp, nPed, nBlo, nRes } )
			Else
				aTotUM[nPos,2] += nQatu
				aTotUM[nPos,3] += nQEmp
				aTotUM[nPos,4] += nPed
				aTotUM[nPos,5] += nBlo
				aTotUM[nPos,6] += nRes
			EndIf
		EndIf
		
		dbSelectArea(cAliasSB1)
		dbSkip()
		oReport:IncMeter()

	EndDo
	
	If oReport:Section(1):GetOrder() == 2 .Or. oReport:Section(1):GetOrder() == 4
		If oReport:Section(1):GetOrder() == 2
			oReport:Section(1):SetTotalText(STR0033 + " " + cVar)
		Else 
			oReport:Section(1):SetTotalText(STR0034 + " " + cVar)		
		EndIf	   
		
		oReport:Section(1):Finish()
		oReport:Section(1):Init()
	EndIf
	
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza Relatorio                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:Section(1):SetPageBreak()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Imprime Totais por Unidade de Medida                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aTotUM)
	//-- Ordena por unidade
	aTotUM := aSort( aTotUM,,,{ |x,y| x[1] < y[1] } )
	oReport:Section(3):Init()
	oReport:Section(3):Cell("B1_COD"	):Hide()
	oReport:Section(3):Cell("B1_DESC"	):Hide()
	oReport:SkipLine()
	oReport:ThinLine()
	oReport:PrintText(STR0035)
	
	For nX := 1 To Len(aTotUM)
		oReport:Section(3):PrintLine()
	Next nCnt
	oReport:ThinLine()
	oReport:Section(3):Finish()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fecha Areas                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lQuery
	dbSelectArea(cAliasSB1)
	dbCloseArea()
Endif	


Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATR690R3³ Autor ³ Wagner Xavier         ³ Data ³ 05.09.91 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Disponibilidade de Estoque para Vendas                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marcelo Pim.³11/12/97³Wagner³Incluir Ordens:Codigo,tipo,desc,local     ³±±
±±³Edson  M.   ³17/07/98³xxxxxx³Correcao no calculo da qtd. em pedido.    ³±±
±±³Wagner      ³17/03/99³xxxxxx³Setar opcao para filtragem                ³±±
±±³ Edson   M. ³30/03/99³XXXXXX³Passar o tamanho na SetPrint.             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Matr690R3()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL titulo :=OemToAnsi(STR0001)	//"Disponibilidade de Estoque para Vendas"
LOCAL cDesc1 :=OemToAnsi(STR0002)	//"Este programa ira emitir a relacao dos Produtos em disponibi-"
LOCAL cDesc2 :=OemToAnsi(STR0003)	//"lidades de Estoque para Vendas."
LOCAL cDesc3 :=""
LOCAL wnrel
LOCAL cString:="SB1"
LOCAL aOrd	 := {OemToAnsi(STR0010),OemToAnsi(STR0011),OemToAnsi(STR0012),OemToAnsi(STR0013)}		//" Por Codigo    "###" Por Tipo      "###" Por Descricao "###" Por Local    "
LOCAL tamanho:= IIf(TamSX3("B1_COD")[1] <= 15,"M","G")

PRIVATE aReturn := { STR0004, 1,STR0005, 1, 2, 1, "",1 }		//"Zebrado"###"Administracao"
PRIVATE nomeprog:="MATR690"
PRIVATE nLastKey:= 0
PRIVATE cPerg   :="MTR690"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

pergunte("MTR690",.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                         ³
//³ mv_par01  // Produto de                                      ³
//³ mv_par02  // Produto ate                                     ³
//³ mv_par03  // Local de                                        ³
//³ mv_par04  // Local Ate                                       ³
//³ mv_par05  // Tipo de                                         ³
//³ mv_par06  // Tipo ate                                        ³
//³ mv_par07  // Mascara                                         ³
//³ mv_par08  // Considera Bloqueado   Sim Nao                   ³
//³ mv_par09  // Considera Residuo	   Sim Nao                   ³
//³ mv_par10  // Quanto ao Estoque - Qtd.Fisica / Fisica Prevista³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:="MATR690"            //Nome Default do relatorio em Disco
wnrel:=SetPrint(cString,wnrel,cPerg,@titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,,Tamanho,,.T.)

If nLastKey==27
	dbClearFilter()
	Return .T.
Endif

SetDefault(aReturn,cString)
If nLastKey==27
	dbClearFilter()
	Return .T.
Endif

RptStatus({|lEnd| C690Imp(aOrd,@lEnd,wnRel,cString,titulo,tamanho)},Titulo)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ C690IMP  ³ Autor ³ Rosane Luciane Chene  ³ Data ³ 09.11.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada do Relatorio                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR690			                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function C690Imp(aOrd,lEnd,WnRel,cString,titulo,tamanho)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL CbTxt
LOCAL cDesc1    := OemToAnsi(STR0002)	//"Este programa ira emitir a relacao dos Produtos em disponibi-"
LOCAL cDesc2    := OemToAnsi(STR0003)	//"lidades de Estoque para Vendas."
LOCAL cDesc3    := ""
Local lArqProd  :=SuperGetMV("MV_ARQPROD",.F.,"SB1") == "SBZ"
Local lOk		:= .F.
Local cQuery    := ""
Local cAliasSB1 := "SB1"
Local cAliasSB2 := "SB2"
Local cAliasSC6 := "SC6"
Local cAliasSC9 := "SC9"
LOCAL CbCont    := ""
Local cabec1    := ""
Local cabec2    := ""
LOCAL cTipant   := ""
Local cKey      := ""
Local cNomArq   := ""
Local cVar      := ""
Local cAnt      := ""
Local cCond     := ".T."
LOCAL limite    :=132
LOCAL lContinua := .T.
Local lQuery    := .F.
Local nAc1      := 0
Local nAc2      := 0
Local nAc3      := 0
Local nAc4      := 0
Local nAc5      := 0
Local nAg1      := 0
Local nAg2      := 0
Local nAg3      := 0
Local nAg4      := 0
Local nAg5      := 0
Local nPed      := 0
Local nBlo      := 0
Local nQatu     := 0
Local nRes      := 0
Local nQEmp     := 0
Local nX        := 0
Local nTipo     := 0
Local aStruSB1  := {}
Local aStruSB2  := {}
Local aStruSC6  := {}
Local aStruSC9  := {}
Local aTotUM    := {}
Local lTamProd	:= (TamSX3("B1_COD")[1] <= 15)
Local cCabAux	:= ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona a ordem escolhida ao titulo do relatorio          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type("NewHead")#"U"
	NewHead += " ("+AllTrim(aOrd[aReturn[8]])+")"
Else
	Titulo += " ("+AllTrim(aOrd[aReturn[8]])+")"
EndIf

If lTamProd
	nTipo  := IIF(aReturn[4]=1,15,18)
	cabec1 := STR0006	//" CODIGO         D  E  S  C  R  I  C  A  O      UM      SALDO EM         SALDO       PEDIDOS       PEDIDOS       RESERVA   DISPONIVEL"
	cabec2 := STR0007	//"                                                        ESTOQUE     EMPENHADO     PENDENTES    BLOQUEADOS                  P/ VENDAS"
Else	//Se o tamanho do codigo produto for maior que 15 caracteres, faz o alinhamento do cabeçalho
	nTipo  := 18
	cCabAux:= STR0006
	cabec1 := SubStr(cCabAux,1,15)+Space(15)+SubStr(cCabAux,16,Len(cCabAux))	//" CODIGO                        D  E  S  C  R  I  C  A  O      UM      SALDO EM         SALDO       PEDIDOS       PEDIDOS       RESERVA   DISPONIVEL"
	cabec2 := Space(15)+STR0007													//"                                                                       ESTOQUE     EMPENHADO     PENDENTES    BLOQUEADOS                  P/ VENDAS"
EndIf
//"XXXXXXXXXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XX  9,999,999.99  9,999,999.99  9,999,999.99  9,999,999.99  9,999,999.99 9,999,999.99
//"          10        20        30        40        50        60        70        80        90        100       110       120       130
//"0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para Impressao do Cabecalho e Rodape    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cbtxt    := SPACE(10)
cbcont   := 0
li       :=80
m_pag    :=1

dbSelectArea("SB1")
#IFDEF TOP
	aStruSB1 := SB1->(dbStruct())
	If aReturn[8] == 2
		dbSetOrder(2)								// Tipo
		cKey := IndexKey()
	ElseIf aReturn[8] == 3
		dbSetOrder(3)								// Descricao
		cKey := IndexKey()		
	ElseIf aReturn[8] == 4						// Por local
		cKey    := "B1_FILIAL+B1_LOCPAD+B1_COD"
		lOk 	:= .T.
	Else
		dbSetOrder(1)								// Codigo
		cKey := IndexKey()		
	EndIf
	lQuery    := .T.
	cAliasSB1 := "MATR609_SB1"
	aStruSB1  := SB1->(dbStruct())

	cQuery := "SELECT SB1.* "
	cQuery += "FROM "+RetSqlName("SB1")+" SB1 "
	cQuery += "WHERE "
	cQuery += "SB1.B1_FILIAL='"+xFilial("SB1")+"' AND "
	cQuery += "SB1.B1_COD >= '"+MV_PAR01+"' AND "
	cQuery += "SB1.B1_COD <= '"+MV_PAR02+"' AND "
	cQuery += "SB1.B1_TIPO >= '"+MV_PAR05+"' AND "
	cQuery += "SB1.B1_TIPO <= '"+MV_PAR06+"' AND "
	cQuery += "SB1.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(cKey)

	cQuery := ChangeQuery(cQuery)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSB1)

	For nX := 1 To Len(aStruSB1)
		If aStruSB1[nX][2]<>"C" .And. FieldPos(aStruSB1[nX][1])<>0
			TcSetField(cAliasSB1,aStruSB1[nX][1],aStruSB1[nX][2],aStruSB1[nX][3],aStruSB1[nX][4])
		EndIf
	Next nX
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ajuste utilizado para adequar o campo B1_LOCPAD para o novo conceito |
	//| de indicadores de Suprimentos (Tabela SBZ).							 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lOk
		cAliasSB1 := GeraTrab(cAliasSB1)
		dbSelectArea(cAliasSB1)
		dbSeek(xFilial()+mv_par03,.T.)
	Endif
#ELSE
	If aReturn[8] == 2
		dbSetOrder(2)								// Tipo
		dbSeek(xFilial()+mv_par05,.T.)
		cCond := "B1_TIPO <= mv_par06"
	ElseIf aReturn[8] == 3
		dbSetOrder(3)								// Descricao
		dbSeek(xFilial())
		cCond := ".T."
	ElseIf aReturn[8] == 4						// Por local
		If lArqProd
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ajuste utilizado para adequar o campo B1_LOCPAD para o novo conceito |
			//| de indicadores de Suprimentos (Tabela SBZ).							 |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cAliasSB1 := GeraTrab(cAliasSB1)
			dbSelectArea(cAliasSB1)
			dbSeek(xFilial()+mv_par03,.T.)
			cCond   := ".T."
			lOk		:= .T.
		Else
			cNomArq := CriaTrab("",.F.)
			cKey    := "B1_FILIAL+B1_LOCPAD+B1_COD"
			IndRegua("SB1",cNomArq,cKey,,,OemToAnsi(STR0014))	//"Selecionando Registros..."
			dbSeek(xFilial()+mv_par03,.T.)
			cCond   := ".T."
		Endif	
	Else
		dbSetOrder(1)								// Codigo
		dbSeek(xFilial()+mv_par01,.T.)
		cCond := "B1_COD <= mv_par02"
	EndIf
#ENDIF
nAg1:=0
nAg2:=0
nAg3:=0
nAg4:=0
nAg5:=0
SB1->(SetRegua(RecCount()))
While !EOF() .And. xFilial("SB1")==(cAliasSB1)->B1_FILIAL .And. &cCond .And. lContinua
	
	IncRegua()
	
	If (cAliasSB1)->B1_COD < mv_par01 .Or. (cAliasSB1)->B1_COD > mv_par02
		dbSkip()
		Loop
	EndIf
	
	If (cAliasSB1)->B1_TIPO < mv_par05 .Or. (cAliasSB1)->B1_TIPO > mv_par06
		dbSkip()
		Loop
	EndIf
	//	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//	³ Valida o produto conforme a mascara         ³
	//	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lRet:=ValidMasc((cAliasSB1)->B1_COD,MV_PAR07)
	If !lRet
		dbSkip()
		Loop
	Endif
	
	If !Empty(aReturn[7]) .And. !&(aReturn[7])
		dbSkip()
		Loop
	Endif
	
	nAc1:=0
	nAc2:=0
	nAc3:=0
	nAc4:=0
	nAc5:=0
	
	If aReturn[8] == 2		//Tipo
		cAnt	:= "B1_TIPO"
		cVar  := B1_TIPO
	ElseIf aReturn[8] == 3	//Descricao
		cAnt	:= ".T."
		cVar	:= .T.
	ElseIf aReturn[8] == 4	//Por local
		cAnt	:= "B1_LOCPAD"
		cVar	:= B1_LOCPAD
	Else							//Codigo
		cAnt	:= "B1_COD"
		cVar	:= B1_COD
	EndIf
	
	While !Eof() .And. xFilial("SB1") == (cAliasSB1)->B1_FILIAL .and. &(cAnt) == cVar
		
		IF lEnd
			@PROW()+1,001 PSAY STR0008	//"CANCELADO PELO OPERADOR"
			lContinua := .F.
			Exit
		EndIF
		
		IncRegua()
		
		IF (cAliasSB1)->B1_COD < mv_par01 .Or. (cAliasSB1)->B1_COD > mv_par02
			dbSkip()
			Loop
		EndIF
		If (cAliasSB1)->B1_TIPO < mv_par05 .Or. (cAliasSB1)->B1_TIPO > mv_par06
			dbSkip()
			Loop
		EndIf
		//	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//	³ Valida o produto conforme a mascara         ³
		//	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet:=ValidMasc((cAliasSB1)->B1_COD,MV_PAR07)
		If !lRet
			dbSkip()
			Loop
		Endif
		
		If (!Empty(aReturn[7]).And.&(aReturn[7])).Or.Empty(aReturn[7])
			
			IF li > 58
				cabec(titulo,cabec1,cabec2,nomeprog,titulo,nTipo)
			EndIF
			
			DbSelectArea("SB2")
			DbSetOrder(1)
			#IFDEF TOP
				lQuery    := .T.
				cAliasSB2 := "MATR690_SB2"
				aStruSB2  := SB2->(dbStruct())
				
				cQuery := "SELECT * "
				cQuery += "FROM "+RetSqlName("SB2")+" SB2 "
				cQuery += "WHERE "
				cQuery += "SB2.B2_FILIAL='"+xFilial("SB2")+"' AND "
				cQuery += "SB2.B2_COD='"+(cAliasSB1)->B1_COD+"' AND "
				cQuery += "SB2.B2_LOCAL>='"+MV_PAR03+"' AND "
				cQuery += "SB2.B2_LOCAL<='"+MV_PAR04+"' AND "
				cQuery += "SB2.D_E_L_E_T_=' ' "
				cQuery += "ORDER BY "+SqlOrder(SB2->(IndexKey()))
				
				cQuery := ChangeQuery(cQuery)
				
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSB2)
				
				For nX := 1 To Len(aStruSB2)
					If aStruSB2[nX][2] <> "C" .And. FieldPos(aStruSB2[nX][1])<>0
						TcSetField(cAliasSB2,aStruSB2[nX][1],aStruSB2[nX][2],aStruSB2[nX][3],aStruSB2[nX][4])
					EndIf
				Next nX
			#ELSE
				MsSeek ( xFilial("SB2") + (cAliasSB1)->B1_COD )
			#ENDIF
			nQatu := 0
			nQEmp := 0
			nRes  := 0
			While !EOF() .And. xFilial("SB2") == (cAliasSB2)->B2_FILIAL .And.;
				(cAliasSB1)->B1_COD == (cAliasSB2)->B2_COD
				If (cAliasSB2)->B2_LOCAL >= mv_par03 .and. (cAliasSB2)->B2_LOCAL <= mv_par04
					nQatu += (cAliasSB2)->B2_QATU + Iif(MV_PAR10 == 1,0,(cAliasSB2)->B2_SALPEDI)
					nQEmp += (cAliasSB2)->B2_QEMP
					nRes  += (cAliasSB2)->B2_RESERVA
				EndIf
				dbSelectArea(cAliasSB2)
				dbSkip()
			EndDo
			If lQuery
				dbSelectArea(cAliasSB2)
				dbCloseArea()
				dbSelectArea("SB2")
			EndIf
			
			dbSelectArea("SC6")
			dbSetOrder(2)
			#IFDEF TOP
				aStruSC6  := SC6->(dbStruct())
				cAliasSC6 := "MATR690_SC6"
				lQuery    := .T.
				
				cQuery    := "SELECT SC6.C6_FILIAL,SC6.C6_PRODUTO,SC6.C6_QTDVEN,SC6.C6_QTDRESE, "
				cQuery    += "SC6.C6_QTDEMP,SC6.C6_QTDENT,SC6.C6_BLQ,SC6.C6_NUM, "
				cQuery    += "SC6.C6_ITEM,SC6.C6_LOCAL "
				cQuery    += "FROM "+RetSqlName("SC6")+" SC6, "
				cQuery    += RetSqlName("SF4")+" SF4 "
				cQuery    += "WHERE "
				cQuery    += "SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
				cQuery    += "SC6.C6_PRODUTO='"+(cAliasSB1)->B1_COD+"' AND "
				cQuery    += "SC6.C6_QTDVEN>SC6.C6_QTDENT AND "
				cQuery    += "SC6.D_E_L_E_T_ = ' ' AND "
				cQuery    += "SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
				cQuery    += "SF4.F4_CODIGO=SC6.C6_TES AND "
				cQuery    += "SF4.F4_ESTOQUE='S' AND "
				cQuery    += "SF4.D_E_L_E_T_ = ' ' "
				cQuery    += "ORDER BY "+SqlOrder(SC6->(Indexkey()))
				
				cQuery    := ChangeQuery(cQuery)
				
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC6)
				
				For nX := 1 To Len(aStruSC6)
					If aStruSC6[nX][2] <> "C" .And. FieldPos(aStruSC6[nX][1])<>0
						TcSetField(cAliasSC6,aStruSC6[nX][1],aStruSC6[nX][2],aStruSC6[nX][3],aStruSC6[nX][4])
					EndIf
				Next nX
			#ELSE
				dbSeek( xFilial("SC6")+(cAliasSB1)->B1_COD )
			#ENDIF
			nPed := 0
			nBlo := 0
			While xFilial("SC6") == (cAliasSC6)->C6_FILIAL .And.;
				(cAliasSB1)->B1_COD = (cAliasSC6)->C6_PRODUTO .And. !(cAliasSC6)->(Eof())
				
				If !lQuery
					dbSelectArea("SF4")
					dbSetOrder(1)
					dbSeek( xFilial()+(cAliasSC6)->C6_TES )
					If !Eof()
						If SF4->F4_ESTOQUE # "S"
							dbSelectArea(cAliasSC6)
							dbSkip()
							Loop
						EndIf
					EndIf
				EndIf
				
				dbSelectArea(cAliasSC6)
				
				If (cAliasSC6)->C6_QTDVEN <= (cAliasSC6)->C6_QTDENT
					dbSkip()
					Loop
				EndIf
				
				If mv_par08 == 2 .And. Alltrim((cAliasSC6)->C6_BLQ) == "S"			// Bloqueado
					dbSkip()
					Loop
				EndIf
				
				If mv_par09 == 2 .And. Alltrim((cAliasSC6)->C6_BLQ) == "R"			// Residuo
					dbSkip()
					Loop
				EndIf
				
				If (cAliasSC6)->C6_LOCAL >= mv_par03 .And. (cAliasSC6)->C6_LOCAL <= mv_par04
					nPed := nPed + ((cAliasSC6)->C6_QTDVEN-(cAliasSC6)->C6_QTDENT-(cAliasSC6)->C6_QTDEMP-(cAliasSC6)->C6_QTDRESE)
					
					dbSelectArea("SC9")
					dbSetOrder(1)
					#IFDEF TOP
						cAliasSC9 := "MATR690_SC9"
						lQuery    := .T.
						aStruSC9  := SC9->(dbStruct())
						
						cQuery := "SELECT C9_FILIAL,C9_PEDIDO,C9_ITEM,C9_BLCRED,C9_BLEST,C9_PRODUTO,C9_SEQUEN, "
						cQuery += "C9_QTDLIB,C9_QTDRESE "
						cQuery += "FROM "+RetSqlName("SC9")+" SC9 "
						cQuery += "WHERE "
						cQuery += "SC9.C9_FILIAL='"+xFilial("SC9")+"' AND "
						cQuery += "SC9.C9_PEDIDO='"+(cAliasSC6)->C6_NUM+"' AND "
						cQuery += "SC9.C9_ITEM='"+(cAliasSC6)->C6_ITEM+"' AND "
						cQuery += "SC9.C9_PRODUTO='"+(cAliasSC6)->C6_PRODUTO+"' AND "
						cQuery += "SC9.D_E_L_E_T_=' ' "
						cQuery += "ORDER BY "+SqlOrder(SC9->(IndexKey()))
						
						cQuery := ChangeQuery(cQuery)

						dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC9)
						
						cQuery := ChangeQuery(cQuery)
						
						For nX := 1 To Len(aStruSC9)
							If aStruSC9[nX][2] <> "C" .And. FieldPos(aStruSC9[nX][1])<>0
								TcSetField(cAliasSC9,aStruSC9[nX][1],aStruSC9[nX][2],aStruSC9[nX][3],aStruSC9[nX][4])
							EndIf
						Next nX
					#ELSE
						MsSeek(xFilial("SC9")+(cAliasSC6)->C6_NUM+(cAliasSC6)->C6_ITEM)
					#ENDIF
					While ( !Eof() .And. (cAliasSC9)->C9_FILIAL == xFilial("SC9") .And.;
						(cAliasSC9)->C9_PEDIDO == (cAliasSC6)->C6_NUM    .And.;
						(cAliasSC9)->C9_ITEM   == (cAliasSC6)->C6_ITEM )
						If ( ( !Empty((cAliasSC9)->C9_BLCRED) .Or. !Empty((cAliasSC9)->C9_BLEST) ) .And.;
							( (cAliasSC9)->C9_BLCRED != "10" .And. (cAliasSC9)->C9_BLEST != "10" ) ).And.;
							(cAliasSC9)->C9_PRODUTO==(cAliasSC6)->C6_PRODUTO
							nBlo += (cAliasSC9)->C9_QTDLIB-(cAliasSC9)->C9_QTDRESE
						EndIf
						dbSelectArea(cAliasSC9)
						dbSkip()
					EndDo
					If lQuery
						dbSelectArea(cAliasSC9)
						dbCloseArea()
						dbSelectArea("SC9")
					EndIf
				EndIf
				dbSelectArea(cAliasSC6)
				dbSkip()
			EndDo
			If lQuery
				dbSelectArea(cAliasSC6)
				dbCloseArea()
				dbSelectArea("SC6")
			EndIf
			
			If nPed != 0 .OR. nQatu != 0 .Or. nBlo <> 0
				dbSelectArea(cAliasSB1)
				@li, 00 PSAY (cAliasSB1)->B1_COD
				@li, IIf(lTamProd, 16, 31) PSAY Substr((cAliasSB1)->B1_DESC,1,30)
				@li, IIf(lTamProd, 47, 62) PSAY (cAliasSB1)->B1_UM
				@li, IIf(lTamProd, 50, 65) PSAY nQatu		      			PicTure PesqPictQt("B2_QATU",14)
				@li, IIf(lTamProd, 65, 80) PSAY nQEmp		      			PicTure PesqPictQt("B2_QEMP",13)
				@li, IIf(lTamProd, 79, 94) PSAY nPed		      			PicTure PesqPictQt("C6_QTDVEN",12)
				@li, IIf(lTamProd, 92,107) PSAY nBlo	  		       		PicTure PesqPictQt("C6_QTDVEN",11)
				@li, IIf(lTamProd,105,120) PSAY nRes						PicTure PesqPictQt("B2_RESERVA",12)
				@li, IIf(lTamProd,118,133) PSAY nQatu-nRes-nPed-nBlo-nQEmp 	PicTure PesqPictQt("B2_QATU",14)
				li++
				nAc1 := nAc1 + nQatu
				nAc2 := nAc2 + nPed
				nAc3 := nAc3 + nBlo
				nAc4 := nAc4 + nRes
				nAc5 := nAc5 + nQEmp
				//-- Armazena Total por unidade de medida
				If ( nPos := Ascan( aTotUM, { |x| x[1] == (cAliasSB1)->B1_UM } ) ) == 0
					Aadd( aTotUM, { (cAliasSB1)->B1_UM, nQatu, nQEmp, nPed, nBlo, nRes } )
				Else
					aTotUM[nPos,2] += nQatu
					aTotUM[nPos,3] += nQEmp
					aTotUM[nPos,4] += nPed
					aTotUM[nPos,5] += nBlo
					aTotUM[nPos,6] += nRes
				EndIf
			EndIf
			
		EndIf
		
		dbSelectArea(cAliasSB1)
		dbSkip()

	EndDo
	
	If aReturn[8] == 1 .or. aReturn[8] == 3
		nAg1 := nAg1 + nAc1
		nAg2 := nAg2 + nAc2
		nAg3 := nAg3 + nAc3
		nAg4 := nAg4 + nAc4
		nAg5 := nAg5 + nAc5
	ElseIf nAc1 != 0 .Or. nAc2 != 0
		If aReturn[8] == 2		//Tipo
			@li, 00 PSAY STR0015 + cVar			//"Sub-Total do Tipo : "
		ElseIf aReturn[8] == 4	//Por local
			@li, 00 PSAY STR0016 + cVar			//"Sub-Total do Local : "
		Endif
		@li, IIf(lTamProd, 50, 65) PSAY nAc1						PicTure PesqPictQt("B2_QATU",14)
		@li, IIf(lTamProd, 65, 80) PSAY nAc5						PicTure PesqPictQt("B2_QEMP",13)
		@li, IIf(lTamProd, 79, 94) PSAY nAc2				    	PicTure PesqPictQt("C6_QTDVEN",12)
		@li, IIf(lTamProd, 92,107) PSAY nAc3						PicTure PesqPictQt("C6_QTDVEN",11)
		@li, IIf(lTamProd,105,120) PSAY nAc4						PicTure PesqPictQt("B2_RESERVA",12)
		@li, IIf(lTamProd,118,133) PSAY nAc1-nAc2-nAc3-nAc4-nAc5	PicTure PesqPictQt("B2_QATU",14)

		nAg1 := nAg1 + nAc1
		nAg2 := nAg2 + nAc2
		nAg3 := nAg3 + nAc3
		nAg4 := nAg4 + nAc4
		nAg5 := nAg5 + nAc5
		li+=2
		
		If li > 55
			cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)
		EndIf
	EndIf
EndDo

If lQuery
	dbSelectArea("MATR609_SB1")
	dbCloseArea()
Endif	

If lOk
	dbSelectArea("TRB")
	dbCloseArea()
Endif

dbSelectArea("SB1")

IF li != 80
	If !Empty(aTotUM)
		//-- Ordena por unidade
		aTotUM := aSort( aTotUM,,,{ |x,y| x[1] < y[1] } )
		li++
		@li,  0 PSAY __PrtThinLine()
		li++
		@li,  0 PSAY STR0017	//"Total Unidade ---> "
		For nX := 1 To Len(aTotUM)
			@li, IIf(lTamProd, 47, 62) PSAY aTotUM[nX,1]
			@li, IIf(lTamProd, 50, 65) PSAY aTotUM[nX,2] PicTure PesqPictQt("B2_QATU",14)
			@li, IIf(lTamProd, 65, 80) PSAY aTotUM[nX,3] PicTure PesqPictQt("B2_QEMP",13)
			@li, IIf(lTamProd, 79, 94) PSAY aTotUM[nX,4] PicTure PesqPictQt("C6_QTDVEN",12)
			@li, IIf(lTamProd, 92,107) PSAY aTotUM[nX,5] PicTure PesqPictQt("C6_QTDVEN",11)
			@li, IIf(lTamProd,105,120) PSAY aTotUM[nX,6] PicTure PesqPictQt("B2_RESERVA",12)
			@li, IIf(lTamProd,118,133) PSAY aTotUM[nX,2]-aTotUM[nX,3]-aTotUM[nX,4]-aTotUM[nX,5]-aTotUM[nX,6]	PicTure PesqPictQt("B2_QATU",14)
			li++
		Next nCnt
		@li,  0 PSAY __PrtThinLine()
		li++
	EndIf
EndIf

IF li != 80
	@li, 0 PSAY STR0009	//"T O T A L ---> "
	@li, IIf(lTamProd, 50, 65) PSAY nAg1                   	PicTure PesqPictQt("B2_QATU",14)
	@li, IIf(lTamProd, 65, 80) PSAY nAg5                   	PicTure PesqPictQt("B2_QEMP",13)
	@li, IIf(lTamProd, 79, 94) PSAY nAg2                   	PicTure PesqPictQt("C6_QTDVEN",12)
	@li, IIf(lTamProd, 92,107) PSAY nAg3                   	PicTure PesqPictQt("C6_QTDVEN",11)
	@li, IIf(lTamProd,105,120) PSAY nAg4                   	PicTure PesqPictQt("B2_RESERVA",12)
	@li, IIf(lTamProd,118,133) PSAY nAg1-nAg2-nAg3-nAg4-nAg5 	PicTure PesqPictQt("B2_QATU",14)
	Roda(cbcont,cbtxt)
EndIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade dos dados                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

dbSelectArea("SC6")
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Devolve a condicao original do arquivo principal             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cString)
RetIndex(cString)
dbSetOrder(1)
dbClearFilter()

If aReturn[8] == 4
	If File(cNomArq+OrdBagExt())
		Ferase(cNomArq+OrdBagExt())
	Endif
Endif

set devi to screen
If aReturn[5] = 1
	Set Printer TO
	dbCommitAll()
	ourspool(wnrel)
Endif

MS_FLUSH()

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GeraTrab ³ Autor ³ Marcos V. Ferreira    ³ Data ³ 12.05.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gera Arquivo de Trabalho                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR690			                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GeraTrab(cAliasTop)
Local aArea		:= GetArea()
Local aStruSB1	:= SB1->(dbStruct())
Local cNomArq	:= CriaTrab(aStruSB1,.T.)
Local cKey		:= "B1_FILIAL+B1_LOCPAD+B1_COD"
Default cAliasTop := "SB1"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao utilizada para verificar a ultima versao dos fontes      ³
//³ SIGACUS.PRW, SIGACUSA.PRX e SIGACUSB.PRX, aplicados no rpo do   |
//| cliente, assim verificando a necessidade de uma atualizacao     |
//| nestes fontes. NAO REMOVER !!!							        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF !(FindFunction("SIGACUS_V") .and. SIGACUS_V() >= 20050512)
    Final("Atualizar SIGACUS.PRW !!!")
Endif
IF !(FindFunction("SIGACUSA_V") .and. SIGACUSA_V() >= 20050512)
    Final("Atualizar SIGACUSA.PRX !!!")
Endif
IF !(FindFunction("SIGACUSB_V") .and. SIGACUSB_V() >= 20050512)
    Final("Atualizar SIGACUSB.PRX !!!")
Endif

Use &cNomArq Alias "TRB" New
IndRegua("TRB",cNomArq,cKey,,,OemToAnsi(STR0014))	//"Selecionando Registros..."

dbSelectArea(cAliasTop)
Do While !(cAliasTop)->(Eof()) .And. xFilial("SB1")==SB1->B1_FILIAL
	If (cAliasTop)->B1_COD < mv_par01 .Or. (cAliasTop)->B1_COD > mv_par02 .Or. (cAliasTop)->B1_TIPO < mv_par05 .Or. (cAliasTop)->B1_TIPO > mv_par06
		DbSkip()
		Loop
	Endif

	dbSelectArea("TRB")
	RecLock("TRB",.T.)
	Replace TRB->B1_FILIAL	With xFilial("SB1")
	Replace TRB->B1_COD		With (cAliasTop)->B1_COD
	Replace TRB->B1_TIPO	With (cAliasTop)->B1_TIPO
	Replace TRB->B1_LOCPAD	With RetFldProd((cAliasTop)->B1_COD,"B1_LOCPAD",cAliasTop)
	Replace TRB->B1_DESC	With (cAliasTop)->B1_DESC
	Replace TRB->B1_UM		With (cAliasTop)->B1_UM	
	MsUnLock()

	dbSelectArea(cAliasTop)
	dbSkip()
EndDo
RestArea(aArea)
Return ("TRB")
